
<!DOCTYPE html>
<html lang="en" >

<head>

  <meta charset="UTF-8">
  <link rel="shortcut icon" type="image/x-icon" href="https://static.codepen.io/assets/favicon/favicon-8ea04875e70c4b0bb41da869e81236e54394d63638a1ef12fa558a4a835f1164.ico" />
  <link rel="mask-icon" type="" href="https://static.codepen.io/assets/favicon/logo-pin-f2d2b6d2c61838f7e76325261b7195c27224080bc099486ddd6dccb469b8e8e6.svg" color="#111" />
  <title>CodePen - Pure CSS masonry layout w/ Flexbox</title>
  
  
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css">

  
      <style>
      .dw {
  -webkit-animation: fade 2s;
          animation: fade 2s;
}
.dw {
  box-sizing: border-box;
  -webkit-column-gap: 0;
          column-gap: 0;
  position: relative;
}
.dw * {
  box-sizing: border-box;
}
.dw__fcs-crtn {
  background-color: #000;
  bottom: 0;
  display: none;
  left: 0;
  opacity: 0.75;
  position: fixed;
  right: 0;
  top: 0;
  z-index: 2;
}
@media (min-width: 768px) {
  .dw {
    -webkit-column-count: 2;
            column-count: 2;
  }
}
@media (min-width: 992px) {
  .dw {
    -webkit-column-count: 3;
            column-count: 3;
  }
}
@media (min-width: 1500px) {
  .dw {
    -webkit-column-count: 4;
            column-count: 4;
  }
}
.dw-pnl {
  margin: 0;
  padding: 5px;
}
.dw-pnl--fcs {
  position: relative;
}
.dw-pnl--fcs:hover {
  z-index: 3;
}
.dw-pnl--fcs:hover ~ .dw__fcs-crtn {
  display: block;
}
.dw-pnl--pls {
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  -webkit-perspective: 1000;
          perspective: 1000;
  transition: -webkit-transform 0.25s ease 0s;
  transition: transform 0.25s ease 0s;
  transition: transform 0.25s ease 0s, -webkit-transform 0.25s ease 0s;
}
.dw-pnl--pls:hover {
  -webkit-transform: scale(1.02);
          transform: scale(1.02);
}
.dw-pnl__cntnt {
  border-radius: 10px;
  overflow: hidden;
  padding: 20px;
  width: 100%;
}
@media (min-width: 768px) {
  .dw-pnl {
    -webkit-column-break-inside: avoid;
            break-inside: avoid;
  }
}
.dw-flp {
  -webkit-perspective: 1000;
          perspective: 1000;
}
.dw-flp:hover .dw-flp__cntnt {
  -webkit-transform: rotateY(180deg);
          transform: rotateY(180deg);
}
.dw-flp--sm {
  height: 200px;
}
.dw-flp--md {
  height: 300px;
}
.dw-flp--lg {
  height: 400px;
}
.dw-flp__pnl {
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  border-radius: 10px;
  height: 100%;
  left: 0;
  overflow: visible;
  padding: 20px;
  position: absolute;
  top: 0;
  width: 100%;
}
.dw-flp__pnl--frnt {
  -webkit-transform: rotateY(0deg);
          transform: rotateY(0deg);
  z-index: 2;
}
.dw-flp__pnl--bck {
  -webkit-transform: rotateY(180deg);
          transform: rotateY(180deg);
}
.dw-flp__cntnt {
  height: 100%;
  overflow: visible;
  position: relative;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  transition: 0.25s;
}
.dw-clstr {
  display: flex;
  padding: 0;
}
@media (max-width: 430px) {
  .dw-clstr--vrt {
    flex-direction: column;
  }
}
.dw-clstr--hrz {
  flex-direction: column;
}
.dw-clstr__sgmnt {
  display: flex;
  flex: 1 1 auto;
}
.dw-clstr__sgmnt--rw {
  display: flex;
}
@media (max-width: 430px) {
  .dw-clstr__sgmnt--rw {
    flex-direction: column;
  }
}
.dw-clstr__sgmnt--clmn {
  flex-direction: column;
}
@media (min-width: 430px) {
  .dw-clstr__sgmnt--hlf {
    flex-basis: 50%;
  }
  .dw-clstr__sgmnt--qrt {
    flex-basis: 25%;
  }
}
/**
  * Theming
*/
* {
  box-sizing: border-box;
}
.tx--left {
  text-align: left;
}
.tx--right {
  text-align: right;
}
.tx--center {
  text-align: center;
}
body {
  font-family: 'Open Sans', sans-serif;
}
h3 {
  margin-top: 0;
}
/**
* Colors
*/
.bd--black {
  border: 4px solid #000;
}
.bg--black {
  background-color: #000;
}
.tx--black {
  color: #000;
}
.bd--red {
  border: 4px solid #e74c3c;
}
.bg--red {
  background-color: #e74c3c;
}
.tx--red {
  color: #e74c3c;
}
.bd--blue {
  border: 4px solid #1e8bc3;
}
.bg--blue {
  background-color: #1e8bc3;
}
.tx--blue {
  color: #1e8bc3;
}
.bd--green {
  border: 4px solid #26a65b;
}
.bg--green {
  background-color: #26a65b;
}
.tx--green {
  color: #26a65b;
}
.bd--grey {
  border: 4px solid #6c7a89;
}
.bg--grey {
  background-color: #6c7a89;
}
.tx--grey {
  color: #6c7a89;
}
.bd--purple {
  border: 4px solid #8e44ad;
}
.bg--purple {
  background-color: #8e44ad;
}
.tx--purple {
  color: #8e44ad;
}
.bd--white {
  border: 4px solid #ecf0f1;
}
.bg--white {
  background-color: #ecf0f1;
}
.tx--white {
  color: #ecf0f1;
}
/**
* Images
*/
img {
  max-height: 300px;
}
img.dw-pnl__cntnt,
img.dw-flp__pnl {
  padding: 0;
}
img.dw-flp__pnl {
  max-height: 100%;
}
@-webkit-keyframes fade {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes fade {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

    </style>

  <script>
  window.console = window.console || function(t) {};
  window.open = function(){ console.log("window.open is disabled."); };
  window.print   = function(){ console.log("window.print is disabled."); };
  window.alert   = function(){ console.log("window.alert is disabled."); };
  window.confirm = function(){ console.log("window.confirm is disabled."); };
  window.prompt  = function(){ console.log("window.prompt is disabled."); };
  window.Notification = function() { console.log("HTML5 notifications are disabled."); };
</script>

  
    <script>
    (function() {
      /*
      * Capture all errors for this pen
      **/
      window.onerror = function(/* message, file, line */) {
        return true;
      };

      /*
      * Capture and kill Web Audio and Speech
      */
      if (typeof (AudioContext) != "undefined" || typeof (webkitAudioContext) != "undefined") {
        AudioContext = function() {
          return false;
        };

        webkitAudioContext = function() {
          return false;
        };
      }

      if (typeof (mozAudioContext) != "undefined") {
        mozAudioContext = function() {
          return false;
        };
      }

      if ("speechSynthesis" in window) {
        window.speechSynthesis = {};
      }
      if ("speak" in speechSynthesis) {
        speechSynthesis.speak = function() {
          return false;
        };
      }

      // Kill the browser asking for access to the video cam or audio
      navigator.getUserMedia = function() {
      };
      navigator.mozGetUserMedia = function() {
      };
      navigator.webkitGetUserMedia = function() {
      };
      navigator.mediaDevices.getUserMedia = function() {
      };

      
      /**
      * Capture and kill animations after X number of seconds
      **/
      var __animationDuration = 4000;
      var __animationsTimedOut = false;
      var __animationRequests = [];
      var __requestAnimationFrame = false;
      var __cancelAnimationFrame = false;
      var x, i;

      var vendorsReqestAnimationFrame = [
        "requestAnimationFrame",
        "mozRequestAnimationFrame",
        "webkitRequestAnimationFrame"
      ];

      // find the browsers requestAnimationFrame and cancelAnimationFrame
      for (x = 0; x < vendorsReqestAnimationFrame.length; x++) {
        if (!__requestAnimationFrame) {
          __requestAnimationFrame = window[vendorsReqestAnimationFrame[x]
          ];
        }
      }

      __cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame;

      // Wrap the requestAnimationFrame so we can stop it in the future
      function __reqFrame(callback, element) {
        // after the timeout we no longer take requests
        var timerID;
        if (__animationsTimedOut) {
          return 0;
        } else {
          timerID = __requestAnimationFrame(callback, element);
          __animationRequests.push(timerID);

          return timerID;
        }
      }

      for (x = 0; x < vendorsReqestAnimationFrame.length; x++) {
        window[vendorsReqestAnimationFrame[x]] = __reqFrame;
      }

      // Cancel the animations after expiration
      setTimeout(function() {
        for (i = 0; i < __animationRequests.length; i++) {
          __cancelAnimationFrame(__animationRequests[i]);
        }

        var ss = window.document.createElement("style");
        ss.textContent = "*, *::before, *::after { animation-play-state: paused !important; }";
        var ref = window.document.getElementsByTagName("script")[0];
        ref.parentNode.insertBefore(ss, ref);

        __animationsTimedOut = true;
      }, __animationDuration, "push");

      /**
      * Capture setInterval and setTimeout to kill after X number of seconds
      **/
      window.setInterval = (function(oldSetInterval) {
        var registered = [];

        function f(a,b) {
          // check if the time has expired,
          // after __animationDuration expires don't take anymore setIntervals
          if (this.timedOut) {
            return 0;
          } else {
            return registered[ registered.length ] = oldSetInterval(a,b);
          }
        }

        f.clearAll = function() {
          var r;

          while (r = registered.pop()) {
            clearInterval( r );
          }

          this.timedOut = true;
        };

        f.timedOut = false;

        return f;
      }(window.setInterval));

      window.setTimeout = (function(oldSetTimeout) {
        var registered = [];

        // because some of our timeouts may time out afterwards
        // we want to make sure they know the secret sauce to still use
        // setTimeout after the time has expired, thats why we have a
        // third param
        function f(a, b, push) {
          // check if the time has expired,
          // after __animationDuration expires don't take anymore requests
          if (this.timedOut && typeof(push) == "undefined") {
            return 0;
          } else {
            // If push is there, never clear that interval
            // so never add it to the registry
            if (push) {
              return oldSetTimeout(a,b);
            } else {
              return registered[ registered.length ] = oldSetTimeout(a,b);
            }
          }
        }

        f.clearAll = function() {
          var r;

          while (r = registered.pop()) {
            clearTimeout( r );
          }

          this.timedOut = true;
        };

        f.timedOut = false;

        return f;
      }(window.setTimeout));

      setTimeout(function() {

        setTimeout.clearAll();
        setInterval.clearAll();

        // Stop Web Animations API
        // Idea from Gregor: https://github.com/CodePen/CodePen-Bug-Reporting-Only/issues/173#issuecomment-203443301
        // Status as of August 2016:
        //  Chrome = stops animations
        //  Safari = doesn't support anyway
        //  Firefox = doesn't stop them, but probably will someday? Doesn't error
        if (document.timeline && typeof document.timeline.getAnimations === "function") {
          document.timeline.getAnimations().map(function(animation) {
            animation.pause();
          });
        }
    
      }, __animationDuration, "push");

    }());
  </script>

  <script>
  if (document.location.search.match(/type=embed/gi)) {
    window.parent.postMessage("resize", "*");
  }
</script>


</head>

<body translate="no"  onload="_l='t';">

  <body class="bg--blue">
  <a href="https://github.com/jh3y/driveway"><img style="position: absolute; top: 0; right: 0; border: 0; z-index: 9999;" src="https://camo.githubusercontent.com/38ef81f8aca64bb9a64448d0d70f1308ef5341ab/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6461726b626c75655f3132313632312e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png"></a>
  <div class="dw">
    <div class="dw-pnl dw-pnl--fcs">
      <div class="dw-pnl__cntnt bd--white tx--white">
        <h1>Pure CSS masonry layout</h1>
      </div>
    </div>
    <div class="dw-pnl">
      <div class="dw-pnl__cntnt bd--white tx--white">
        <ul>
          <li>Configurable</li>
          <li>Responsive</li>
          <li>Supports clusters</li>
        </ul>
      </div>
    </div>
    <div class="dw-pnl "><img src="https://unsplash.it/419/?random" class="dw-pnl__cntnt"/>
    </div>
    <div class="dw-pnl ">
      <div class="dw-pnl__cntnt tx--white bd--white">
        <p>Phasellus malesuada, urna non auctor viverra, libero ex pellentesque urna, id rhoncus eros lacus tristique risus. Interdum et malesuada fames ac ante ipsum primis in faucibus.</p>
      </div>
    </div>
    <div class="dw-pnl ">
      <img src="https://unsplash.it/445/?random" class="dw-pnl__cntnt"/>
    </div>
    <div class="dw-pnl ">
      <img src="https://unsplash.it/423/?random" class="dw-pnl__cntnt"/>
    </div>
    <div class="dw-pnl dw-clstr dw-clstr--hrz">
      <div class="dw-clstr__sgmnt dw-clstr__sgmnt--rw ">
        <div class="dw-pnl dw-clstr__sgmnt ">
          <div class="dw-pnl__cntnt bd--white tx--white">
            <h2>How</h2>
          </div>
        </div>
      </div>
      <div class="dw-clstr__sgmnt dw-clstr__sgmnt--rw ">
        <div class="dw-pnl dw-clstr__sgmnt ">
          <div class="dw-pnl__cntnt bd--white tx--white">
            <h2>about</h2>
          </div>
        </div>
        <div class="dw-pnl dw-clstr__sgmnt ">
          <div class="dw-pnl__cntnt bd--white tx--white">
            <h2>clusters?</h2>
          </div>
        </div>
      </div>
    </div>
    <div class="dw-pnl ">
      <img src="https://unsplash.it/420/?random" class="dw-pnl__cntnt"/>
    </div>
    <div style="height: 200px;" class="dw-pnl dw-flp">
      <div class="dw-pnl__cntnt dw-flp__cntnt">
        <div class="dw-flp__pnl dw-flp__pnl--frnt tx--white bd--white tx--center">
          <h1>You can flip me round</h1>
        </div>
        <div class="dw-flp__pnl dw-flp__pnl--bck bd--white tx--white tx--center">
          <h1>Yeah that's right</h1>
        </div>
      </div>
    </div>
    <div class="dw-pnl dw-clstr dw-clstr--vrt">
      <div class="dw-clstr__sgmnt dw-clstr__sgmnt--clmn ">
        <div class="dw-pnl dw-clstr__sgmnt ">
          <div class="dw-pnl__cntnt bd--white tx--white">
            <h2>A</h2>
          </div>
        </div>
      </div>
      <div class="dw-clstr__sgmnt dw-clstr__sgmnt--clmn ">
        <div class="dw-pnl dw-clstr__sgmnt ">
          <div class="dw-pnl__cntnt bd--white tx--white">
            <h2>vertically</h2>
          </div>
        </div>
        <div class="dw-pnl dw-clstr__sgmnt ">
          <div class="dw-pnl__cntnt bd--white tx--white">
            <h2>flowed</h2>
          </div>
        </div>
        <div class="dw-pnl dw-clstr__sgmnt ">
          <div class="dw-pnl__cntnt bd--white tx--white">
            <h2>cluster</h2>
          </div>
        </div>
      </div>
    </div>
    <div class="dw-pnl "><img src="https://unsplash.it/424/?random" class="dw-pnl__cntnt"/>
    </div>
    <div class="dw-pnl ">
      <div class="dw-pnl__cntnt bd--white bg--darkred tx--white">
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis eu justo ex. Praesent mollis augue sagittis eros pharetra feugiat. Phasellus dignissim est lacus. Sed nec imperdiet dolor, sit amet mattis ex. Sed sed augue eu neque tristique commodo. Mauris aliquet tortor sollicitudin nibh molestie, id egestas nisl sollicitudin. Aliquam erat volutpat. Donec quis ultrices ligula. Cras sed purus risus. Curabitur quis eros eu tortor semper eleifend. Pellentesque lorem elit, dignissim interdum massa id, malesuada rutrum ligula. Suspendisse tempor quis mauris eu facilisis. Phasellus non volutpat diam, non dapibus ligula. Ut non molestie ex, nec sagittis mi. Curabitur suscipit tellus id dolor pretium blandit. Cras tristique tristique pharetra.</p>
      </div>
    </div>
    <div class="dw-pnl "><img src="https://unsplash.it/425/?random" class="dw-pnl__cntnt"/>
    </div>
    <div class="dw-pnl dw-pnl--fcs">
      <div class="dw-pnl__cntnt tx--white bd--white tx--center">
        <h1>Focus on hover</h1>
      </div>
    </div>
    <div class="dw-pnl ">
      <div class="dw-pnl__cntnt tx--white bd--white">
        <h2>Title for some content</h2>
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis eu justo ex. Praesent mollis augue sagittis eros pharetra feugiat. Phasellus dignissim est lacus. Sed nec imperdiet dolor, sit amet mattis ex. Sed sed augue eu neque tristique commodo. Mauris aliquet tortor sollicitudin nibh molestie, id egestas nisl sollicitudin. Aliquam erat volutpat. Donec quis ultrices ligula. Cras sed purus risus. Curabitur quis eros eu tortor semper eleifend.</p>
      </div>
    </div>
    <div class="dw-pnl dw-pnl--pls">
      <div class="dw-pnl__cntnt tx--white bd--white bg--darkred tx--center">
        <h1>Pulse on hover</h1>
      </div>
    </div>
    <div class="dw-pnl "><img src="https://unsplash.it/440/?random" class="dw-pnl__cntnt"/>
    </div>
    <div class="dw__fcs-crtn"></div>
  </div>
</body>
  
  
  
    <script style="display: none !important;">
  (function() {
    var __animationDuration = 4000;

    setTimeout(function() {
      // If onload hasn't been called, stop all requests after 2 seconds
      if (typeof(_l) == "undefined") {
        if (window.stop !== undefined) window.stop();
        else if (document.execCommand !== undefined) document.execCommand("Stop", false);
      }
    }, 2000, "push");

    /*
    * Capture and kill CSS animations after X number of seconds
    */
    function pauseAnimations() {
      var body = document.getElementsByTagName("body")[0];

      if (body.addEventListener) {
        body.addEventListener("webkitAnimationStart", listener, false);
        body.addEventListener("webkitAnimationIteration", listener, false);
        body.addEventListener("animationstart", listener, false);
        body.addEventListener("animationiteration", listener, false);
      }
    }

    function listener(e) {

      var targetEl;

      if (e.type == "webkitAnimationStart" || e.type == "webkitAnimationIteration") {

        targetEl = e.target;

        setTimeout(function() {
          targetEl.style.webkitAnimationPlayState = "paused";
        }, __animationDuration, "push");

      } else if (e.type == "animationstart" || e.type == "animationiteration") {

        targetEl = e.target;

        setTimeout(function() {
          targetEl.style.MozAnimationPlayState = "paused";
        }, __animationDuration, 'push');

      }
    }

    pauseAnimations();

    // Pause all audio elements, allow the audio/video
    // elements to render before stopping them
    function pauseElementTypes(type) {
      for (var i = 0, els = document.getElementsByTagName(type); i < els.length; i++) {
        els[i].pause();
      }
    }

    // Wait until the elements have been created to pause them
    setTimeout(function() {
      pauseElementTypes("audio");
      pauseElementTypes("video");
    }, 100);

  }());
  </script>

  

  <script src="https://static.codepen.io/assets/editor/live/css_reload-5619dc0905a68b2e6298901de54f73cefe4e079f65a75406858d92924b4938bf.js"></script>
</body>

</html>
 
