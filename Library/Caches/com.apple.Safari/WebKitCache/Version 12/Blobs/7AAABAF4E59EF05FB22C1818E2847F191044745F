
<!DOCTYPE html>
<html lang="en" >

<head>

  <meta charset="UTF-8">
  <link rel="shortcut icon" type="image/x-icon" href="https://static.codepen.io/assets/favicon/favicon-8ea04875e70c4b0bb41da869e81236e54394d63638a1ef12fa558a4a835f1164.ico" />
  <link rel="mask-icon" type="" href="https://static.codepen.io/assets/favicon/logo-pin-f2d2b6d2c61838f7e76325261b7195c27224080bc099486ddd6dccb469b8e8e6.svg" color="#111" />
  <title>CodePen - Flexbox Tabs</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  
  
      <style>
      * {margin: 0;padding: 0;}
body {font-family: "Minion Pro", georgia, serif;}
h1 {display: block; text-align: center;}
h1,h2,h3,h4 {font-family: "Myriad Pro", clean, sans-serif;}
strong {font-weight: 900;}
em {font-style: italic;}
h2 {color: #ff5b52;}
p {font-size: 18px; margin-bottom:20px;}
img {max-width:100%; height:auto;}
.wrap {margin: 0 auto;}
.flex {
  display: -webkit-box;   /* OLD: Safari, iOS, Android browser */
  display: -moz-box;      /* OLD: Firefox (buggy) */ 
  display: -ms-flexbox;   /* MID: IE 10 */
  display: -webkit-flex;  /* NEW, Chrome 21+ */
  display: flex;          /* NEW: Opera 12.1, Firefox 22+ */
}
.flex-1 {
  -webkit-box-flex: 1 auto;
  box-flex: 1 auto;
  -webkit-flex: 1 auto;
  -moz-flex: 1 auto;
  -ms-flex: 1 auto;
  flex: 1 auto;
  padding: 30px 0 0 30px;  
}
.flex-change-1,
.flex-v {
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  -ms-box-orient: vertical;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}
.flex-change-2 {
  box-orient: horizontal;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  -ms-box-orient: horizontal;
  -webkit-flex-direction: row;
  -moz-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;    
}
.flex-center-axis {
  -webkit-align-items: center;
  -moz-align-items: center;
  -ms-align-items: center;
  align-items: center;
}
.flex-sm-col-reverse {
  -webkit-box-direction: reverse;
  -moz-box-direction: reverse;
  -ms-box-direction: reverse;
  box-direction: reverse;
  -webkit-flex-direction: column-reverse;
  -moz-flex-direction: column-reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
}
[role="header"],
[role="main"],
[role="navigation"],
[role="complimentary"],
[role="site-info"] {
  padding: 20px 7%;
}
[role="main"] {
  padding: 0 7% 20px;
}
[role="site-info"] {
  background: #eee;
}
[role="header"] {
  background: #ff5b52;
  height: 40px;
}
[role="navigation"] {
  padding-bottom: 0;
}
[role="navigation"] ul {
  list-style: none;
}
[role="navigation"] li {
  margin: 0;
  padding: 0 1px 0 0;
}
[role="navigation"] li:last-child {
  padding-right: 0;
}
[role="navigation"] a {
  display: block;
  background: rgba(0,0,0,.075);
  color: #222;
  padding: 20px;
  text-align: center;
  text-decoration: none;
  font-family: "Myriad Pro", clean, sans-serif;
}
.site-title {
  text-align:center;
  color: white;
}
.page-title {
  text-align: center;
  font-weight: 900;
}
.tabs {
  position: relative;
}
.tabbed-container {
	position: absolute;
	z-index: -1;
	top: 0;
	left: 0;
  padding-bottom: 20px;
  padding-right: 30px;
	background-color: #ddd;
  opacity: 0;
  height: 1px;
  overflow: hidden;
}
.tabbed-container.tabbed-container-active {
	position: relative;
	z-index: 2;
	opacity: 1;
  height: auto;
}
a.nav-active {
	background: #ddd;
}
@media (min-width:900px) {
  .page-title {
    text-align: center; 
    font-weight: 900; 
    font-size: 56px;
  }
  .flex-1 {
    -webkit-box-flex: 1;
    box-flex: 1;
    -webkit-flex: 1;
    -moz-flex: 1;
    -ms-flex: 1;
    flex: 1; 
  }
  .flex-change-1 {
    box-orient: horizontal;
    -webkit-box-orient: horizontal;
    -moz-box-orient: horizontal;
    -ms-box-orient: horizontal;
    -webkit-flex-direction: row;
    -moz-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;    
  }
  .flex-change-2 {
    -webkit-box-orient: vertical;
    -moz-box-orient: vertical;
    -ms-box-orient: vertical;
    -webkit-flex-direction: column;
    -moz-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;    
  }
  .flex-center {
    -webkit-justify-content: center;
    -moz-justify-content: center;
    -ms-justify-content: center;
    justify-content: center;
  }
  .flex-sm-col-reverse {   
    -webkit-box-direction: normal;
    -moz-box-direction: normal;
    -ms-box-direction: normal;
    box-direction: normal;
  }
  [role="header"],
  [role="main"],
  [role="complimentary"] {
    padding: 50px 7%;
  }
  [role="main"] {
    padding: 50px 7% 50px 0;
  }
  [role="navigation"] {
    padding: 50px 0 50px 7%;
  }
  [role="navigation"] li {
    padding: 0 0 1px 0;
  }
}
    </style>

  <script>
  window.console = window.console || function(t) {};
  window.open = function(){ console.log("window.open is disabled."); };
  window.print   = function(){ console.log("window.print is disabled."); };
  window.alert   = function(){ console.log("window.alert is disabled."); };
  window.confirm = function(){ console.log("window.confirm is disabled."); };
  window.prompt  = function(){ console.log("window.prompt is disabled."); };
  window.Notification = function() { console.log("HTML5 notifications are disabled."); };
</script>

  
    <script>
    (function() {
      /*
      * Capture all errors for this pen
      **/
      window.onerror = function(/* message, file, line */) {
        return true;
      };

      /*
      * Capture and kill Web Audio and Speech
      */
      if (typeof (AudioContext) != "undefined" || typeof (webkitAudioContext) != "undefined") {
        AudioContext = function() {
          return false;
        };

        webkitAudioContext = function() {
          return false;
        };
      }

      if (typeof (mozAudioContext) != "undefined") {
        mozAudioContext = function() {
          return false;
        };
      }

      if ("speechSynthesis" in window) {
        window.speechSynthesis = {};
      }
      if ("speak" in speechSynthesis) {
        speechSynthesis.speak = function() {
          return false;
        };
      }

      // Kill the browser asking for access to the video cam or audio
      navigator.getUserMedia = function() {
      };
      navigator.mozGetUserMedia = function() {
      };
      navigator.webkitGetUserMedia = function() {
      };
      navigator.mediaDevices.getUserMedia = function() {
      };

      
      /**
      * Capture and kill animations after X number of seconds
      **/
      var __animationDuration = 4000;
      var __animationsTimedOut = false;
      var __animationRequests = [];
      var __requestAnimationFrame = false;
      var __cancelAnimationFrame = false;
      var x, i;

      var vendorsReqestAnimationFrame = [
        "requestAnimationFrame",
        "mozRequestAnimationFrame",
        "webkitRequestAnimationFrame"
      ];

      // find the browsers requestAnimationFrame and cancelAnimationFrame
      for (x = 0; x < vendorsReqestAnimationFrame.length; x++) {
        if (!__requestAnimationFrame) {
          __requestAnimationFrame = window[vendorsReqestAnimationFrame[x]
          ];
        }
      }

      __cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame;

      // Wrap the requestAnimationFrame so we can stop it in the future
      function __reqFrame(callback, element) {
        // after the timeout we no longer take requests
        var timerID;
        if (__animationsTimedOut) {
          return 0;
        } else {
          timerID = __requestAnimationFrame(callback, element);
          __animationRequests.push(timerID);

          return timerID;
        }
      }

      for (x = 0; x < vendorsReqestAnimationFrame.length; x++) {
        window[vendorsReqestAnimationFrame[x]] = __reqFrame;
      }

      // Cancel the animations after expiration
      setTimeout(function() {
        for (i = 0; i < __animationRequests.length; i++) {
          __cancelAnimationFrame(__animationRequests[i]);
        }

        var ss = window.document.createElement("style");
        ss.textContent = "*, *::before, *::after { animation-play-state: paused !important; }";
        var ref = window.document.getElementsByTagName("script")[0];
        ref.parentNode.insertBefore(ss, ref);

        __animationsTimedOut = true;
      }, __animationDuration, "push");

      /**
      * Capture setInterval and setTimeout to kill after X number of seconds
      **/
      window.setInterval = (function(oldSetInterval) {
        var registered = [];

        function f(a,b) {
          // check if the time has expired,
          // after __animationDuration expires don't take anymore setIntervals
          if (this.timedOut) {
            return 0;
          } else {
            return registered[ registered.length ] = oldSetInterval(a,b);
          }
        }

        f.clearAll = function() {
          var r;

          while (r = registered.pop()) {
            clearInterval( r );
          }

          this.timedOut = true;
        };

        f.timedOut = false;

        return f;
      }(window.setInterval));

      window.setTimeout = (function(oldSetTimeout) {
        var registered = [];

        // because some of our timeouts may time out afterwards
        // we want to make sure they know the secret sauce to still use
        // setTimeout after the time has expired, thats why we have a
        // third param
        function f(a, b, push) {
          // check if the time has expired,
          // after __animationDuration expires don't take anymore requests
          if (this.timedOut && typeof(push) == "undefined") {
            return 0;
          } else {
            // If push is there, never clear that interval
            // so never add it to the registry
            if (push) {
              return oldSetTimeout(a,b);
            } else {
              return registered[ registered.length ] = oldSetTimeout(a,b);
            }
          }
        }

        f.clearAll = function() {
          var r;

          while (r = registered.pop()) {
            clearTimeout( r );
          }

          this.timedOut = true;
        };

        f.timedOut = false;

        return f;
      }(window.setTimeout));

      setTimeout(function() {

        setTimeout.clearAll();
        setInterval.clearAll();

        // Stop Web Animations API
        // Idea from Gregor: https://github.com/CodePen/CodePen-Bug-Reporting-Only/issues/173#issuecomment-203443301
        // Status as of August 2016:
        //  Chrome = stops animations
        //  Safari = doesn't support anyway
        //  Firefox = doesn't stop them, but probably will someday? Doesn't error
        if (document.timeline && typeof document.timeline.getAnimations === "function") {
          document.timeline.getAnimations().map(function(animation) {
            animation.pause();
          });
        }
    
      }, __animationDuration, "push");

    }());
  </script>

  <script>
  if (document.location.search.match(/type=embed/gi)) {
    window.parent.postMessage("resize", "*");
  }
</script>


</head>

<body translate="no"  onload="_l='t';">

  	<body class="flex flex-v">
		<header role="header">
			<div class="wrap">
				<h1 class="site-title">Flexbox Tabs</h1>
			</div>
		</header>
		<div class="flex flex-change-1">
			<nav role="navigation" class="tabbed-nav">
				<div class="wrap">
					<ul class="flex flex-change-2">
						<li class="flex-1"><a href="#tab1">Tab 1</a></li>
						<li class="flex-1"><a href="#tab2">Tab 2</a></li>
						<li class="flex-1"><a href="#tab3">Tab 3</a></li>       
					</ul>                  
				</div>       
			</nav>
			<div role="main" class="tabs flex-1">
				<div id="tab1" class="wrap tabbed-container">          
					<div class="flex flex-change-1 flex-sm-col-reverse">
						<section class="flex-1">
							<h2>Heading 1</h2>
							<p>This is some paragraph text for a tabbed container. This is another sentence in this paragraph. Welp, this is the third sentence with <a href="">a link</a> thrown in. Here we have some <strong>bold text</strong> and well need <em>some emphasis</em> at some point as well.</p>
							<img src="https://placehold.it/675x350">
						</section>
						<section class="flex-1">
							<h2>Heading 2</h2>
							<p>This is some paragraph text for a tabbed container. This is another sentence in this paragraph. Welp, this is the third sentence with <a href="">a link</a> thrown in. Here we have some <strong>bold text</strong> and well need <em>some emphasis</em> at some point as well.</p>
							<img src="https://placehold.it/675x350">
						</section>
						<section class="flex-1">
							<h2>Heading 3</h2>
							<p>This is some paragraph text for a tabbed container. This is another sentence in this paragraph. Welp, this is the third sentence with <a href="">a link</a> thrown in. Here we have some <strong>bold text</strong> and well need <em>some emphasis</em> at some point as well.</p>
							<img src="https://placehold.it/675x350">
						</section>
					</div>
				</div>
				<div id="tab2" class="wrap tabbed-container">
					<div class="flex flex-change-1 flex-center-axis">
						<figure class="flex-1">  
							<img src="https://placehold.it/375x375">
						</figure>
						<figure class="flex-1">  
							<img src="https://placehold.it/375x375">
						</figure>
						<figure class="flex-1">  
							<img src="https://placehold.it/375x375">
						</figure>
					</div>
					<div class="flex flex-change-1 flex-center-axis">
						<figure class="flex-1">  
							<img src="https://placehold.it/220x220">
						</figure>
						<figure class="flex-1">  
							<img src="https://placehold.it/220x220">
						</figure>
						<figure class="flex-1">  
							<img src="https://placehold.it/220x220">
						</figure>
						<figure class="flex-1">  
							<img src="https://placehold.it/220x220">
						</figure>
						<figure class="flex-1">  
							<img src="https://placehold.it/220x220">
						</figure>
					</div>
				</div>
				<div id="tab3" class="wrap tabbed-container">
					<div class="flex flex-change-1">
						<figure class="flex-1">  
							<img src="https://placehold.it/675x350">
						</figure>
						<figure class="flex-1">  
							<img src="https://placehold.it/675x350">
						</figure>
						<figure class="flex-1">  
							<img src="https://placehold.it/675x350">
						</figure>
					</div>
					<div class="flex flex-change-1 flex-sm-col-reverse">
						<section class="flex-1">
							<h2>Heading 1</h2>
							<p>This is some paragraph text for a tabbed container. This is another sentence in this paragraph. Welp, this is the third sentence with <a href="">a link</a> thrown in. Here we have some <strong>bold text</strong> and well need <em>some emphasis</em> at some point as well.</p>
						</section>
						<section class="flex-1">
							<h2>Heading 2</h2>
							<p>This is some paragraph text for a tabbed container. This is another sentence in this paragraph. Welp, this is the third sentence with <a href="">a link</a> thrown in. Here we have some <strong>bold text</strong> and well need <em>some emphasis</em> at some point as well.</p>
						</section>
						<section class="flex-1">
							<h2>Heading 3</h2>
							<p>This is some paragraph text for a tabbed container. This is another sentence in this paragraph. Welp, this is the third sentence with <a href="">a link</a> thrown in. Here we have some <strong>bold text</strong> and well need <em>some emphasis</em> at some point as well.</p>
						</section>
					</div>
				</div>
			</div>
		</div> 
	</body>
    <script src="//static.codepen.io/assets/common/stopExecutionOnTimeout-de7e2ef6bfefd24b79a3f68b414b87b8db5b08439cac3f1012092b2290c719cd.js"></script>

  <script src='//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>

  

    <script >
      var Tabs = {};

Tabs.tabbedContainer = function(selector, containers, nav) {
  $(selector+' #tab1').addClass('tabbed-container-active');
  $(nav+' li:first-child a').addClass('nav-active');
	$(nav+' li a').CodePen_removed_clickfunction(e) {
		e.preventDefault();
		$(nav+' li a').removeClass('nav-active');
		$(this).addClass('nav-active');
		$(containers).removeClass('tabbed-container-active');		
		var $href = $(this).attr('href');
		$($href).addClass('tabbed-container-active');

	});
};

jQuery(document).ready(function($) {
	Tabs.tabbedContainer('.tabs', '.tabbed-container', '.tabbed-nav');
});
      //# sourceURL=pen.js
    </script>



    <script style="display: none !important;">
  (function() {
    var __animationDuration = 4000;

    setTimeout(function() {
      // If onload hasn't been called, stop all requests after 2 seconds
      if (typeof(_l) == "undefined") {
        if (window.stop !== undefined) window.stop();
        else if (document.execCommand !== undefined) document.execCommand("Stop", false);
      }
    }, 2000, "push");

    /*
    * Capture and kill CSS animations after X number of seconds
    */
    function pauseAnimations() {
      var body = document.getElementsByTagName("body")[0];

      if (body.addEventListener) {
        body.addEventListener("webkitAnimationStart", listener, false);
        body.addEventListener("webkitAnimationIteration", listener, false);
        body.addEventListener("animationstart", listener, false);
        body.addEventListener("animationiteration", listener, false);
      }
    }

    function listener(e) {

      var targetEl;

      if (e.type == "webkitAnimationStart" || e.type == "webkitAnimationIteration") {

        targetEl = e.target;

        setTimeout(function() {
          targetEl.style.webkitAnimationPlayState = "paused";
        }, __animationDuration, "push");

      } else if (e.type == "animationstart" || e.type == "animationiteration") {

        targetEl = e.target;

        setTimeout(function() {
          targetEl.style.MozAnimationPlayState = "paused";
        }, __animationDuration, 'push');

      }
    }

    pauseAnimations();

    // Pause all audio elements, allow the audio/video
    // elements to render before stopping them
    function pauseElementTypes(type) {
      for (var i = 0, els = document.getElementsByTagName(type); i < els.length; i++) {
        els[i].pause();
      }
    }

    // Wait until the elements have been created to pause them
    setTimeout(function() {
      pauseElementTypes("audio");
      pauseElementTypes("video");
    }, 100);

  }());
  </script>

  

  <script src="https://static.codepen.io/assets/editor/live/css_reload-5619dc0905a68b2e6298901de54f73cefe4e079f65a75406858d92924b4938bf.js"></script>
</body>

</html>
 
