
<!DOCTYPE html>
<html lang="en" >

<head>

  <meta charset="UTF-8">
  <link rel="shortcut icon" type="image/x-icon" href="https://static.codepen.io/assets/favicon/favicon-8ea04875e70c4b0bb41da869e81236e54394d63638a1ef12fa558a4a835f1164.ico" />
  <link rel="mask-icon" type="" href="https://static.codepen.io/assets/favicon/logo-pin-f2d2b6d2c61838f7e76325261b7195c27224080bc099486ddd6dccb469b8e8e6.svg" color="#111" />
  <title>CodePen - CSS Flexbox Apple Keyboard</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.min.js" type="text/javascript"></script>

<script type="text/javascript" src="https://fast.fonts.net/jsapi/c5ab810d-8100-4223-81cb-576a10c74dc6.js"></script>
  
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css">

  
      <style>
      * {
  box-sizing: inherit;
}
body {
  box-sizing: border-box;
  background-color: #404049;
  font-family: 'VAG Rounded W01 Thin';
}
.container {
  max-width: 816px;
  padding: 30px 8px 8px;
  margin: 60px auto;
  box-shadow: inset 1px 1px 0px #f1f1f1, 3px 3px 6px 3px #303038;
  background-color: #e3e3e3;
  border-radius: 1px 1px 7px 7px;
}
h1 {
  position: relative;
  top: -23px;
  left: 3px;
  height: 0;
  font-size: 12px;
}
h1 a {
  color: inherit;
  text-decoration: none;
  letter-spacing: 0.5px;
}
h1 a:hover {
  color: #ff8855;
  border-bottom: 1px solid;
}
.keyboard-row {
  display: flex;
}
.key {
  position: relative;
  display: inline-block;
  vertical-align: middle;
  text-align: center;
  padding: 3px 2px;
  height: 30px;
  margin: 4px;
  letter-spacing: 0.5px;
  color: #3a3a3a;
  background-color: #f7f7f7;
  flex: 1;
  box-shadow: inset 0 -2px 0 #aaaaaa, inset 0px 1px 1px -1px #fff, 0px 1px 1px 0px #7a7a7a;
  border-radius: 3px;
  text-transform: uppercase;
  font-size: 14px;
  line-height: 1.3;
  white-space: nowrap;
  overflow: hidden;
  user-select: none;
  transition: transform 0.08s ease, background-color 0.08s ease, box-shadow 0.08s ease;
  cursor: pointer;
}
.key:hover {
  background-color: #fbfbfb;
}
.key:active {
  transform: translateY(1.5px);
  box-shadow: inset 0 -0.5px 0 #aaaaaa, inset 0px -1px 1px -1px #fff, 0px 0.5px 0.75px 0px #999;
}
.key span {
  display: inline-block;
  vertical-align: middle;
}
.key::before {
  display: inline-block;
  vertical-align: middle;
  height: 100%;
  content: '';
}
.keyboard-row.thin .key {
  height: 20px;
}
.keyboard-row.bottom-row .key {
  height: 24px;
}
@media (min-width: 640px) {
  .key {
    height: 48px;
  }
  .keyboard-row.thin .key {
    height: 28px;
  }
  .keyboard-row.bottom-row .key {
    height: 55px;
  }
}
.key.extra-size {
  flex: 1.25;
}
.key.extra-size-two {
  flex: 1.625;
}
.key.double-size {
  flex: 2.125;
}
.key.lowercase {
  font-size: 11px;
  text-transform: lowercase;
}
.key.function {
  font-size: 8px;
  text-align: right;
}
.key.function span {
  vertical-align: bottom;
}
.key.lower-right {
  vertical-align: bottom;
  text-align: right;
  padding-right: 5px;
}
.key.lower-left {
  vertical-align: bottom;
  text-align: left;
  padding-left: 5px;
}
.key.lower-center {
  vertical-align: bottom;
}
.key.space-bar {
  flex: 7.2;
}
.key .lower-row-text {
  vertical-align: bottom;
  padding-bottom: 2px;
}
.key .absolute-left,
.key .absolute-right {
  position: absolute;
  top: 5px;
  font-size: 9px;
}
.key .absolute-left.icon,
.key .absolute-right.icon {
  font-size: 12px;
}
.key .absolute-right {
  right: 5px;
}
.key .absolute-left {
  left: 5px;
}
.key .absolute-left.caps-dot {
  top: 3px;
  left: 4px;
}
.bottom-row .arrows {
  display: flex;
  flex: 4;
  justify-content: justify;
  align-items: flex-end;
  padding-bottom: 4px;
}
.bottom-row .arrows .up-down {
  flex: 1.2;
  height: 54px;
  display: flex;
  flex-direction: column;
  margin-left: 4px;
  margin-right: 4px;
}
.bottom-row .arrows .up-down .key {
  margin: 0;
}
.bottom-row .arrows .up-down .key:first-child {
  box-shadow: inset 0 -5px 4px -4px #aaaaaa, inset 0px 1px 1px -1px #fff, 0px 1px 1px 0px #7a7a7a;
  border-bottom-left-radius: 1px;
  border-bottom-right-radius: 1px;
}
.bottom-row .arrows .up-down .key + .key {
  border-top-left-radius: 1px;
  border-top-right-radius: 1px;
}
.bottom-row .arrows .key {
  flex: 1;
  font-size: 7px;
  margin: 0 4px;
  height: 27px;
  font-family: "Georgia", sans-serif;
  color: #555;
}
/* function row icons */
.fn-row-icon {
  background-size: auto 60%;
  background-position: 50% 45%;
  background-repeat: no-repeat;
}
.eject,
.lo-bright,
.hi-bright,
.expose,
.tilez,
.rewind,
.ffwd,
.play-pause,
.mute,
.lo-vol,
.hi-vol,
.eject {
  background-size: auto 60%;
  background-position: 50% 45%;
  background-repeat: no-repeat;
}
.eject {
  background-image: url(//s3-us-west-2.amazonaws.com/s.cdpn.io/8533/apple-icons-01_1.svg);
}
.lo-bright {
  background-image: url(//s3-us-west-2.amazonaws.com/s.cdpn.io/8533/apple-icons-10_1.svg);
}
.hi-bright {
  background-image: url(//s3-us-west-2.amazonaws.com/s.cdpn.io/8533/apple-icons-09_1.svg);
}
.expose {
  background-image: url(//s3-us-west-2.amazonaws.com/s.cdpn.io/8533/apple-icons-08_1.svg);
}
.tilez {
  background-image: url(//s3-us-west-2.amazonaws.com/s.cdpn.io/8533/apple-icons-07_1.svg);
}
.rewind {
  background-image: url(//s3-us-west-2.amazonaws.com/s.cdpn.io/8533/apple-icons-06_1.svg);
}
.ffwd {
  background-image: url(//s3-us-west-2.amazonaws.com/s.cdpn.io/8533/apple-icons-04_1.svg);
}
.play-pause {
  background-image: url(//s3-us-west-2.amazonaws.com/s.cdpn.io/8533/apple-icons-05_1.svg);
}
.mute {
  background-image: url(//s3-us-west-2.amazonaws.com/s.cdpn.io/8533/apple-icons-11.svg);
}
.lo-vol {
  background-image: url(//s3-us-west-2.amazonaws.com/s.cdpn.io/8533/apple-icons-03_1.svg);
}
.hi-vol {
  background-image: url(//s3-us-west-2.amazonaws.com/s.cdpn.io/8533/apple-icons-02_1.svg);
}
.eject {
  background-image: url(//s3-us-west-2.amazonaws.com/s.cdpn.io/8533/apple-icons-01_1.svg);
}

    </style>

  <script>
  window.console = window.console || function(t) {};
  window.open = function(){ console.log("window.open is disabled."); };
  window.print   = function(){ console.log("window.print is disabled."); };
  window.alert   = function(){ console.log("window.alert is disabled."); };
  window.confirm = function(){ console.log("window.confirm is disabled."); };
  window.prompt  = function(){ console.log("window.prompt is disabled."); };
  window.Notification = function() { console.log("HTML5 notifications are disabled."); };
</script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/prefixfree/1.0.7/prefixfree.min.js"></script>

    <script>
    (function() {
      /*
      * Capture all errors for this pen
      **/
      window.onerror = function(/* message, file, line */) {
        return true;
      };

      /*
      * Capture and kill Web Audio and Speech
      */
      if (typeof (AudioContext) != "undefined" || typeof (webkitAudioContext) != "undefined") {
        AudioContext = function() {
          return false;
        };

        webkitAudioContext = function() {
          return false;
        };
      }

      if (typeof (mozAudioContext) != "undefined") {
        mozAudioContext = function() {
          return false;
        };
      }

      if ("speechSynthesis" in window) {
        window.speechSynthesis = {};
      }
      if ("speak" in speechSynthesis) {
        speechSynthesis.speak = function() {
          return false;
        };
      }

      // Kill the browser asking for access to the video cam or audio
      navigator.getUserMedia = function() {
      };
      navigator.mozGetUserMedia = function() {
      };
      navigator.webkitGetUserMedia = function() {
      };
      navigator.mediaDevices.getUserMedia = function() {
      };

      
      /**
      * Capture and kill animations after X number of seconds
      **/
      var __animationDuration = 4000;
      var __animationsTimedOut = false;
      var __animationRequests = [];
      var __requestAnimationFrame = false;
      var __cancelAnimationFrame = false;
      var x, i;

      var vendorsReqestAnimationFrame = [
        "requestAnimationFrame",
        "mozRequestAnimationFrame",
        "webkitRequestAnimationFrame"
      ];

      // find the browsers requestAnimationFrame and cancelAnimationFrame
      for (x = 0; x < vendorsReqestAnimationFrame.length; x++) {
        if (!__requestAnimationFrame) {
          __requestAnimationFrame = window[vendorsReqestAnimationFrame[x]
          ];
        }
      }

      __cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame;

      // Wrap the requestAnimationFrame so we can stop it in the future
      function __reqFrame(callback, element) {
        // after the timeout we no longer take requests
        var timerID;
        if (__animationsTimedOut) {
          return 0;
        } else {
          timerID = __requestAnimationFrame(callback, element);
          __animationRequests.push(timerID);

          return timerID;
        }
      }

      for (x = 0; x < vendorsReqestAnimationFrame.length; x++) {
        window[vendorsReqestAnimationFrame[x]] = __reqFrame;
      }

      // Cancel the animations after expiration
      setTimeout(function() {
        for (i = 0; i < __animationRequests.length; i++) {
          __cancelAnimationFrame(__animationRequests[i]);
        }

        var ss = window.document.createElement("style");
        ss.textContent = "*, *::before, *::after { animation-play-state: paused !important; }";
        var ref = window.document.getElementsByTagName("script")[0];
        ref.parentNode.insertBefore(ss, ref);

        __animationsTimedOut = true;
      }, __animationDuration, "push");

      /**
      * Capture setInterval and setTimeout to kill after X number of seconds
      **/
      window.setInterval = (function(oldSetInterval) {
        var registered = [];

        function f(a,b) {
          // check if the time has expired,
          // after __animationDuration expires don't take anymore setIntervals
          if (this.timedOut) {
            return 0;
          } else {
            return registered[ registered.length ] = oldSetInterval(a,b);
          }
        }

        f.clearAll = function() {
          var r;

          while (r = registered.pop()) {
            clearInterval( r );
          }

          this.timedOut = true;
        };

        f.timedOut = false;

        return f;
      }(window.setInterval));

      window.setTimeout = (function(oldSetTimeout) {
        var registered = [];

        // because some of our timeouts may time out afterwards
        // we want to make sure they know the secret sauce to still use
        // setTimeout after the time has expired, thats why we have a
        // third param
        function f(a, b, push) {
          // check if the time has expired,
          // after __animationDuration expires don't take anymore requests
          if (this.timedOut && typeof(push) == "undefined") {
            return 0;
          } else {
            // If push is there, never clear that interval
            // so never add it to the registry
            if (push) {
              return oldSetTimeout(a,b);
            } else {
              return registered[ registered.length ] = oldSetTimeout(a,b);
            }
          }
        }

        f.clearAll = function() {
          var r;

          while (r = registered.pop()) {
            clearTimeout( r );
          }

          this.timedOut = true;
        };

        f.timedOut = false;

        return f;
      }(window.setTimeout));

      setTimeout(function() {

        setTimeout.clearAll();
        setInterval.clearAll();

        // Stop Web Animations API
        // Idea from Gregor: https://github.com/CodePen/CodePen-Bug-Reporting-Only/issues/173#issuecomment-203443301
        // Status as of August 2016:
        //  Chrome = stops animations
        //  Safari = doesn't support anyway
        //  Firefox = doesn't stop them, but probably will someday? Doesn't error
        if (document.timeline && typeof document.timeline.getAnimations === "function") {
          document.timeline.getAnimations().map(function(animation) {
            animation.pause();
          });
        }
    
      }, __animationDuration, "push");

    }());
  </script>

  <script>
  if (document.location.search.match(/type=embed/gi)) {
    window.parent.postMessage("resize", "*");
  }
</script>


</head>

<body translate="no"  onload="_l='t';">

  
<div class="container">
  <h1 class="title">CSS Flexbox Apple Keyboard by <a href="//olex.co/">Olex</a></h1>
  <div class="keyboard">
    <div class="keyboard-row thin">
      <div class="key lowercase">Esc</div>
      <div class="key function lo-bright"><span>f1</span></div>
      <div class="key function hi-bright"><span>f2</span></div>
      <div class="key function expose"><span>f3</span></div>
      <div class="key function tilez"><span>f4</span></div>
      <div class="key function"><span>f5</span></div>
      <div class="key function"><span>f6</span></div>
      <div class="key function rewind"><span>f7</span></div>
      <div class="key function play-pause"><span>f8</span></div>
      <div class="key function ffwd"><span>f9</span></div>
      <div class="key function mute"><span>f10</span></div>
      <div class="key function lo-vol"><span>f11</span></div>
      <div class="key function hi-vol"><span>f12</span></div>
      <div class="key eject"></div>
    </div>
    <div class="keyboard-row">
      <div class="key"><span>~<br/>`</span></div>
      <div class="key"><span>!<br/>1</span></div>
      <div class="key"><span>@<br/>2</span></div>
      <div class="key"><span>#<br/>3</span></div>
      <div class="key"><span>$<br/>4</span></div>
      <div class="key"><span>%<br/>5</span></div>
      <div class="key"><span>^<br/>6</span></div>
      <div class="key"><span>&amp;<br/>7</span></div>
      <div class="key"><span>*<br/>8</span></div>
      <div class="key"><span>(<br/>9</span></div>
      <div class="key"><span>)<br/>0</span></div>
      <div class="key"><span>_<br/>-</span></div>
      <div class="key"><span>+<br/>=</span></div>
      <div class="key extra-size lowercase lower-right"><span class="lower-row-text">delete</span></div>
    </div>
    <div class="keyboard-row">
      <div class="key extra-size lowercase lower-left"><span class="lower-row-text">tab</span></div>
      <div class="key">Q</div>
      <div class="key">W</div>
      <div class="key">E</div>
      <div class="key">R</div>
      <div class="key">T</div>
      <div class="key">Y</div>
      <div class="key">U</div>
      <div class="key">I</div>
      <div class="key">O</div>
      <div class="key">P</div>
      <div class="key"><span>{<br/>[</span></div>
      <div class="key"><span>}<br/>]</span></div>
      <div class="key"><span>|<br/>\</span></div>
    </div>
    <div class="keyboard-row">
      <div class="key lowercase lower-left extra-size-two"><span class="lower-row-text">caps lock</span><span class="absolute-left caps-dot">&bull;</span></div>
      <div class="key">A</div>
      <div class="key">S</div>
      <div class="key">D</div>
      <div class="key">F</div>
      <div class="key">G</div>
      <div class="key">H</div>
      <div class="key">J</div>
      <div class="key">K</div>
      <div class="key">L</div>
      <div class="key"><span>:<br/>;</span></div>
      <div class="key"><span>"<br/>'</span></div>
      <div class="key extra-size-two lowercase lower-right"><span class="lower-row-text">return</span><span class="absolute-right">enter</span></div>
    </div>
    <div class="keyboard-row">
      <div class="key double-size lowercase lower-left"><span class="lower-row-text">shift</span></div>
      <div class="key">Z</div>
      <div class="key">X</div>
      <div class="key">C</div>
      <div class="key">V</div>
      <div class="key">B</div>
      <div class="key">N</div>
      <div class="key">M</div>
      <div class="key"><span>&lt;<br/>,</span></div>
      <div class="key"><span>&gt;<br/>.</span></div>
      <div class="key"><span>?<br/>/</span></div>
      <div class="key double-size lowercase lower-right"><span class="lower-row-text">shift</span></div>
    </div>
    <div class="keyboard-row bottom-row">
      <div class="key lower-left lowercase"><span class="lower-row-text">fn</span></div>
      <div class="key lower-left lowercase"><span class="lower-row-text">control</span></div>
      <div class="key lower-left lowercase"><span class="lower-row-text">option</span><span class="absolute-left">alt</span></div>
      <div class="key lower-center lowercase extra-size-two"><span class="lower-row-text">command</span><span class="absolute-right icon">&#8984;</span></div>
      <div class="key space-bar"></div>
      <div class="key lower-center lowercase extra-size-two"><span class="lower-row-text">command</span><span class="absolute-left icon">&#8984;</span></div>
      <div class="key lower-right lowercase"><span class="lower-row-text">option</span><span class="absolute-right">alt</span></div>
      <div class="arrows">
          <div class="key">&#9668;</div>
          <div class="up-down">
            <div class="key">&#9650;</div>
            <div class="key">&#9660;</div>
          </div>
          <div class="key">&#9658;</div>
        </div>
      </div>
    </div>
  </div>
</div>
  
  <script src='//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>

  
    <script style="display: none !important;">
  (function() {
    var __animationDuration = 4000;

    setTimeout(function() {
      // If onload hasn't been called, stop all requests after 2 seconds
      if (typeof(_l) == "undefined") {
        if (window.stop !== undefined) window.stop();
        else if (document.execCommand !== undefined) document.execCommand("Stop", false);
      }
    }, 2000, "push");

    /*
    * Capture and kill CSS animations after X number of seconds
    */
    function pauseAnimations() {
      var body = document.getElementsByTagName("body")[0];

      if (body.addEventListener) {
        body.addEventListener("webkitAnimationStart", listener, false);
        body.addEventListener("webkitAnimationIteration", listener, false);
        body.addEventListener("animationstart", listener, false);
        body.addEventListener("animationiteration", listener, false);
      }
    }

    function listener(e) {

      var targetEl;

      if (e.type == "webkitAnimationStart" || e.type == "webkitAnimationIteration") {

        targetEl = e.target;

        setTimeout(function() {
          targetEl.style.webkitAnimationPlayState = "paused";
        }, __animationDuration, "push");

      } else if (e.type == "animationstart" || e.type == "animationiteration") {

        targetEl = e.target;

        setTimeout(function() {
          targetEl.style.MozAnimationPlayState = "paused";
        }, __animationDuration, 'push');

      }
    }

    pauseAnimations();

    // Pause all audio elements, allow the audio/video
    // elements to render before stopping them
    function pauseElementTypes(type) {
      for (var i = 0, els = document.getElementsByTagName(type); i < els.length; i++) {
        els[i].pause();
      }
    }

    // Wait until the elements have been created to pause them
    setTimeout(function() {
      pauseElementTypes("audio");
      pauseElementTypes("video");
    }, 100);

  }());
  </script>

  

  <script src="https://static.codepen.io/assets/editor/live/css_reload-5619dc0905a68b2e6298901de54f73cefe4e079f65a75406858d92924b4938bf.js"></script>
</body>

</html>
 
