
<!DOCTYPE html>
<html lang="en" >

<head>

  <meta charset="UTF-8">
  <link rel="shortcut icon" type="image/x-icon" href="https://static.codepen.io/assets/favicon/favicon-8ea04875e70c4b0bb41da869e81236e54394d63638a1ef12fa558a4a835f1164.ico" />
  <link rel="mask-icon" type="" href="https://static.codepen.io/assets/favicon/logo-pin-f2d2b6d2c61838f7e76325261b7195c27224080bc099486ddd6dccb469b8e8e6.svg" color="#111" />
  <title>CodePen - VSCode UI - Rebuild - work in progress</title>
  
  
  
  
      <style>
      :root {
  --darkest-bg: rgb(30, 30, 30);
  --darker-bg: rgb(37, 37, 38);
  --iconBar-bg: rgb(50, 50, 50);
  --dark-bg: rgb(60, 60, 60);
  --light: rgb(204, 204, 204);
  --primary-light: rgb(173, 173, 173);
  --secondary-light: rgb(133, 133, 133);
  --highlight: amber;
  --blue: rgb(0, 122, 204);
  --btnActive: rgb(80, 80, 80);
  --hover: rgb(33, 71, 112);
}

* {
  box-sizing: border-box;
}
body {
  background: #eee;
  bottom: 0;
  position: absolute;
  top: 0;
  right: 0;
  padding: 0;
  left: 0;
  margin: 0;

  font-size: 13px;
  line-height: 15px;
  font-family: "-apple-system", "BlinkMacSystemFont", "Segoe WPC", "Segoe UI",
    "HelveticaNeue-Light", "Ubuntu", "Droid Sans", sans-serif;
}
.window {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 100%;
}
.topMenu {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  background: var(--dark-bg);
  color: var(--light);
  height: 30px;
  line-height: 30px;
  user-select: none;
}
.iconGroup,
.group {
  display: flex;
}

.iconGroup div {
  width: 3em;
  text-align: center;
}
.content {
  background: var(--darkest-bg);
  display: flex;
  flex: auto;
  position: relative;
  overflow: hidden;
}

.iconBar {
  background: var(--iconBar-bg);

  color: var(--light);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  text-align: center;
  width: 50px;
  line-height: 50px;
}
.primaryIcons {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  padding-top: 20px;
}

.footer {
  background: var(--blue);
  color: var(--light);
  height: 20px;
  line-height: 20px;
  display: flex;
  justify-content: space-between;
  overflow: hidden;
}
.btnGroup {
  display: flex;
}
.btnGroup > div {
  transition: background 400ms;
}
.btnGroup div:hover {
  background: var(--btnActive);
}

.logo {
  display: inline-block;
  width: 13px;
  height: 13px;
  margin-top: 2px;
  margin-left: 10px;
  margin-right: 10px;
  stroke-width: 0;
  fill: var(--highlight);
}
.icon {
  width: 13px;
  height: 13px;
}
.explorer {
  width: 300px;
  background: var(--darker-bg);
}
.explorer .title {
  height: 36px;
  line-height: 36px;
  text-transform: uppercase;
  padding-left: 24px;
  color: var(--primary-light);
}
.explorer .list .folder {
  font-weight: bold;
  color: var(--primary-light);
  line-height: 20px;
  display: flex;
  background: var(--dark-bg);
  text-transform: uppercase;
  font-size: 10px;
  padding-left: 10px;
}
.editor {
  flex: auto;
  background: var(--darkest-bg);
}
.editor .tabs {
  display: flex;
  background: var(--darker-bg);
  height: 36px;
  line-height: 36px;
  color: var(--primary-light);
  box-shadow: 1px 3px 2px 0px #111;
  overflow: hidden;
}
.editor .tabs div {
  overflow: hidden;
  min-width: 100px;
  padding-left: 20px;
  border-right: 1px solid var(--darkest-bg);
  background: rgb(45, 45, 45);
}
.editor .tabs div:last-child {
  border-right: none;
}
.activeTab {
  background: var(--darkest-bg) !important;
}
.iconBar div {
  transition: all 400ms;
}
.iconBar svg {
  width: 25px;
  height: 25px;
}
.iconBar div:hover {
  cursor: pointer;
}
.iconBar div:hover > svg path {
  fill: #fff;
}

.footer .group div {
  margin-left: 5px;
  margin-right: 5px;
}

/* Dropdown */
.btnGroup > .dropdown {
  position: relative;
}

.btnGroup label {
  position: relative;
  display: block;
  padding-left: 0.5em;
  padding-right: 0.5em;
}

.btnGroup input[type="radio"] {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  margin: 0;
  z-index: 1;
}

.btnGroup ul {
  position: absolute;
  top: 100%;
  opacity: 0;
  left: 0;
  list-style-type: none;
  padding: 0;
  margin: 0;
  box-shadow: 0px 2px 1px 1px #111;
  background: var(--darkest-bg);
  padding-bottom: 0.5em;
  padding-top: 0.5em;
}

.btnGroup ul li {
  min-width: 300px;
  display: flex;
  justify-content: space-between;
  padding: 0 2em 0 2em;
}

.btnGroup a {
  color: var(--primary-light);
  text-decoration: none;
}

input[type="radio"]:checked ~ ul {
  z-index: 1;
  opacity: 1;
}

input[type="radio"]:checked ~ ul li:hover {
  background: var(--hover);
}

.btnGroup ul hr {
  margin-left: 1em;
  margin-right: 1em;
  border: none;
  border-top: 1px solid var(--secondary-light);
  opacity: 0.75;
}

    </style>

  <script>
  window.console = window.console || function(t) {};
  window.open = function(){ console.log("window.open is disabled."); };
  window.print   = function(){ console.log("window.print is disabled."); };
  window.alert   = function(){ console.log("window.alert is disabled."); };
  window.confirm = function(){ console.log("window.confirm is disabled."); };
  window.prompt  = function(){ console.log("window.prompt is disabled."); };
  window.Notification = function() { console.log("HTML5 notifications are disabled."); };
</script>

  
    <script>
    (function() {
      /*
      * Capture all errors for this pen
      **/
      window.onerror = function(/* message, file, line */) {
        return true;
      };

      /*
      * Capture and kill Web Audio and Speech
      */
      if (typeof (AudioContext) != "undefined" || typeof (webkitAudioContext) != "undefined") {
        AudioContext = function() {
          return false;
        };

        webkitAudioContext = function() {
          return false;
        };
      }

      if (typeof (mozAudioContext) != "undefined") {
        mozAudioContext = function() {
          return false;
        };
      }

      if ("speechSynthesis" in window) {
        window.speechSynthesis = {};
      }
      if ("speak" in speechSynthesis) {
        speechSynthesis.speak = function() {
          return false;
        };
      }

      // Kill the browser asking for access to the video cam or audio
      navigator.getUserMedia = function() {
      };
      navigator.mozGetUserMedia = function() {
      };
      navigator.webkitGetUserMedia = function() {
      };
      navigator.mediaDevices.getUserMedia = function() {
      };

      
      /**
      * Capture and kill animations after X number of seconds
      **/
      var __animationDuration = 4000;
      var __animationsTimedOut = false;
      var __animationRequests = [];
      var __requestAnimationFrame = false;
      var __cancelAnimationFrame = false;
      var x, i;

      var vendorsReqestAnimationFrame = [
        "requestAnimationFrame",
        "mozRequestAnimationFrame",
        "webkitRequestAnimationFrame"
      ];

      // find the browsers requestAnimationFrame and cancelAnimationFrame
      for (x = 0; x < vendorsReqestAnimationFrame.length; x++) {
        if (!__requestAnimationFrame) {
          __requestAnimationFrame = window[vendorsReqestAnimationFrame[x]
          ];
        }
      }

      __cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame;

      // Wrap the requestAnimationFrame so we can stop it in the future
      function __reqFrame(callback, element) {
        // after the timeout we no longer take requests
        var timerID;
        if (__animationsTimedOut) {
          return 0;
        } else {
          timerID = __requestAnimationFrame(callback, element);
          __animationRequests.push(timerID);

          return timerID;
        }
      }

      for (x = 0; x < vendorsReqestAnimationFrame.length; x++) {
        window[vendorsReqestAnimationFrame[x]] = __reqFrame;
      }

      // Cancel the animations after expiration
      setTimeout(function() {
        for (i = 0; i < __animationRequests.length; i++) {
          __cancelAnimationFrame(__animationRequests[i]);
        }

        var ss = window.document.createElement("style");
        ss.textContent = "*, *::before, *::after { animation-play-state: paused !important; }";
        var ref = window.document.getElementsByTagName("script")[0];
        ref.parentNode.insertBefore(ss, ref);

        __animationsTimedOut = true;
      }, __animationDuration, "push");

      /**
      * Capture setInterval and setTimeout to kill after X number of seconds
      **/
      window.setInterval = (function(oldSetInterval) {
        var registered = [];

        function f(a,b) {
          // check if the time has expired,
          // after __animationDuration expires don't take anymore setIntervals
          if (this.timedOut) {
            return 0;
          } else {
            return registered[ registered.length ] = oldSetInterval(a,b);
          }
        }

        f.clearAll = function() {
          var r;

          while (r = registered.pop()) {
            clearInterval( r );
          }

          this.timedOut = true;
        };

        f.timedOut = false;

        return f;
      }(window.setInterval));

      window.setTimeout = (function(oldSetTimeout) {
        var registered = [];

        // because some of our timeouts may time out afterwards
        // we want to make sure they know the secret sauce to still use
        // setTimeout after the time has expired, thats why we have a
        // third param
        function f(a, b, push) {
          // check if the time has expired,
          // after __animationDuration expires don't take anymore requests
          if (this.timedOut && typeof(push) == "undefined") {
            return 0;
          } else {
            // If push is there, never clear that interval
            // so never add it to the registry
            if (push) {
              return oldSetTimeout(a,b);
            } else {
              return registered[ registered.length ] = oldSetTimeout(a,b);
            }
          }
        }

        f.clearAll = function() {
          var r;

          while (r = registered.pop()) {
            clearTimeout( r );
          }

          this.timedOut = true;
        };

        f.timedOut = false;

        return f;
      }(window.setTimeout));

      setTimeout(function() {

        setTimeout.clearAll();
        setInterval.clearAll();

        // Stop Web Animations API
        // Idea from Gregor: https://github.com/CodePen/CodePen-Bug-Reporting-Only/issues/173#issuecomment-203443301
        // Status as of August 2016:
        //  Chrome = stops animations
        //  Safari = doesn't support anyway
        //  Firefox = doesn't stop them, but probably will someday? Doesn't error
        if (document.timeline && typeof document.timeline.getAnimations === "function") {
          document.timeline.getAnimations().map(function(animation) {
            animation.pause();
          });
        }
    
      }, __animationDuration, "push");

    }());
  </script>

  <script>
  if (document.location.search.match(/type=embed/gi)) {
    window.parent.postMessage("resize", "*");
  }
</script>


</head>

<body translate="no"  onload="_l='t';">

  <body>
  <div class="window">
    <div class="topMenu">
      <div class="group">
        <div class="logo"><svg id="logo" viewBox="0 0 32 32"> <path fill="#f7df1e" style="fill: var(--color3, #f7df1e)" d="M0 0h32v32h-32v-32zM29.379 24.368c-0.233-1.46-1.184-2.687-4.004-3.831-0.981-0.46-2.072-0.78-2.396-1.52-0.121-0.44-0.14-0.68-0.061-0.94 0.2-0.861 1.22-1.12 2.020-0.88 0.52 0.16 1 0.56 1.301 1.2 1.379-0.901 1.379-0.901 2.34-1.5-0.36-0.56-0.539-0.801-0.781-1.040-0.84-0.94-1.959-1.42-3.779-1.379l-0.94 0.119c-0.901 0.22-1.76 0.7-2.28 1.34-1.52 1.721-1.081 4.721 0.759 5.961 1.82 1.36 4.481 1.659 4.821 2.94 0.32 1.56-1.16 2.060-2.621 1.88-1.081-0.24-1.68-0.781-2.34-1.781l-2.44 1.401c0.28 0.64 0.6 0.919 1.080 1.479 2.32 2.341 8.12 2.221 9.161-1.339 0.039-0.12 0.32-0.94 0.099-2.2l0.061 0.089zM17.401 14.708h-2.997c0 2.584-0.012 5.152-0.012 7.74 0 1.643 0.084 3.151-0.184 3.615-0.44 0.919-1.573 0.801-2.088 0.64-0.528-0.261-0.796-0.621-1.107-1.14-0.084-0.14-0.147-0.261-0.169-0.261l-2.433 1.5c0.407 0.84 1 1.563 1.765 2.023 1.14 0.68 2.672 0.9 4.276 0.54 1.044-0.301 1.944-0.921 2.415-1.881 0.68-1.24 0.536-2.76 0.529-4.461 0.016-2.739 0-5.479 0-8.239l0.005-0.075z"></path></svg></div>
        <div class="btnGroup">
          <div class="dropdown">
            <input type="radio" id="file_toggle" name="menuTabs">
            <label for="file_toggle">File</label>

            <ul>
              <li><a href="#">New File</a><span>Ctrl+N</span></li>
              <li><a href="#">New Window</a><span>Ctrl+Shift+N</span></li>
              <hr>
              <li><a href="#">Open File...</a><span>Ctrl+O</span></li>
              <li><a href="#">Open Folder...</a><span>Ctrl+K Ctrl+O</span></li>
              <li><a href="#">Open Workspace...</a></li>
              <hr>
              <li><a href="#">Add Folder to Workspace...</a></li>
              <li><a href="#">Save Workspace as...</a></li>
              <hr>
              <li><a href="#">Save</a><span>Ctrl+S</span></li>
              <li><a href="#">Save As...</a><span>Ctrl+Shift+S</span></li>
              <li><a href="#">Save All</a><span>Ctrl+S S</span></li>
              <hr>
              <li><a href="#">Exit</a></li>
            </ul>
          </div>

          <div class="dropdown">
            <input type="radio" id="edit_toggle" name="menuTabs">
            <label for="edit_toggle" onclick="">Edit</label>
            <ul>
              <li><a href="#">Undo</a><span>Ctrl+Z</span></li>
              <li><a href="#">Redo</a><span>Ctrl+Y</span></li>
              <li class="divider_bottom"></li>
            </ul>
          </div>

          <div class="dropdown">
            <input type="radio" id="select_toggle" name="menuTabs">
            <label for="select_toggle" onclick="">Selection</label>
            <ul>
              <li><a href="#">Expand All</a></li>
              <li><a href="#">Redo</a></li>
            </ul>
          </div>
        </div>
      </div>
      <div class="docTitle">index.html - VSRebuild - Visual Studio Fake</div>
      <div class="iconGroup">
        <div>_</div>
        <div>[ ]</div>
        <div>X</div>
      </div>
    </div>
    <div class="content" onclick="toggleMenu()">
      <div class="iconBar">
        <div class="primaryIcons">
          <div><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><g fill="none" fill-rule="evenodd"><path stroke="#fff" stroke-width="1.25" d="M2.625,1.625 L2.625,15.375 L13.375,15.375 L13.375,4.68206301 L10.2359474,1.625 L2.625,1.625 Z"/></g></svg></div>
          <div><svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="-0.994 0 16 16" enable-background="new -0.994 0 16 16"><path fill="#C5C5C5" d="M13 6c0 1.461-.636 2.846-1.746 3.797l-5.584 4.951-1.324-1.496 5.595-4.962c.678-.582 1.061-1.413 1.061-2.29 0-1.654-1.345-3-2.997-3-.71 0-1.399.253-1.938.713l-1.521 1.287h2.448l-1.998 2h-3.996v-4l1.998-2v2.692l1.775-1.504c.899-.766 2.047-1.188 3.232-1.188 2.754 0 4.995 2.243 4.995 5z"/></svg></div>
          <div><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill="#C5C5C5" fill-rule="evenodd" d="M2.24942542,1 L13.6652297,1 L12.5402297,12.9336859 L8,15 L3.33578941,12.9336859 L2.24942542,1 Z M9.84581941,7.77996562 L9.6705457,9.76344198 L8.0579146,10.2420986 L6.36978781,9.76344198 L6.2729582,8.59958516 L4.71769238,8.59958516 L4.89244464,10.9831639 L8.04305375,11.9785074 L11.0636345,10.9831639 L11.4823942,6.21571981 L6.08239424,6.21571981 L6.00739424,4.651474 L11.5573942,4.651474 L11.7823942,3.0090159 L4.20739424,3.0090159 L4.58239424,7.77996562 L9.84581941,7.77996562 Z"/></svg></div>
        </div>
        <div><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill="#99A1B8" fill-rule="evenodd" d="M0,3 L13,3 L13,3 C14.1045695,3 15,3.8954305 15,5 L15,12 L15,12 C15,13.1045695 14.1045695,14 13,14 L2,14 L2,14 C0.8954305,14 1.3527075e-16,13.1045695 0,12 L0,3 Z M6.43494747,1 L2,1 C1.44771525,1 1,1.44771525 1,2 L1,3 L7.11163097,3 L6.43494747,1 Z M6.43494747,1.99840144e-15 C6.86636293,1.38731214e-15 7.24914353,0.208488025 7.38447349,0.517175656 L8.4741704,3 L0,3.01423173 L0,1.50711587 C4.30562135e-15,0.674758757 0.8954305,1.5824694e-14 2,1.41932292e-14 L6.43494747,1.99840144e-15 Z"/></svg></div>
      </div>
      <div class="explorer">
        <div class="title">Explorer</div>
        <div class="list">
          <div class="folder">▷&nbsp;&nbsp;Projects</div>
          <div class="folder">▷&nbsp;&nbsp;Names</div>
          <div class="folder">▷&nbsp;&nbsp;Hurdles</div>
        </div>
      </div>
      <div class="editor">
        <div class="tabs">
          <div class="activeTab">style.css</div>
          <div>index.html</div>
        </div>
        <div class="code"></div>
      </div>
    </div>
    <div class="footer">
      <div class="group">
        <div class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="13" height="13" viewBox="-0.994 0 16 16" enable-background="new -0.994 0 16 16"><path fill="#C5C5C5" d="M13 6c0 1.461-.636 2.846-1.746 3.797l-5.584 4.951-1.324-1.496 5.595-4.962c.678-.582 1.061-1.413 1.061-2.29 0-1.654-1.345-3-2.997-3-.71 0-1.399.253-1.938.713l-1.521 1.287h2.448l-1.998 2h-3.996v-4l1.998-2v2.692l1.775-1.504c.899-.766 2.047-1.188 3.232-1.188 2.754 0 4.995 2.243 4.995 5z"/></svg></div>
        <div>0</div>
        <div><svg xmlns="http://www.w3.org/2000/svg" width="13" height="13" viewBox="-0.994 0 16 16" enable-background="new -0.994 0 16 16"><path fill="#C5C5C5" d="M13 6c0 1.461-.636 2.846-1.746 3.797l-5.584 4.951-1.324-1.496 5.595-4.962c.678-.582 1.061-1.413 1.061-2.29 0-1.654-1.345-3-2.997-3-.71 0-1.399.253-1.938.713l-1.521 1.287h2.448l-1.998 2h-3.996v-4l1.998-2v2.692l1.775-1.504c.899-.766 2.047-1.188 3.232-1.188 2.754 0 4.995 2.243 4.995 5z"/></svg></div>
        <div>0</div>
      </div>
      <div class="group">
        <div>Ln 85, Col 17</div>
        <div>Spaces:4</div>
        <div>UTF-8</div>
        <div>CRLF</div>
        <div>HTML</div>
        <div><svg xmlns="http://www.w3.org/2000/svg" width="13" height="13" viewBox="-0.994 0 16 16" enable-background="new -0.994 0 16 16"><path fill="#C5C5C5" d="M13 6c0 1.461-.636 2.846-1.746 3.797l-5.584 4.951-1.324-1.496 5.595-4.962c.678-.582 1.061-1.413 1.061-2.29 0-1.654-1.345-3-2.997-3-.71 0-1.399.253-1.938.713l-1.521 1.287h2.448l-1.998 2h-3.996v-4l1.998-2v2.692l1.775-1.504c.899-.766 2.047-1.188 3.232-1.188 2.754 0 4.995 2.243 4.995 5z"/></svg></div>
      </div>
    </div>
  </div>
  <script src="script.js"></script>
</body>
    <script src="//static.codepen.io/assets/common/stopExecutionOnTimeout-de7e2ef6bfefd24b79a3f68b414b87b8db5b08439cac3f1012092b2290c719cd.js"></script>

  
  

    <script >
      /* Toggle closing of the top menu if the user is clicking outisde of the menu  */
function toggleMenu() {
  let navElement = document.getElementsByClassName("topMenu")[0];
  let possibleMenus = navElement.getElementsByTagName("input");
  for (let i = 0; i < possibleMenus.length; i++) {
    possibleMenus[i].checked = possibleMenus[i].checked ? false : false;
  }
}
      //# sourceURL=pen.js
    </script>



    <script style="display: none !important;">
  (function() {
    var __animationDuration = 4000;

    setTimeout(function() {
      // If onload hasn't been called, stop all requests after 2 seconds
      if (typeof(_l) == "undefined") {
        if (window.stop !== undefined) window.stop();
        else if (document.execCommand !== undefined) document.execCommand("Stop", false);
      }
    }, 2000, "push");

    /*
    * Capture and kill CSS animations after X number of seconds
    */
    function pauseAnimations() {
      var body = document.getElementsByTagName("body")[0];

      if (body.addEventListener) {
        body.addEventListener("webkitAnimationStart", listener, false);
        body.addEventListener("webkitAnimationIteration", listener, false);
        body.addEventListener("animationstart", listener, false);
        body.addEventListener("animationiteration", listener, false);
      }
    }

    function listener(e) {

      var targetEl;

      if (e.type == "webkitAnimationStart" || e.type == "webkitAnimationIteration") {

        targetEl = e.target;

        setTimeout(function() {
          targetEl.style.webkitAnimationPlayState = "paused";
        }, __animationDuration, "push");

      } else if (e.type == "animationstart" || e.type == "animationiteration") {

        targetEl = e.target;

        setTimeout(function() {
          targetEl.style.MozAnimationPlayState = "paused";
        }, __animationDuration, 'push');

      }
    }

    pauseAnimations();

    // Pause all audio elements, allow the audio/video
    // elements to render before stopping them
    function pauseElementTypes(type) {
      for (var i = 0, els = document.getElementsByTagName(type); i < els.length; i++) {
        els[i].pause();
      }
    }

    // Wait until the elements have been created to pause them
    setTimeout(function() {
      pauseElementTypes("audio");
      pauseElementTypes("video");
    }, 100);

  }());
  </script>

  

  <script src="https://static.codepen.io/assets/editor/live/css_reload-5619dc0905a68b2e6298901de54f73cefe4e079f65a75406858d92924b4938bf.js"></script>
</body>

</html>
 
