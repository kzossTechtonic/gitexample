
<!DOCTYPE html>
<html lang="en" >

<head>

  <meta charset="UTF-8">
  <link rel="shortcut icon" type="image/x-icon" href="https://static.codepen.io/assets/favicon/favicon-8ea04875e70c4b0bb41da869e81236e54394d63638a1ef12fa558a4a835f1164.ico" />
  <link rel="mask-icon" type="" href="https://static.codepen.io/assets/favicon/logo-pin-f2d2b6d2c61838f7e76325261b7195c27224080bc099486ddd6dccb469b8e8e6.svg" color="#111" />
  <title>CodePen - CSS Grid Layout with float and flexbox fallbacks</title>
  
  
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css">

  
      <style>
      @import "https://fonts.googleapis.com/css?family=Dosis:400,700|Slabo+27px";
.support {
  align-items: center;
  background: tomato;
  color: #fff;
  display: flex;
  font-size: .9rem;
  padding: 0 10px 0 0;
  position: fixed;
  right: 0;
  top: 0;
  width: auto;
  z-index: 100;
}
.support a {
  color: #fff;
  padding: 10px 0;
  text-decoration: none;
}
@supports (display: grid) {
  .support {
    background: #058a6e;
    right: 40px;
    transform: translateX(100%);
    transition: right .5s ease-in-out, transform .5s ease-in-out;
  }
  .support:hover {
    right: 0;
    transform: translateX(0%);
  }
}

.support svg {
  fill: #ffffff;
  height: 30px;
  margin-right: 5px;
  padding: 5px;
  width: 30px;
}

.unsupported {
  display: block;
}
@supports (display: grid) {
  .unsupported {
    display: none;
  }
}

.supported {
  display: none;
}
@supports (display: grid) {
  .supported {
    display: block;
  }
}

.grid {
  padding: 0 2rem;
}
@supports (display: flex) {
  .grid {
    display: flex;
    flex-wrap: wrap;
    padding: 1rem;
  }
  @media (min-width: 34em) {
    .grid {
      justify-content: space-between;
    }
  }
}
@supports (display: grid) {
  .grid {
    display: grid;
    grid-template-columns: 100%;
    grid-template-rows: auto;
  }
  @media (min-width: 34em) {
    .grid {
      grid-template-columns: 1fr 1fr;
      grid-gap: 1fr;
    }
  }
  @media (min-width: 60em) {
    .grid {
      grid-template-columns: 1fr 2fr 1fr;
    }
  }
}

article {
  background: #fff;
  margin: 1rem 0;
  padding: 1rem;
}
@media (min-width: 34em) {
  article {
    float: left;
    margin: 1rem;
    max-width: 41%;
  }
  article:nth-child(2n+1) {
    clear: left;
  }
  @supports (display: grid) {
    article {
      max-width: none;
    }
  }
}
@media (min-width: 60em) {
  article {
    max-width: 20%;
  }
  @supports (display: grid) {
    article {
      max-width: none;
    }
  }
  article:nth-child(2n+1) {
    clear: none;
  }
  article:nth-child(3n+2) {
    max-width: 45%;
  }
  @supports (display: grid) {
    article:nth-child(3n+2) {
      max-width: none;
    }
  }
  article:nth-child(3n+1) {
    clear: left;
  }
}
@supports (display: flex) {
  article {
    flex-basis: 100%;
  }
  @media (min-width: 34em) {
    article {
      flex: 0 1 40%;
    }
  }
  @media (min-width: 60em) {
    article {
      flex: 0 1 calc(100% * 0.25 - 1rem);
    }
    article:nth-child(3n+2) {
      flex: 1 0 calc(100% * 0.25 - 1rem);
    }
  }
}

body {
  background: #e3e3e3;
  font-family: 'Dosis', serif;
}

.page-title {
  color: #556270;
  font-family: 'Slabo 27px', serif;
  font-size: 1.5rem;
  margin-bottom: 0;
  padding: .5rem 0 0;
  text-align: center;
}

p {
  line-height: 1.4;
}

.intro {
  font-size: 1rem;
  text-align: center;
}

.entry-title {
  color: #4b4b4b;
  font-family: 'Slabo 27px', serif;
  font-size: 1.75rem;
}
@media (min-width: 60em) {
  article:nth-of-type(3n+2) .entry-title {
    font-size: 2.5rem;
  }
}

a {
  color: #C44D58;
  font-family: 'Dosis', serif;
  font-weight: 700;
}

img {
  height: auto;
  width: 100%;
  -webkit-filter: saturate(0);
  filter: saturate(0);
}

    </style>

  <script>
  window.console = window.console || function(t) {};
  window.open = function(){ console.log("window.open is disabled."); };
  window.print   = function(){ console.log("window.print is disabled."); };
  window.alert   = function(){ console.log("window.alert is disabled."); };
  window.confirm = function(){ console.log("window.confirm is disabled."); };
  window.prompt  = function(){ console.log("window.prompt is disabled."); };
  window.Notification = function() { console.log("HTML5 notifications are disabled."); };
</script>

  
    <script>
    (function() {
      /*
      * Capture all errors for this pen
      **/
      window.onerror = function(/* message, file, line */) {
        return true;
      };

      /*
      * Capture and kill Web Audio and Speech
      */
      if (typeof (AudioContext) != "undefined" || typeof (webkitAudioContext) != "undefined") {
        AudioContext = function() {
          return false;
        };

        webkitAudioContext = function() {
          return false;
        };
      }

      if (typeof (mozAudioContext) != "undefined") {
        mozAudioContext = function() {
          return false;
        };
      }

      if ("speechSynthesis" in window) {
        window.speechSynthesis = {};
      }
      if ("speak" in speechSynthesis) {
        speechSynthesis.speak = function() {
          return false;
        };
      }

      // Kill the browser asking for access to the video cam or audio
      navigator.getUserMedia = function() {
      };
      navigator.mozGetUserMedia = function() {
      };
      navigator.webkitGetUserMedia = function() {
      };
      navigator.mediaDevices.getUserMedia = function() {
      };

      
      /**
      * Capture and kill animations after X number of seconds
      **/
      var __animationDuration = 4000;
      var __animationsTimedOut = false;
      var __animationRequests = [];
      var __requestAnimationFrame = false;
      var __cancelAnimationFrame = false;
      var x, i;

      var vendorsReqestAnimationFrame = [
        "requestAnimationFrame",
        "mozRequestAnimationFrame",
        "webkitRequestAnimationFrame"
      ];

      // find the browsers requestAnimationFrame and cancelAnimationFrame
      for (x = 0; x < vendorsReqestAnimationFrame.length; x++) {
        if (!__requestAnimationFrame) {
          __requestAnimationFrame = window[vendorsReqestAnimationFrame[x]
          ];
        }
      }

      __cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame;

      // Wrap the requestAnimationFrame so we can stop it in the future
      function __reqFrame(callback, element) {
        // after the timeout we no longer take requests
        var timerID;
        if (__animationsTimedOut) {
          return 0;
        } else {
          timerID = __requestAnimationFrame(callback, element);
          __animationRequests.push(timerID);

          return timerID;
        }
      }

      for (x = 0; x < vendorsReqestAnimationFrame.length; x++) {
        window[vendorsReqestAnimationFrame[x]] = __reqFrame;
      }

      // Cancel the animations after expiration
      setTimeout(function() {
        for (i = 0; i < __animationRequests.length; i++) {
          __cancelAnimationFrame(__animationRequests[i]);
        }

        var ss = window.document.createElement("style");
        ss.textContent = "*, *::before, *::after { animation-play-state: paused !important; }";
        var ref = window.document.getElementsByTagName("script")[0];
        ref.parentNode.insertBefore(ss, ref);

        __animationsTimedOut = true;
      }, __animationDuration, "push");

      /**
      * Capture setInterval and setTimeout to kill after X number of seconds
      **/
      window.setInterval = (function(oldSetInterval) {
        var registered = [];

        function f(a,b) {
          // check if the time has expired,
          // after __animationDuration expires don't take anymore setIntervals
          if (this.timedOut) {
            return 0;
          } else {
            return registered[ registered.length ] = oldSetInterval(a,b);
          }
        }

        f.clearAll = function() {
          var r;

          while (r = registered.pop()) {
            clearInterval( r );
          }

          this.timedOut = true;
        };

        f.timedOut = false;

        return f;
      }(window.setInterval));

      window.setTimeout = (function(oldSetTimeout) {
        var registered = [];

        // because some of our timeouts may time out afterwards
        // we want to make sure they know the secret sauce to still use
        // setTimeout after the time has expired, thats why we have a
        // third param
        function f(a, b, push) {
          // check if the time has expired,
          // after __animationDuration expires don't take anymore requests
          if (this.timedOut && typeof(push) == "undefined") {
            return 0;
          } else {
            // If push is there, never clear that interval
            // so never add it to the registry
            if (push) {
              return oldSetTimeout(a,b);
            } else {
              return registered[ registered.length ] = oldSetTimeout(a,b);
            }
          }
        }

        f.clearAll = function() {
          var r;

          while (r = registered.pop()) {
            clearTimeout( r );
          }

          this.timedOut = true;
        };

        f.timedOut = false;

        return f;
      }(window.setTimeout));

      setTimeout(function() {

        setTimeout.clearAll();
        setInterval.clearAll();

        // Stop Web Animations API
        // Idea from Gregor: https://github.com/CodePen/CodePen-Bug-Reporting-Only/issues/173#issuecomment-203443301
        // Status as of August 2016:
        //  Chrome = stops animations
        //  Safari = doesn't support anyway
        //  Firefox = doesn't stop them, but probably will someday? Doesn't error
        if (document.timeline && typeof document.timeline.getAnimations === "function") {
          document.timeline.getAnimations().map(function(animation) {
            animation.pause();
          });
        }
    
      }, __animationDuration, "push");

    }());
  </script>

  <script>
  if (document.location.search.match(/type=embed/gi)) {
    window.parent.postMessage("resize", "*");
  }
</script>


</head>

<body translate="no"  onload="_l='t';">

  <h1 class="page-title">Float, Flexbox and CSS Grid Layout by using CSS Feature Queries</h1>
<main class="grid">
	<article>
		<img class="preview-image" src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/150150/oprah.jpg">
		<h1 class="entry-title">Grid works in Safari Technical Preview, WebKit Nightly and Firefox Nightly out of the box.</h1>
		<p class="entry-preview">
			<!-- CSS Grid Layout browser support text -->
				<p>CSS Grid Layout works in Firefox 52+, Safari 10.1 (and iOS), Chrome 57+ (and Chrome 57 for Android), Opera and Edge.</p>
		</p>
	</article>
	<article>
		<img class="preview-image" src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/150150/oprah.jpg">
		<h1 class="entry-title">I am a post title, you won't believe what happens next!</h1>
		<p class="entry-preview">This is a short entry preview text to entice you to click on my post and read &hellip; <a href="#">Read more</a></p>
	</article>
	<article>
		<img class="preview-image" src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/150150/oprah.jpg">
		<h1 class="entry-title">I am a post title, you won't believe what happens next!</h1>
		<p class="entry-preview">This is a short entry preview text to entice you to click on my post and read &hellip; <a href="#">Read more</a></p>
	</article>
	<article>
		<img class="preview-image" src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/150150/oprah.jpg">
		<h1 class="entry-title">I am a post title, you won't believe what happens next!</h1>
		<p class="entry-preview">This is a short entry preview text to entice you to click on my post and read &hellip; <a href="#">Read more</a></p>
	</article>
	<article>
		<img class="preview-image" src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/150150/oprah.jpg">
		<h1 class="entry-title">I am a post title, you won't believe what happens next!</h1>
		<p class="entry-preview">This is a short entry preview text to entice you to click on my post and read &hellip; <a href="#">Read more</a></p>
	</article>
	<article>
		<img class="preview-image" src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/150150/oprah.jpg">
		<h1 class="entry-title">I am a post title, you won't believe what happens next!</h1>
		<p class="entry-preview">This is a short entry preview text to entice you to click on my post and read &hellip; <a href="#">Read more</a></p>
	</article>
	<article>
		<img class="preview-image" src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/150150/oprah.jpg">
		<h1 class="entry-title">I am a post title, you won't believe what happens next!</h1>
		<p class="entry-preview">This is a short entry preview text to entice you to click on my post and read &hellip; <a href="#">Read more</a></p>
	</article>
	<article>
		<img class="preview-image" src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/150150/oprah.jpg">
		<h1 class="entry-title">I am a post title, you won't believe what happens next!</h1>
		<p class="entry-preview">This is a short entry preview text to entice you to click on my post and read &hellip; <a href="#">Read more</a></p>
	</article>
	<article>
		<img class="preview-image" src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/150150/oprah.jpg">
		<h1 class="entry-title">I am a post title, you won't believe what happens next!</h1>
		<p class="entry-preview">This is a short entry preview text to entice you to click on my post and read &hellip; <a href="#">Read more</a></p>
	</article>
</main>

<aside class="support">

	<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">

<path d="M20.016 8.016v-4.031h-4.031v4.031h4.031zM20.016 14.016v-4.031h-4.031v4.031h4.031zM20.016 20.016v-4.031h-4.031v4.031h4.031zM14.016 8.016v-4.031h-4.031v4.031h4.031zM14.016 14.016v-4.031h-4.031v4.031h4.031zM14.016 20.016v-4.031h-4.031v4.031h4.031zM8.016 8.016v-4.031h-4.031v4.031h4.031zM8.016 14.016v-4.031h-4.031v4.031h4.031zM8.016 20.016v-4.031h-4.031v4.031h4.031zM20.016 2.016c1.078 0 1.969 0.891 1.969 1.969v16.031c0 1.078-0.891 1.969-1.969 1.969h-16.031c-1.078 0-1.969-0.891-1.969-1.969v-16.031c0-1.078 0.891-1.969 1.969-1.969h16.031z"></path>

</svg>

	<a class="unsupported" href="https://caniuse.com/#feat=css-grid">This browser does not support CSS Grid Layout.</a>

	<a class="supported" href="https://caniuse.com/#feat=css-grid">This browser supports CSS Grid Layout.</a>

</aside>
  
  
  
    <script style="display: none !important;">
  (function() {
    var __animationDuration = 4000;

    setTimeout(function() {
      // If onload hasn't been called, stop all requests after 2 seconds
      if (typeof(_l) == "undefined") {
        if (window.stop !== undefined) window.stop();
        else if (document.execCommand !== undefined) document.execCommand("Stop", false);
      }
    }, 2000, "push");

    /*
    * Capture and kill CSS animations after X number of seconds
    */
    function pauseAnimations() {
      var body = document.getElementsByTagName("body")[0];

      if (body.addEventListener) {
        body.addEventListener("webkitAnimationStart", listener, false);
        body.addEventListener("webkitAnimationIteration", listener, false);
        body.addEventListener("animationstart", listener, false);
        body.addEventListener("animationiteration", listener, false);
      }
    }

    function listener(e) {

      var targetEl;

      if (e.type == "webkitAnimationStart" || e.type == "webkitAnimationIteration") {

        targetEl = e.target;

        setTimeout(function() {
          targetEl.style.webkitAnimationPlayState = "paused";
        }, __animationDuration, "push");

      } else if (e.type == "animationstart" || e.type == "animationiteration") {

        targetEl = e.target;

        setTimeout(function() {
          targetEl.style.MozAnimationPlayState = "paused";
        }, __animationDuration, 'push');

      }
    }

    pauseAnimations();

    // Pause all audio elements, allow the audio/video
    // elements to render before stopping them
    function pauseElementTypes(type) {
      for (var i = 0, els = document.getElementsByTagName(type); i < els.length; i++) {
        els[i].pause();
      }
    }

    // Wait until the elements have been created to pause them
    setTimeout(function() {
      pauseElementTypes("audio");
      pauseElementTypes("video");
    }, 100);

  }());
  </script>

  

  <script src="https://static.codepen.io/assets/editor/live/css_reload-5619dc0905a68b2e6298901de54f73cefe4e079f65a75406858d92924b4938bf.js"></script>
</body>

</html>
 
