
<!DOCTYPE html>
<html lang="en" >

<head>

  <meta charset="UTF-8">
  <link rel="shortcut icon" type="image/x-icon" href="https://static.codepen.io/assets/favicon/favicon-8ea04875e70c4b0bb41da869e81236e54394d63638a1ef12fa558a4a835f1164.ico" />
  <link rel="mask-icon" type="" href="https://static.codepen.io/assets/favicon/logo-pin-f2d2b6d2c61838f7e76325261b7195c27224080bc099486ddd6dccb469b8e8e6.svg" color="#111" />
  <title>CodePen - Grid template picture frame module</title>
  
  
  
  
      <style>
      @charset "utf-8";
@import url('https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700,800,900');

/*Variables for colors, only change values here*/
:root{
  --color1: #FFF;
  --color2: #00ffff;
  --color3: #444;
  --blend-color:rgba(26,8,0,0.75);
	      /*MODULE VARIABLES
	 		============================*/
			--nav-block: #b2c2bf;
			--nav-item: #eaece5;
			--nav-item-hover: white;
			--main-content: #3b3a30;
			--port-item: #c0ded9;	
}
/*Styles*/

* { box-sizing: border-box; margin-top: 0;
transition: all ease-in-out 350ms;}

a{
	text-decoration:none;
}


/*Hero section
=========================================================*/
body {
  font-family: 'Poppins', sans-serif;
  color: var(--color3);
  font-size: 1.1rem;
  background: var(--color1);
}

h2{
  font-size: 1.6rem;
  margin-bottom: .5em
}

.hero {
  background-color:var(--blend-color);
  background-image: url(//unsplash.it/1000/600);
  background-blend-mode: multiply;
  background-size: cover;
  height: 100vh;
  padding: 1em;
  color: var(--color1);  
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.hero h1 {
  font-size: 5rem;
  color: var(--color2);
  text-transform: uppercase;
  letter-spacing: .93rem;
  outline: 3px solid var(--color1);
  outline-offset: .25em;
  display: inline-block;
  margin: 0.25em 0 .5em;
}

.hero h1 span{  
  font-weight: 300;  
}

.hero p span {
  color: var(--color2);
}




/*Sales Points section
=========================================================*/
.sales-points-container{
  
  padding:  12vh 0 5vh 0;
  display:flex;
  text-align: center;
  justify-content: space-around;
  flex-direction: column;
  }

@media(min-width: 40em){
  .sales-points-container{
    flex-direction: row;
  }
} 

.sales-point {
  flex-basis: 32%; /*each item will take up 32% of the screen width*/
  padding: .5em;
 
}

/*Portfolio Link section
=========================================================*/

.port{
  padding:  2.25em 0 2em 0;
  display:flex;
  text-align: center;
  align-content:center;
  justify-content: center;
  flex-direction: column;
}

.btn2{
  margin-top: 2em;	
  display: inline-block;
  padding: .7em 1.7em;
  font-weight: 600;
  text-decoration: none;
  background: var(--color3);
  color: var(--color2);
  
  border-radius: .25em;    
}

.btn2:hover{
  color: var(--color3);
  background: var(--color2);
  transform: scale(1.1);
}

/*MODULE section
=========================================================*/

/*box
===============================*/
.module{
	height:100%;
	flex-basis:49%;

	
}
.main-content{
 	
 	
	padding: 6%;
	height:100%;
}

.portfolio{
 display: grid;
  height: 100%;
  grid-template-rows: repeat(6, 1fr);
  grid-template-columns: repeat(5, 1fr);
  grid-gap: .5rem;		
}

.portfolio-item{ 		
	opacity: .5;
  	font-weight: 700;
 	position: relative;
  	font-size: 1.75em;
  	background-size: cover;
  	background-position: center;
	background-repeat: no-repeat;
	
	border: .1em solid var(--port-item);
	
}

.portfolio-item:hover {
	opacity: 1;
}
.portfolio-item a{
	color: var(--port-item);
	height:100%;
	width: 100%;
	display: flex;
	justify-content: center;
	align-items: flex-end;
}




/*ITEMS
===============================*/
.portfolio-item{ 		
	color: var(--port-item);
  	font-weight: 700;
 	position: relative;
  	font-size: 1.75em;
  	background-size: cover;
  	background-position: center;
	background-repeat: no-repeat;
	display: flex;
	justify-content: center;
	align-items: flex-end;
	border: .1em solid var(--port-item);
	
}

 .portfolio-item.portfolio-item-1{
  grid-row: 4/ 5;
  grid-column:3 / 4; 	
  background-image: url(//unsplash.it/400/400/?random); 
}

 .portfolio-item-2{
  grid-row:1 / 3;
  grid-column:1 / 3; 	
  background-image: url(//unsplash.it/900/700/?random);	 
	 

}

.portfolio-item.portfolio-item-3{	
  grid-row:1 /4 ;
  grid-column:3 /6; 	
  background-image: url(https://picsum.photos/1200/600/?random);	 
}

.portfolio-item.portfolio-item-4{
  grid-row: 3/ 5;
  grid-column: 1/3 ; 	
	 background-image: url(//unsplash.it/800/600/); 
}

.portfolio-item.portfolio-item-5{
	 grid-row:5/7 ;
  	 grid-column: 1/4 ; 	
	  background-image: url(//unsplash.it/1920/1080/?random);
}

.portfolio-item.portfolio-item-6{
  grid-row:4 /7 ;
  grid-column:4 /6 ; 	
	 background-image: url(//unsplash.it/800/600/?random); 
}
/*END MODULE section
=========================================================*/



/*Call to Action section 
=========================================================*/

.cta { /*This is built phone first*/
  background-image: url(//picsum.photos/600/400?image=6);
  background-size: cover;
  padding: 5vh 0;
  height: 85vh;
  min-height: 42em;
  color: var(--color1);
  display: flex;
  justify-content: flex-start;  
  background-color:var(--blend-color);
  background-blend-mode: multiply;
  overflow:hidden;
}

.cta h2 {
    font-weight:500;
  }

.cta h2 span{
    font-weight:700;
    color: var(--color2);
  }

.cta-text{
  flex-basis: 90%;
  padding: .25em;
  line-height: 1.55em;
}

.btn{
  margin-top: 2em;	
  display: inline-block;
  padding: .25em 1.7em;
  font-weight: 600;
  text-decoration: none;
  background: var(--color2);
  color: var(--color3);
  opacity: .9;
  border-radius: .25em;    
}

.btn:hover{
  color: var(--color2);
  background: var(--color3);
  transform: scale(1.1);
}



@media(min-width: 640px){
  .cta{
    justify-content: flex-end;
  }
  .cta-text{
	 	 margin-top: 3rem;
    	flex-basis: 50%;
	  	line-height: 2.55rem;
	  font-size: 1.5rem;
  }
	.cta h2{
		font-size: 3rem;
	}
	
	.btn{font-size:1rem}
}


/*Horizontal smartphones*/
@media (max-width: 51rem){
	.hero h1{
		font-size: 3.9rem;
	}
	
	.hero .p2{
		font-size: 1rem ;
		margin-top: .25em;
	}
	
}



/*medium  and large smartphones*/

@media (max-width: 26rem){
	.module{
		transform: translateX(-10000em);
		flex-basis: 1%;
		width: 1px;
		height: 1px;
	}

	
	.hero h1{
		font-size: 1.5rem;
	}
	
	.hero .p2{
		font-size: 1rem ;
		margin-top: .25em;
	}
	.cta h2{
		font-size:1.28rem;
	}
}

/*Smaller phones*/
@media (max-width: 23.5rem){
	.hero h1{
		font-size: 1.2rem;
	}
	
	.hero .p2{
		font-size: .8rem ;
	}
}

/*HD SCREENS*/
@media (min-width: 120rem){
	.hero h1{
		font-size: 13rem;
	}
	
	.hero .p2 , p {
		font-size: 2.5rem ;
		margin-top: .25em;
		line-pacing: 4rem;
	}

	 .cta-text{
    flex-basis: 5-5%;
  }
	.cta-text p{ 
		font-size: 2.5rem; 
		padding: .25em;
  		line-height: 1.5em;		
	}
	.cta-text h2{
		font-size:3.4rem;
		padding-bottom:.8em;
	}
}
    </style>

  <script>
  window.console = window.console || function(t) {};
  window.open = function(){ console.log("window.open is disabled."); };
  window.print   = function(){ console.log("window.print is disabled."); };
  window.alert   = function(){ console.log("window.alert is disabled."); };
  window.confirm = function(){ console.log("window.confirm is disabled."); };
  window.prompt  = function(){ console.log("window.prompt is disabled."); };
  window.Notification = function() { console.log("HTML5 notifications are disabled."); };
</script>

  
    <script>
    (function() {
      /*
      * Capture all errors for this pen
      **/
      window.onerror = function(/* message, file, line */) {
        return true;
      };

      /*
      * Capture and kill Web Audio and Speech
      */
      if (typeof (AudioContext) != "undefined" || typeof (webkitAudioContext) != "undefined") {
        AudioContext = function() {
          return false;
        };

        webkitAudioContext = function() {
          return false;
        };
      }

      if (typeof (mozAudioContext) != "undefined") {
        mozAudioContext = function() {
          return false;
        };
      }

      if ("speechSynthesis" in window) {
        window.speechSynthesis = {};
      }
      if ("speak" in speechSynthesis) {
        speechSynthesis.speak = function() {
          return false;
        };
      }

      // Kill the browser asking for access to the video cam or audio
      navigator.getUserMedia = function() {
      };
      navigator.mozGetUserMedia = function() {
      };
      navigator.webkitGetUserMedia = function() {
      };
      navigator.mediaDevices.getUserMedia = function() {
      };

      
      /**
      * Capture and kill animations after X number of seconds
      **/
      var __animationDuration = 4000;
      var __animationsTimedOut = false;
      var __animationRequests = [];
      var __requestAnimationFrame = false;
      var __cancelAnimationFrame = false;
      var x, i;

      var vendorsReqestAnimationFrame = [
        "requestAnimationFrame",
        "mozRequestAnimationFrame",
        "webkitRequestAnimationFrame"
      ];

      // find the browsers requestAnimationFrame and cancelAnimationFrame
      for (x = 0; x < vendorsReqestAnimationFrame.length; x++) {
        if (!__requestAnimationFrame) {
          __requestAnimationFrame = window[vendorsReqestAnimationFrame[x]
          ];
        }
      }

      __cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame;

      // Wrap the requestAnimationFrame so we can stop it in the future
      function __reqFrame(callback, element) {
        // after the timeout we no longer take requests
        var timerID;
        if (__animationsTimedOut) {
          return 0;
        } else {
          timerID = __requestAnimationFrame(callback, element);
          __animationRequests.push(timerID);

          return timerID;
        }
      }

      for (x = 0; x < vendorsReqestAnimationFrame.length; x++) {
        window[vendorsReqestAnimationFrame[x]] = __reqFrame;
      }

      // Cancel the animations after expiration
      setTimeout(function() {
        for (i = 0; i < __animationRequests.length; i++) {
          __cancelAnimationFrame(__animationRequests[i]);
        }

        var ss = window.document.createElement("style");
        ss.textContent = "*, *::before, *::after { animation-play-state: paused !important; }";
        var ref = window.document.getElementsByTagName("script")[0];
        ref.parentNode.insertBefore(ss, ref);

        __animationsTimedOut = true;
      }, __animationDuration, "push");

      /**
      * Capture setInterval and setTimeout to kill after X number of seconds
      **/
      window.setInterval = (function(oldSetInterval) {
        var registered = [];

        function f(a,b) {
          // check if the time has expired,
          // after __animationDuration expires don't take anymore setIntervals
          if (this.timedOut) {
            return 0;
          } else {
            return registered[ registered.length ] = oldSetInterval(a,b);
          }
        }

        f.clearAll = function() {
          var r;

          while (r = registered.pop()) {
            clearInterval( r );
          }

          this.timedOut = true;
        };

        f.timedOut = false;

        return f;
      }(window.setInterval));

      window.setTimeout = (function(oldSetTimeout) {
        var registered = [];

        // because some of our timeouts may time out afterwards
        // we want to make sure they know the secret sauce to still use
        // setTimeout after the time has expired, thats why we have a
        // third param
        function f(a, b, push) {
          // check if the time has expired,
          // after __animationDuration expires don't take anymore requests
          if (this.timedOut && typeof(push) == "undefined") {
            return 0;
          } else {
            // If push is there, never clear that interval
            // so never add it to the registry
            if (push) {
              return oldSetTimeout(a,b);
            } else {
              return registered[ registered.length ] = oldSetTimeout(a,b);
            }
          }
        }

        f.clearAll = function() {
          var r;

          while (r = registered.pop()) {
            clearTimeout( r );
          }

          this.timedOut = true;
        };

        f.timedOut = false;

        return f;
      }(window.setTimeout));

      setTimeout(function() {

        setTimeout.clearAll();
        setInterval.clearAll();

        // Stop Web Animations API
        // Idea from Gregor: https://github.com/CodePen/CodePen-Bug-Reporting-Only/issues/173#issuecomment-203443301
        // Status as of August 2016:
        //  Chrome = stops animations
        //  Safari = doesn't support anyway
        //  Firefox = doesn't stop them, but probably will someday? Doesn't error
        if (document.timeline && typeof document.timeline.getAnimations === "function") {
          document.timeline.getAnimations().map(function(animation) {
            animation.pause();
          });
        }
    
      }, __animationDuration, "push");

    }());
  </script>

  <script>
  if (document.location.search.match(/type=embed/gi)) {
    window.parent.postMessage("resize", "*");
  }
</script>


</head>

<body translate="no"  onload="_l='t';">

  <!doctype html>


<!--Based on video tutorial by Kevin Powell  " https://youtu.be/JqJNhM8i-nc -->

<html>
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>DESIGN WORKS</title>
<link href="stylesheet.css" rel="stylesheet" type="text/css">
</head>

<body>
<div class="hero">
  <p>Things are <span>working</span> here at</p>
  <h1>DESIGN<span>WORKS</span></h1>
  <p class="p2">We <strong>Design</strong> and <strong>Develop</strong> Awesome stuff</p>
</div>

<div class="sales-points-container">
  <div class="sales-point">
    <h2>DESIGN</h2>
    <p>Praesent at rhoncus ante, non sollicitudin nisl. Praesent at rhoncus ante, non sollicitudin nisl.</p>
  </div>
  <div class="sales-point">
    <h2>DEVELOP</h2>
    <p>Curabitur efficitur, mi in maximus sollicitudin, diam velit volutpat tellus, quis facilisis ex risus eu elit. </p>
  </div>
  <div class="sales-point">
    <h2>MAINTAIN</h2>
    <p>Fusce egestas massa eros, non vehicula velit finibus vitae. Suspendisse ornare condimentum enim et sagittis.  In nec suscipit justo. </p>
  </div>	
</div>
<div class="port">
	<div class="port-link">  <a href="" class="btn2">See our Work</a></div>
	
</div>
<div class="cta">
 
  <div class= "module"><!--PICTURE FRAME module-->
  	<div class="main-content">
	
		<div class="portfolio">
			<div class="portfolio-item portfolio-item-1"><a href="#">Item 1</a></div>	
			<div class="portfolio-item portfolio-item-2"><a href="#">Item 2</a></div>
			<div class="portfolio-item portfolio-item-3"><a href="#">Item 3</a></div>
			<div class="portfolio-item portfolio-item-4"><a href="#">Item 4</a></div>
			<div class="portfolio-item portfolio-item-5"><a href="#">Item 5</a></div>
			<div class="portfolio-item portfolio-item-6"><a href="#">Item 6</a></div>
		</div>
  	
  </div>
	</div><!--END module-->
  <div class="cta-text">
    <h2>Are you ready for <span>AWESOME</span></h2>
    <p>Sed molestie, metus convallis facilisis gravida, sem dui volutpat ante, et suscipit quam dolor vel leo. Nulla ornare justo non massa convallis, eget mollis mi pulvinar. Phasellus interdum eros eget lobortis bibendum. Fusce egestas massa eros, non vehicula velit finibus vitae. Suspendisse ornare condimentum enim et sagittis. .</p>
    <a href="" class="btn">Get Started</a>
  </div>
 
  
</div>

</body>
</html>
  
  
  
    <script style="display: none !important;">
  (function() {
    var __animationDuration = 4000;

    setTimeout(function() {
      // If onload hasn't been called, stop all requests after 2 seconds
      if (typeof(_l) == "undefined") {
        if (window.stop !== undefined) window.stop();
        else if (document.execCommand !== undefined) document.execCommand("Stop", false);
      }
    }, 2000, "push");

    /*
    * Capture and kill CSS animations after X number of seconds
    */
    function pauseAnimations() {
      var body = document.getElementsByTagName("body")[0];

      if (body.addEventListener) {
        body.addEventListener("webkitAnimationStart", listener, false);
        body.addEventListener("webkitAnimationIteration", listener, false);
        body.addEventListener("animationstart", listener, false);
        body.addEventListener("animationiteration", listener, false);
      }
    }

    function listener(e) {

      var targetEl;

      if (e.type == "webkitAnimationStart" || e.type == "webkitAnimationIteration") {

        targetEl = e.target;

        setTimeout(function() {
          targetEl.style.webkitAnimationPlayState = "paused";
        }, __animationDuration, "push");

      } else if (e.type == "animationstart" || e.type == "animationiteration") {

        targetEl = e.target;

        setTimeout(function() {
          targetEl.style.MozAnimationPlayState = "paused";
        }, __animationDuration, 'push');

      }
    }

    pauseAnimations();

    // Pause all audio elements, allow the audio/video
    // elements to render before stopping them
    function pauseElementTypes(type) {
      for (var i = 0, els = document.getElementsByTagName(type); i < els.length; i++) {
        els[i].pause();
      }
    }

    // Wait until the elements have been created to pause them
    setTimeout(function() {
      pauseElementTypes("audio");
      pauseElementTypes("video");
    }, 100);

  }());
  </script>

  

  <script src="https://static.codepen.io/assets/editor/live/css_reload-5619dc0905a68b2e6298901de54f73cefe4e079f65a75406858d92924b4938bf.js"></script>
</body>

</html>
 
