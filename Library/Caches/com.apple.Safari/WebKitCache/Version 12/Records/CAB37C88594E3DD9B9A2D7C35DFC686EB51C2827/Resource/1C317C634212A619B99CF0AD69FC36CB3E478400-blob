!function(e,a){"use strict";e("paychex.app.payroll/amd-plugins/promise",[],function(){return{load:function(e,a,t){a([e],function(e){if(e&&e.then)return void e.then(function(e){t(e)});t(e)})}}}),function(){e("paychex.app.payroll/components/newExperienceTour/NewExperienceTourSlides",[],function(){return{NewExperienceTourSlides:[{desktopTitle:"png.payroll.newExperienceTour.carousel.title1",desktopContent:"png.payroll.newExperienceTour.carousel.content1"},{desktopTitle:"png.payroll.newExperienceTour.carousel.title2",desktopContent:"png.payroll.newExperienceTour.carousel.content2"},{desktopTitle:"png.payroll.newExperienceTour.carousel.title3",desktopContent:"png.payroll.newExperienceTour.carousel.content3"},{desktopTitle:"png.payroll.newExperienceTour.carousel.title4",desktopContent:"png.payroll.newExperienceTour.carousel.content4"}]}})}(),function(){e("paychex.app.payroll/components/newExperienceTour/NewExperienceTourController",["angular","lodash","./NewExperienceTourSlides","paychex.app.payroll/constants/PayrollApplicationConstants"],function(e,a,t,l){var r=["TranslationService","$scope","PayrollAnalytics","UserPreferencesService","ToastFactory"],o=function(e,r,o,n,i){var p=this,c={};p.model={},this.payrollAnalytics=o,this.toastFactory=i,c.currentSlideIndex=1,c.totalSlides=t.NewExperienceTourSlides.length,p.model.currentSlide={title:"",content:""},p.model.allSlides=t.NewExperienceTourSlides,p.model.getCurrentSlide=function(){return c.currentSlideIndex},c.updateSlide=function(){var l=p.model.getCurrentSlide(),r=t.NewExperienceTourSlides[l-1].desktopTitle,o=t.NewExperienceTourSlides[l-1].desktopContent,n=[r,o];e.translate(n).then(function(e){a.forEach(e,function(e,a){0===a?p.model.currentSlide.title=e:1===a&&(p.model.currentSlide.content=e)})}).done()},p.model.setCurrentSlide=function(e){e<=c.totalSlides&&e>0&&(c.currentSlideIndex=e),c.updateSlide()},p.model.nextSlide=function(){c.currentSlideIndex<c.totalSlides?(o.tourNextSlide(),c.currentSlideIndex++):(n.set(l.HTML_PAYROLL_DEFAULT,!0),o.makeDefaultTour(),r.closeThisDialog(),p.toastFactory.showSimpleToast("png.payroll.newExperienceTour.carousel.defaultSuccessful")),c.updateSlide()},p.model.getNavText=function(){return c.currentSlideIndex===p.model.allSlides.length?p.model.locale["png.payroll.newExperienceTour.carousel.navigation.ready"]:1===c.currentSlideIndex?p.model.locale["png.payroll.newExperienceTour.carousel.navigation.getStarted"]:p.model.locale["png.payroll.newExperienceTour.carousel.navigation.next"]},p.model.getCloseText=function(){return p.model.locale["png.payroll.newExperienceTour.carousel.navigation.skipTour"]},c.initStrings=function(){p.model.locale={};var t=["png.payroll.newExperienceTour.carousel.navigation.next","png.payroll.newExperienceTour.carousel.navigation.getStarted","png.payroll.newExperienceTour.carousel.navigation.ready","png.payroll.newExperienceTour.carousel.navigation.skipTour","png.payroll.newExperienceTour.carousel.navigation.skip"];e.translate(t).then(function(e){a.forEach(e,function(e,a){p.model.locale[t[a]]=e})}).done()},p.model.trackEvent=function(e){e.toLowerCase()===l.SKIP_TOUR.toLowerCase()&&o.skipTour()},c.init=function(){c.initStrings(),p.model.setCurrentSlide(1),r.model=p.model},c.init()};return o.$inject=r,o})}(),e("paychex.app.payroll/components/newExperienceTour/module",["angular","paychex.app.payroll/components/newExperienceTour/NewExperienceTourController"],function(e,a){var t=e.module("paychex.app.payroll.components.newExperienceTour",[]);return t.controller("NewExperienceTourController",a),t}),e("paychex.app.payroll/components/payrollFeatureDefault/PayrollFeatureDefaultController",["angular","paychex.app.payroll/components/payrollFeatureDefault/PayrollFeatureStatus","paychex.app.payroll/constants/PayrollApplicationConstants","paychex.app.payroll/constants/PayrollApplicationEvents","lodash","paychex.core/Logger"],function(e,a,t,l,r,o){var n=o.get("paychex.app.payroll.application.PayrollFeatureDefaultController"),i=["$scope","UserPreferencesService","PayrollPreferencesService","PayrollState","PayEntryStateManager","$timeout","PayrollAnalytics"],p=function(e,o,i,p,c,s,y){var u=this;u.model={},u.model.countDays=a.getCountDays(),u.model.showPopup=!1,u.payrollState=p,u.payrollPreferencesService=i,u.payEntryStateManager=c,u.$timeout=s,u.payrollAnalytics=y,u.messageText="",u.clickAction="",u.disableTaketheTourButton=!0,a.getPayrollStatus()===t.PAYROLL_STATUS_BEGIN?(u.model.payrollStatusButton="png.payroll.tile.currentPayroll.dialogue.defaultHtmlBeginButtonOk",u.model.headerText="png.payroll.tile.currentPayroll.dialogue.defaultHtmlHeaderText",u.model.bodyText=u.model.countDays>1?"png.payroll.tile.currentPayroll.dialogue.defaultHtmlBeginBodyText":"png.payroll.tile.currentPayroll.dialogue.defaultHtmlBeginBodyTextSingular",u.messageText=t.MESSAGE3_IN_NOTIFICATION_POP_UP+u.model.countDays+t.MESSAGE4_IN_NOTIFICATION_POP_UP):a.getPayrollStatus()===t.PAYROLL_STATUS_RESUME&&(u.model.payrollStatusButton="png.payroll.tile.currentPayroll.dialogue.defaultHtmlResumeButtonTour",u.model.headerText="png.payroll.tile.currentPayroll.dialogue.defaultHtmlHeaderText",u.model.bodyText=u.model.countDays>1?"png.payroll.tile.currentPayroll.dialogue.defaultHtmlResumeBodyText":"png.payroll.tile.currentPayroll.dialogue.defaultHtmlResumeBodyTextSingular",u.messageText=t.MESSAGE5_IN_NOTIFICATION_POP_UP+u.model.countDays+t.MESSAGE6_IN_NOTIFICATION_POP_UP),u.payrollPreferencesService.getPayrollPreferences(u.payrollState.client.displayId).subscribe(function(e){u.preferences=e}),u.model.onSubmit=function(){if(u.model.closeThisPopup(t.OK_CLOSE),a.getPayrollStatus()===t.PAYROLL_STATUS_BEGIN)a.setShowPayrollTour(!0);else if(a.getPayrollStatus()===t.PAYROLL_STATUS_RESUME){var e={gridType:u.preferences.grid_layout,slideNumber:t.RESUME_BUTTON_SLIDE_NUMBER};l.NEW_PAYROLL_TOUR_TRIGGERED.onNext(e)}},u.payEntryStateManager.checksLoadDeferred.promise.then(function(){u.disableTaketheTourButton=!1}).done(),u.analyticsParams=function(){try{var e=r.get(u,"payEntryStateManager.payrollState.selectedPayPeriod.payPeriodStatusType.id");return{clickAction:u.clickAction,showPopup:u.model.showPopup,messageText:u.messageText,workerCount:u.payEntryStateManager.getTotalWorkerCount(),clientId:r.get(u,"payEntryStateManager.payrollState.client.displayId"),checkDate:r.get(u,"payEntryStateManager.payrollState.selectedPayPeriod.checkDate",[]),checkCount:u.payEntryStateManager.payPeriodTotals?u.payEntryStateManager.payPeriodTotals.checkCount:"",payPeriodStatus:u.payrollAnalytics.convertPayPeriodStatusById(e),unscheduled:u.payEntryStateManager.payrollState.selectedPayPeriod.frequencyType===t.FREQUENCY_UNDEFINED}}catch(e){return n.error("Error occurred getting analytics params",e),{}}},u.model.closeThisPopup=function(e){u.clickAction=e||t.X_CLOSE,o.set(t.HTML_PAYROLL_DEFAULT,u.model.showPopup),u.payrollAnalytics.selectDoNotShow(u.analyticsParams()),u.closeThisDialog()}};return p.$inject=i,p.registeredName="payrollFeatureDefaultController",p}),e("paychex.app.payroll/components/payrollFeatureDefault/module",["angular","paychex.app.payroll/components/payrollFeatureDefault/PayrollFeatureDefaultController"],function(e,a){var t=e.module("paychex.app.payroll.components.payrollFeatureDefault",[]);return t.controller("PayrollFeatureDefaultController",a),t}),e("paychex.app.payroll/services/payrollDialogService/PayrollDialogService",["htmlregistry"],function(e){return function(){function a(e){this.dialogService=e}return a.prototype.openNewExperienceTour=function(){this.dialogService.open({templateUrl:e.generateStaticPath("paychex.app.payroll","/components/newExperienceTour/newExperienceTour.tpl.html"),theme:"ngDialog-getting-started",plain:!1})},a.prototype.openFeatureDefault=function(){this.dialogService.open({templateUrl:e.generateStaticPath("paychex.app.payroll","/components/payrollFeatureDefault/payrollFeatureDefault.tpl.html"),theme:"ngDialog-getting-started",controller:"PayrollFeatureDefaultController",controllerAs:"pfdc",bindToController:!0,plain:!1})},a.$inject=["IPaychexDialogService"],a.registeredName="PayrollDialogService",a}()}),e("paychex.app.payroll/services/payrollDialogService/module",["angular","paychex.framework.angular.ui2/module","paychex.app.payroll/helpers/module","paychex.app.payroll/components/newExperienceTour/module","paychex.app.payroll/components/payrollFeatureDefault/module","./PayrollDialogService"],function(e,a,t,l,r,o){var n=e.module("paychex.app.payroll.services.payrollDialogService",[a.name,t.name,l.name,r.name]);return n.service(o.registeredName,o),n}),e("paychex.app.payroll/tile/lastPayroll/LastPayrollTileController",["lodash","com/paychex/vCard/dto/ReportingActivityType","paychex.core/Logger","paychex.core/Tracker","paychex.core/Promise","paychex.app.common/bridge/FlexApplicationSetupData","paychex.app.payroll/constants/PayrollApplicationConstants","com/paychex/framework/dto/CalendarDate","paychex.app.common/constants/ApplicationConstants"],function(e,a,t,l,r,o,n,i,p){var c=t.get("paychex.app.payroll.tile.lastPayrollTile.LastPayrollTileController");return function(){function a(a,t,l,r,o,n,i,p,c,s){this.lastPayrollDataService=a,this.payrollDialogService=o,this.payPeriodStateManager=i,this.drawerManager=p,this.payrollAnalytics=c,this.translationHelper=l,this.clientHelper=r,this.showFooter=!0,this.cashRequirementsLoadFailed=!1,this.cashRequirementsIsArchived=!1,this.payrollSecurityHelper=s,this.$scope=n;var y=this,u=n.$on("$destroy",function(){n.lastPayrollTileController=null,e.forOwn(y,function(e,a,t){delete t[a]}),u()});this.lifecycle={id:"paychex.app.payroll.tile.lastPayroll",load:this.load,canDisplay:this.canDisplay,initializeLocales:this.initializeLocales},t.attachTileController(this,this.lifecycle)}return a.prototype.initializeLocales=function(){return c.debug("CurrentPayrollTileController initializeLocales invoked"),this.translationHelper.initTranslations()},a.prototype.load=function(e){var a,t=this;return this.payPeriodStateManager.checkInitialization(e.clients[0]).then(function(){return a=t.payPeriodStateManager.payrollState.client,t.payPeriodStateManager.lastPayPeriod?(t.lastPayrollExists=!0,t.lastPayrollDataService.getLastPayrollData(a.applicationId,a.caid,a.branchId,t.payPeriodStateManager.lastPayPeriod).then(function(e){if(t.lastPayrollData={},t.$scope&&!t.$scope.$$destroyed){if(t.userHasTilesOnly=t.payPeriodStateManager.userHasTilesOnly,t.isCurrentPayPeriodQueued=t.payPeriodStateManager.isCurrentPayPeriodQueued,t.lastPayrollData.tilePayPeriod=t.payPeriodStateManager.lastPayPeriod,t.hasDetailAccess=!0,t.showFooter=!0,t.payPeriodStateManager.payrollState.payrollSecurity||(t.payPeriodStateManager.payrollState.payrollSecurity=t.payrollSecurityHelper.createPayrollSecurity(a.caid,a.version)),t.payPeriodStateManager.payrollState.payrollSecurity.isVersion1()?t.showFooter=t.payPeriodStateManager.payrollState.payrollSecurity.isPayrollReportingEnabled():t.showFooter=t.clientHelper.currentClientHasApplication(p.REPORT_CENTER_APP_CODE),t.cashRequirementsIsArchived=e.cashRequirementsIsArchived,t.cashRequirementsLoadFailed=e.cashRequirementsLoadFailed,t.cashRequirementsLoadFailed&&(t.showFooter=!1),t.cashRequirementsIsArchived)c.info("Cash requirements report details are archived");else if(t.cashRequirementsLoadFailed)t.lastPayrollFooterClass="cash-requirements-unavailable-due-to-timing",c.info("Cash requirements report details failed to load");else if(t.hasDetailAccess){t.hasACreditTransaction=e.hasACreditTransaction,t.numberOfTransactions=e.numberOfTransactions,t.isASOClient=t.lastPayrollData.tilePayPeriod.isASOClient,t.hasEFTransactions=e.hasEFTransactions,t.hasWireFundTransactions=e.hasWireFundTransactions,t.oneBillion=Math.pow(10,9),t.tenBillion=10*t.oneBillion,t.oneTrillion=Math.pow(10,12),t.cashRequired=Number(e.cashRequired.toString());var l=Math.abs(t.cashRequired);l>t.oneTrillion?t.totalCashRequiredShowTrillionsIndicator=!0:l>t.tenBillion&&(t.totalCashRequiredShowBillionsIndicator=!0),t.cashRequired>=0?t.cashRequiredStylingClass="cash-required-amount-when-debit":t.cashRequiredStylingClass="cash-required-amount-when-credit",t.transactionsTotal=Number(e.transactionsTotal.toString());var r=Math.abs(t.transactionsTotal);r>t.oneTrillion?t.transactionsTotalShowTrillionsIndicator=!0:r>t.oneBillion&&(t.transactionsTotalShowBillionsIndicator=!0),t.bankAccounts=e.bankAccounts,t.bankAccounts&&1===t.bankAccounts.length?(t.showBankAccountNumber=!0,t.showMultipleBankAccountsIndicator=!1,t.bankAccountMask=n.SECURITY_MASK_SIX_DOTS,t.bankAccountNumber=t.payPeriodStateManager.payrollState.payrollSecurity.applyBankAccountSecurity(t.bankAccounts[0])):(t.showBankAccountNumber=!1,t.showMultipleBankAccountsIndicator=!0),e.transactionDate&&(t.transactionDate=e.transactionDate.getDate())}t.endDate=t.lastPayrollData.tilePayPeriod.endDate.getDate(),t.checkDate=t.lastPayrollData.tilePayPeriod.checkDate.getDate()}}).catch(n.CACHE_CLEAR_ERROR,function(e){c.info("LastPayrollTileController swallowed client cache clear ",e)})):(t.lastPayrollExists=!1,t.isCurrentPayPeriodQueued=t.payPeriodStateManager.isCurrentPayPeriodQueued,r.resolve(!0))})},a.prototype.canDisplay=function(a){var t=r.defer(),l=this,o=!1;return this.payPeriodStateManager.checkInitialization(a.clients[0]).then(function(){e.get(l,"payPeriodStateManager.payrollState.payrollSecurity")&&(l.payPeriodStateManager.payrollState.payrollSecurity.isVersion1()?o=l.payPeriodStateManager.payrollState.payrollSecurity.isNoMask(l.payPeriodStateManager.payrollState.payrollSecurity.payRateSalaryAmountsPermissions)&&l.payPeriodStateManager.payrollState.payrollSecurity.isNoMask(l.payPeriodStateManager.payrollState.payrollSecurity.companyCalculatedAmountsTotalsPermissions)&&!l.payPeriodStateManager.payrollState.payrollSecurity.hasAccessGroups():l.payPeriodStateManager.payrollState.payrollSecurity.isVersion0()&&(o=l.payPeriodStateManager.payrollState.payrollSecurity.isNoMask(l.payPeriodStateManager.payrollState.payrollSecurity.payRateSalaryAmountsPermissions))),t.resolve(o)}).catch(function(e){t.reject(e)}).done(),t.promise},a.prototype.goToPayrollReports=function(){this.payrollAnalytics.navigateToPayrollReports();var e={locationId:"PayperiodFolder"};this.drawerManager.openDrawer("paychex.app.reporting.drawer.deepLink","appDrawer",e)},a.$inject=["LastPayrollDataService","TileManager","TranslationHelper","ClientHelper","PayrollDialogService","$scope","PayPeriodStateManager","DrawerManager","PayrollAnalytics","PayrollSecurityHelper"],a.registeredName="LastPayrollTileController",a}()}),e("paychex.app.payroll.dataSource.LastPayrollData/LastPayrollDataRemote",["lodash","paychex.app.payroll/services/BasePayrollRemote"],function(e,a){return e.assign({},a,{retryCount:2,operation:"loadLastPayrollDetails",destination:"PayrollTileRemote"})}),e("paychex.app.payroll.dataSource.LastPayrollData",["paychex.app.payroll.dataSource.LastPayrollData/LastPayrollDataRemote"],function(e){return e}),e("paychex.app.payroll/tile/data/lastPayrollData/LastPayrollDataService",["paychex.app.payroll.dataSource.LastPayrollData","com/paychex/payroll/dto/LoadLastPayrollDetailsRequest"],function(e,a){return function(){function t(a){this.lastPayrollData=a(e)}return t.prototype.getLastPayrollData=function(e,t,l,r){var o=new a;return o.clientId=e,o.clientCaid=t,o.branch=l,o.isASOClient=r.isASOClient,o.isPEOClient=r.isPEOClient,o.checkDate=r.checkDate,o.runDate=r.runDate,o.submittedDate=r.submittedDate,this.lastPayrollData(null,{request:o})},t.$inject=["dataOperationFactory"],t.registeredName="LastPayrollDataService",t}()}),e("paychex.app.payroll.tile.lastPayroll/module",["angular","paychex.app.payroll.shared","paychex.app.payroll/services/payrollDialogService/module","paychex.app.payroll/tile/lastPayroll/LastPayrollTileController","paychex.app.payroll/tile/data/lastPayrollData/LastPayrollDataService"],function(e,a,t,l,r){var o=e.module("paychex.app.payroll.tile.lastPayroll",[a.name,t.name]);return o.controller(l.registeredName,l),o.service(r.registeredName,r),o}),e("paychex.app.payroll.tile.lastPayroll/dynamicTile",["paychex.core/Promise","require"],function(e,a){return new e(function(e){a(["paychex.app.payroll.shared"],function(){a(["paychex.app.payroll.tile.lastPayroll/module"],function(a){e(a)})})})}),e("paychex.app.payroll.tile.lastPayroll/main",["paychex.app.payroll/amd-plugins/promise!./dynamicTile"],function(e){return e}),e("paychex.app.payroll.tile.lastPayroll",["paychex.app.payroll.tile.lastPayroll/main"],function(e){return e})}(define,require);
//# sourceMappingURL=main.js.map