!function(e,t){"use strict";e("paychex.app.payroll/amd-plugins/promise",[],function(){return{load:function(e,t,a){t([e],function(e){if(e&&e.then)return void e.then(function(e){a(e)});a(e)})}}}),e("paychex.app.payroll.dataSource.PayrollInitializeData/PayrollInitializeDataRemote",["lodash","paychex.app.payroll/services/BasePayrollRemote"],function(e,t){return e.assign({},t,{operation:"createSession",destination:"PayrollTileRemote"})}),e("paychex.app.payroll.dataSource.PayrollInitializeData",["paychex.app.payroll.dataSource.PayrollInitializeData/PayrollInitializeDataRemote"],function(e){return e}),e("paychex.app.payroll.dataSource.PayrollInitializeDataClient/PayrollInitializeDataClientRemote",["lodash","paychex.app.payroll/services/BasePayrollRemote"],function(e,t){return e.assign({},t,{operation:"updateSessionClientId",destination:"PayrollTileRemote",retryCount:3})}),e("paychex.app.payroll.dataSource.PayrollInitializeDataClient",["paychex.app.payroll.dataSource.PayrollInitializeDataClient/PayrollInitializeDataClientRemote"],function(e){return e}),e("paychex.app.payroll.dataSource.PayrollInitializeWithPayPeriod/PayrollInitializeWithPayPeriodRemote",["lodash","paychex.app.payroll/services/BasePayrollRemote"],function(e,t){return e.assign({},t,{operation:"loadPayrollWithPayPeriodV2",destination:"PayrollTileRemote"})}),e("paychex.app.payroll.dataSource.PayrollInitializeWithPayPeriod",["paychex.app.payroll.dataSource.PayrollInitializeWithPayPeriod/PayrollInitializeWithPayPeriodRemote"],function(e){return e}),e("paychex.app.payroll/services/init/PayrollInitializeDataService",["lodash","paychex.app.payroll.dataSource.PayrollInitializeData","paychex.app.payroll.dataSource.PayrollInitializeDataClient","paychex.app.payroll.dataSource.PayrollInitializeWithPayPeriod","com/paychex/payroll/dto/UpdateSessionClientIdRequest","com/paychex/payroll/dto/LoadPayrollWithSelectedPayPeriod"],function(e,t,a,r,i,o){return function(){function e(e){this.payrollInitializeData=e(t),this.payrollInitializeClientData=e(a),this.payrollInitializeDataWithPayPeriod=e(r)}return e.prototype.getCurrentSession=function(){return this.payrollInitializeData(null,{request:null})},e.prototype.selectClient=function(e,t){var a=new i(e.branchId,e.caid,e.internalCaid,e.displayId,e.version,t);return this.payrollInitializeClientData(null,{request:a})},e.prototype.selectClientWithPayPeriod=function(e,t,a,r,i,l,n,s){var c=new o(e,t,a,r,i,l,n,s);return this.payrollInitializeDataWithPayPeriod(null,{request:c})},e.$inject=["dataOperationFactory"],e.registeredName="PayrollInitializeDataService",e}()}),e("paychex.app.payroll/services/init/PayrollInitializeDataCachedService",["paychex.app.payroll/services/CachingFetchFactory","paychex.core/Promise","lodash"],function(e,t,a){function r(e){var t;return t=3===a.size(e)?a.zipObject(["selectedClient","selectedPayPeriod","skipEntitlement"],e):a.zipObject(["selectedClient","selectedPayPeriod","includeWorkerLevelData","sortOrder"],e),t.selectedPayPeriod&&(t.selectedPayPeriod={entityKey:t.selectedPayPeriod.primaryId.entityKey,checkCount:t.selectedPayPeriod.checkCount,status:t.selectedPayPeriod.payPeriodStatusType.convertedValue}),t.selectedClient&&(t.selectedClient=t.selectedClient.displayId),JSON.stringify(t)}function i(t,i){function l(e,a,r,o){return i.payroll.then(t.selectClientWithPayPeriod.bind(t,e.branchId,e.caid,e.caid,e.displayId,a.primaryId.entityKey,a.checkDate,r,o))}function n(e,a,r){return i.payroll.then(t.selectClient.bind(t,e,!r))}a.assign(this,e(n,"SelectClient",r,o),e(l,"SelectClientWithPayPeriod",r,o))}var o=1;return i.registeredName="PayrollInitializeDataCachedService",i.$inject=["PayrollInitializeDataService","CreateSessionPromises"],i}),function(){e("paychex.app.payroll/services/init/module",["angular","paychex.framework.angular.data/module","paychex.app.payroll/services/init/PayrollInitializeDataService","paychex.app.payroll/services/init/PayrollInitializeDataCachedService"],function(e,t,a,r){return e.module("paychex.app.payroll.services.init",[t.name]).service(a.registeredName,a).service(r.registeredName,r)})}(),e("paychex.app.payroll/services/payPeriod/manage/RestPayPeriod",["htmlregistry","paychex.framework.angular.data/communication/RestFactory","lib.moment","paychex.core/Errors","lodash","paychex.app.common/messages/RemoteMessageTranslator"],function(e,t,a,r,i,o){function l(e){return a(e.getDate()).format("MM/DD/YYYY")}function n(e){return{description:e.description,startDate:l(e.startDate),endDate:l(e.endDate),checkDate:l(e.checkDate)}}function s(e){if(e.causedBy){var t=e.causedBy;if(t.name===r.Types.Http&&400===t.status){var a=o.translateRemoteMessages(t.data.messages);a.containsCriticalErrors()?r.throw(r.Types.RemoteOperation,"HTTP result contained critical errors.",{messageGroup:a,result:e,url:d}):(a.containsWarnings()||a.containsErrors())&&r.throw(r.Types.Validation,"Remote operation had non-critical messages.",{messageGroup:a,result:e,severity:"NONE"})}}r.throw(e)}function c(e){return null!==e.primaryId&&void 0!==e.primaryId?e.primaryId.entityKey:""}function p(e){this.put=function(t,a,o){return e(h)({clientId:t,payPeriodId:c(a),backDateConfirmed:!!o},n(a)).catch(r.Types.RestOperation,s).catch(r.Types.RestOperation,function(e){if(e.causedBy){var t=e.causedBy;if(t.name===r.Types.Http&&300===t.status&&t.data){var o=i.find(t.data.messages,function(e){return"PAYENTRY341"===e.messageId});if(void 0!==o){var l=i.cloneDeep(a);return l.checkDateBackDated=!0,l.checkDateBackDatedMessage=o,l}}}r.rethrow(e)})},this.delete=function(t,a){return e(u)({clientId:t,payPeriodId:a}).catch(r.Types.RestOperation,s)}}var y=e.urlPrefix.nonCdn["myapps.payroll.rest.url"],d=y+"/companies/:clientId/payperiods/:payPeriodId",h={method:"PUT",callType:"rest",url:d+"?backDateConfirmed=:backDateConfirmed"},u={method:"DELETE",callType:"rest",url:d};return p.$inject=["dataOperationFactory"],p.registeredName="RestPayPeriod",p}),e("paychex.app.payroll/services/payPeriod/manage/SavePayPeriodRemote",["lodash","paychex.app.payroll/services/BasePayrollRemote"],function(e,t){return e.assign({},t,{operation:"savePayPeriod",destination:"PayPeriodRemote",generateOperationParams:function(e,t){return[t.clientId,t.payPeriod]}})}),e("paychex.app.payroll/services/payPeriod/manage/DeletePayPeriodRemote",["lodash","paychex.app.payroll/services/BasePayrollRemote"],function(e,t){return e.assign({},t,{operation:"deletePayPeriod",destination:"PayPeriodRemote",generateOperationParams:function(e,t){return[t.clientId,t.payPeriodId,t.hasSavedChecks]}})}),e("paychex.app.payroll/services/payPeriod/manage/ProcessAndSavePayPeriodRemote",["lodash","paychex.app.payroll/services/BasePayrollRemote"],function(e,t){return e.assign({},t,{operation:"processAndSavePayPeriod",destination:"PayPeriodRemote",generateOperationParams:function(e,t){return[t.clientId,t.payPeriod]}})}),e("paychex.app.payroll/services/payPeriod/manage/GetHolidaysRemote",["lodash","paychex.app.payroll/services/BasePayrollRemote"],function(e,t){return e.assign({},t,{operation:"loadClientHolidays",destination:"PayPeriodRemote",generateOperationParams:function(e,t){return[t.clientId]}})}),e("paychex.app.payroll/services/payPeriod/manage/GetClientPayPeriodsRemote",["lodash","paychex.app.payroll/services/BasePayrollRemote"],function(e,t){return e.assign({},t,{operation:"loadPayPeriods",destination:"PayPeriodRemote",generateOperationParams:function(e,t){return[t.clientId]}})}),e("paychex.app.payroll/services/payPeriod/manage/ManagePayPeriodService",["lodash","com/paychex/payroll/dto/PayPeriod","com/paychex/framework/dto/CalendarDate","com/paychex/type/PayPeriodStatusType","com/paychex/type/FrequencyType","paychex.app.payroll/services/payPeriod/manage/SavePayPeriodRemote","paychex.app.payroll/services/payPeriod/manage/DeletePayPeriodRemote","paychex.app.payroll/services/payPeriod/manage/ProcessAndSavePayPeriodRemote","paychex.app.payroll/services/payPeriod/manage/GetHolidaysRemote","paychex.app.payroll/services/payPeriod/manage/GetClientPayPeriodsRemote","com/paychex/framework/dto/EntityId","paychex.app.payroll/constants/PayrollApplicationConstants","paychex.core/Promise"],function(e,t,a,r,i,o,l,n,s,c,p,y,d){var h=["dataOperationFactory","PayrollAnalytics","FeatureSwitchService","RestPayPeriod"],u=function(t,r,i,h){var u=this;u.payrollAnalytics=r,u.holidaysListMap={},u.deletePayPeriod=function(e,a,r){if(i.isActive("PAYROLL_REST_REMOTE_TOGGLE"))return h.delete(e,a,!0);var o=new p;return o.entityKey=a,t(l)(null,{clientId:e,payPeriodId:o,hasSavedChecks:r})},u.savePayPeriodCall=function(e,a){return i.isActive("PAYROLL_REST_REMOTE_TOGGLE")?h.put(e,a,!0):t(o)(null,{clientId:e,payPeriod:a})},u.processAndSavePayPeriod=function(e,a){return i.isActive("PAYROLL_REST_REMOTE_TOGGLE")?h.put(e,a):t(n)(null,{clientId:e,payPeriod:a})},u.getHolidays=function(e){return t(s)(null,{clientId:e})},u.calendarDate=function(e){var t=new a;return t.year=e.getFullYear(),t.month=e.getMonth()+1,t.date=e.getDate(),t},u.generateErrorAnalytics=function(t,a,r,i,o,l,n,s){var c=t.messageGroup;e.forEach(c.getAllErrors(),function(e){u.payrollAnalytics.managePayPeriodErrors(a,r,e.messageId,e.messageText,o,l,i,n,y.ERROR_DISPLAYED,s)}),e.forEach(c.getAllWarnings(),function(e){u.payrollAnalytics.managePayPeriodErrors(a,r,e.messageId,e.messageText,o,l,i,n,y.WARNING_DISPLAYED,s)})},u.getErrorCount=function(t,a){var r=t.messageGroup,i={errorCount:r.getAllErrors().length+a.errorCount,warningCount:r.getAllWarnings().length+a.warningCount,errorCodes:""};return e.forEach(r.getAllErrors(),function(e){""===i.errorCodes?i.errorCodes=e.messageId:i.errorCodes=i.errorCodes+", "+e.messageId}),i.errorCodes=i.errorCodes+a.errorCodes,i},u.getHolidayList=function(t){return e.isEmpty(u.holidaysListMap[t])?u.getHolidays(t).then(function(a){return e.forEach(a.holidayDetails,function(e){e.clientHolidayObservedDate.formatted=new Date(e.clientHolidayObservedDate.year,e.clientHolidayObservedDate.month-1,e.clientHolidayObservedDate.date)}),u.holidaysListMap[t]=a.holidayDetails,u.holidaysListMap[t]}):d.resolve(u.holidaysListMap[t])},u.getClientPayPeriods=function(e){return t(c)(null,{clientId:e})}};return u.$inject=h,u.registeredName="ManagePayPeriodService",u}),e("paychex.app.payroll/services/payPeriod/manage/GetClientPayPeriodsCachingService",["lodash","paychex.app.payroll/services/CachingFetchFactory"],function(e,t){var a=["ManagePayPeriodService"],r=function(a){e.assign(this,t(a.getClientPayPeriods.bind(a),"ClientPayPeriods"))};return r.$inject=a,r.registeredName="GetClientPayPeriodsCachingService",r}),e("paychex.app.payroll/services/payPeriod/PayPeriodService",["paychex.core/Promise","lodash"],function(e,t){function a(e,a){function r(e){var r=a.createPayPeriodFromCurrentPayPeriod(e);return t.forEach(e.attrs,function(e){r[e.name]=e.value}),r}var i=this;i.fetchCurrentPayPeriodByClient=function(a,i,o,l){return e.fetchSelectClient(a,i,o,l).then(function(e){var a=t.get(e,"loadPayrollSetupDataResponse.currentPayPeriod"),i=r(a);return i.isCurrentPayPeriodQueued=t.get(e,"loadPayrollSetupDataResponse.isCurrentPayPeriodQueued"),i})},i.fetchLastPayPeriod=function(a,i,o,l){return e.fetchSelectClient(a,i,o,l).then(function(e){var a=t.get(e,"loadPayrollSetupDataResponse.lastPayPeriod");return a&&(a=r(a)),a})},i.fetchPayrollProducts=function(a,r,i,o){return e.fetchSelectClient(a,r,i,o).then(function(e){return t.get(e,"loadPayrollSetupDataResponse.clientPayrollProducts")})},i.fetchEntitlements=function(a,r,i,o){return e.fetchSelectClient(a,r,i,o).then(function(e){return t.get(e,"payrollSetupDataResponse.userApplicationEntitlements")})},i.getCurrentPayPeriod=function(t,a,i,o,l){return e.fetchSelectClientWithPayPeriod(t,a,i,o,l).then(r)},i.invalidateCurrentPayPeriod=function(){e.invalidateSelectClient(),e.invalidateSelectClientWithPayPeriod()}}var r=["PayrollInitializeDataCachedService","PayPeriodHelper"];return a.registeredName="PayPeriodService",a.$inject=r,a}),function(){e("paychex.app.payroll/services/payPeriod/module",["angular","paychex.framework.angular.data/module","paychex.app.common/services","paychex.app.payroll/helpers/module","paychex.app.payroll/services/init/module","paychex.app.payroll/services/payPeriod/manage/RestPayPeriod","paychex.app.payroll/services/payPeriod/manage/ManagePayPeriodService","paychex.app.payroll/services/payPeriod/manage/GetClientPayPeriodsCachingService","paychex.app.payroll/services/payPeriod/PayPeriodService"],function(e,t,a,r,i,o,l,n,s){return e.module("paychex.app.payroll.services.payPeriod",[t.name,a.name,r.name,i.name]).service(o.registeredName,o).service(l.registeredName,l).service(n.registeredName,n).service(s.registeredName,s)})}(),e("paychex.app.payroll/state/CheckDetailStateManager",["lodash","com/paychex/framework/custom/BigDecimal","paychex.core/Logger","paychex.core/Errors","com/paychex/payroll/dto/VendorCheck","com/paychex/payroll/dto/SavePayPeriodCheckPath","paychex.core/Promise"],function(e,t,a,r,i,o,l){var n=a.get("paychex.app.payroll.shared.state.CheckDetailStateManager");return function(){function a(e,a,r,i,o,l,n){this.payrollState=null,this.m3Service=e,this.getChecksForWorkersService=a,this.loadVendorChecksService=r,this.templateEarningHelper=i,this.checkPayComponentHelper=o,this.payPeriodCheckHelper=l,this.gridLoadingByInitializingDrawer=!1,this.gridLoadingByChangingPayee=!1,this.gridLoadingByChangingCheckManually=!1,this.selectedCheckAddsToPayEarnings=null,this.selectedCheckOtherEarnings=null,this.selectedCheckDeductions=null,this.SELECTED_CHECK_ADDS_TO_PAY_GRID_ID="addsToPay-grid",this.SELECTED_CHECK_DEDUCTIONS_GRID_ID="deduction-grid",this.SELECTED_CHECK_OTHER_GRID_ID="otherItem-grid",this.VENDOR_GRID_ID="vendor-grid",this.earningGridsLoaded={},this.earningGridsLoaded[this.SELECTED_CHECK_ADDS_TO_PAY_GRID_ID]=!1,this.earningGridsLoaded[this.SELECTED_CHECK_OTHER_GRID_ID]=!1,this.earningGridsLoaded[this.SELECTED_CHECK_DEDUCTIONS_GRID_ID]=!1,this.isEarningLayoutsToggleEnabled=n.isActive("PAYROLL_EARNING_LAYOUTS_TOGGLE"),this.checksRefreshedCallback=null,this.overtimeFactors=[{id:"OT 1",value:new t("0.5")},{id:"OT 2",value:new t("1")},{id:"OT 3",value:new t("1.5")},{id:"OT 4",value:new t("2")},{id:"OT 5",value:new t("2.5")},{id:"OT 6",value:new t("3")},{id:"OT 7",value:new t("3.5")},{id:"OT 8",value:new t("4")},{id:"OT 9",value:new t("4.5")},{id:"OT 10",value:new t("5")}]}return a.prototype.checkInitialization=function(e,t){return this.payrollState.checkInitialization(e,t)},a.prototype.init=function(){},a.prototype.isCheckViewReady=function(){return(0===this.addsToPayEarningsCount()||this.earningGridsLoaded[this.SELECTED_CHECK_ADDS_TO_PAY_GRID_ID])&&(0===this.otherEarningsCount()||this.earningGridsLoaded[this.SELECTED_CHECK_OTHER_GRID_ID])&&(0===this.deductionsCount()||this.earningGridsLoaded[this.SELECTED_CHECK_DEDUCTIONS_GRID_ID])},a.prototype.addsToPayEarningsCount=function(){return this.selectedCheckAddsToPayEarnings?this.selectedCheckAddsToPayEarnings.length:0},a.prototype.otherEarningsCount=function(){return this.selectedCheckOtherEarnings?this.selectedCheckOtherEarnings.length:0},a.prototype.deductionsCount=function(){return this.selectedCheckDeductions?this.selectedCheckDeductions.length:0},a.prototype.resetGrids=function(){var t=this;e.forEach(t.earningGridsLoaded,function(e,a){t.earningGridsLoaded[a]=!1})},a.prototype.countLoadedEarnings=function(){return this.payrollState.selectedCheck instanceof i?0:e.size(this.payrollState.selectedCheck.getAllEarnings())+e.size(this.payrollState.selectedCheck.getAllDeductions())},a.prototype.selectCheck=function(t){var a=this;this.payrollState.selectedCheck=t,e.get(this.payrollState,"selectedChecksItem")&&e.get(this.payrollState.selectedChecksItem,"_worker")&&e.get(this.payrollState.selectedChecksItem._worker,"summaryStateWithholdings")&&(this.payrollState.workerSummaryStateWithholdings=[],this.payrollState.workerSummaryStateWithholdings=this.payrollState.selectedChecksItem._worker.summaryStateWithholdings),this.payrollState.workerSummaryLocalWithholdings=[],e.get(this.payrollState,"selectedChecksItem")&&e.get(this.payrollState.selectedChecksItem,"_worker")&&e.get(this.payrollState.selectedChecksItem._worker,"summaryLocalWithholdings")&&(this.payrollState.workerSummaryLocalWithholdings=this.payrollState.selectedChecksItem._worker.summaryLocalWithholdings),this.isEarningLayoutsToggleEnabled&&(t._isTemplateApplied=!1),this.templateEarningHelper.addTemplateEarnings(t,this.payrollState.payrollSecurity,this.payrollState.clientPayrollData),e.forEach(e.concat(t.addsToPayEarnings,t.otherItemEarnings),function(e){e&&(a.isEarningLayoutsToggleEnabled||a.payPeriodCheckHelper.setEarningIsTemplateReportCode(e,t,a.payrollState.clientPayrollData),e.calculationMethod&&!e.getCheckPayComponentPaymentMethod()&&e.setCheckPayComponentPaymentMethod(a.checkPayComponentHelper.getPaymentMethodOnCheckPayComponent(e,a.payrollState.selectedChecksItem,t)))}),this.selectedCheckAddsToPayEarnings=this.getAddsToPayEarningsToDisplay(),this.selectedCheckOtherEarnings=this.getOtherItemEarningsToDisplay(),this.selectedCheckDeductions=this.getDeductionsToDisplay()},a.prototype.getCheckPayCompsToDisplay=function(t){var a=0;return e.forEach(t,function(e){e.setUIDisplaySequence(a++)}),t},a.prototype.getAddsToPayEarningsToDisplay=function(){if(this.payrollState.selectedCheck instanceof i)return[];var t=this.payrollState.selectedCheck.getAllAddsToPayEarningsIncludingBlockedSorted().sort(this.checkPayComponentHelper.drawerCheckPayComponentsSortFunction);return this.getCheckPayCompsToDisplay(e.map(t,function(e){return e._isAddsToPayEarning=!0,e}))},a.prototype.getOtherItemEarningsToDisplay=function(){if(this.payrollState.selectedCheck instanceof i)return[];var t=this.payrollState.selectedCheck.getAllOtherItemEarningsSorted().sort(this.checkPayComponentHelper.drawerCheckPayComponentsSortFunction);return this.getCheckPayCompsToDisplay(e.map(t,function(e){return e._isOtherEarning=!0,e}))},a.prototype.getDeductionsToDisplay=function(){if(this.payrollState.selectedCheck instanceof i)return[];var t=this.payrollState.selectedCheck.getAllDeductionsSorted().sort(this.checkPayComponentHelper.drawerCheckPayComponentsSortFunction);return this.getCheckPayCompsToDisplay(e.map(t,function(e){return e._isDeduction=!0,e}))},a.prototype.clearAllLoads=function(){},a.prototype.returnCheckPath=function(){return this.payrollState.selectedCheck.checkWithholdings?o.RETURN_FULL_CHECK:null},a.prototype.reloadChecks=function(t){var a,o=this,s=o.payrollState.selectedCheck;if(delete s.arrayIndex,s instanceof i)return a={payPeriodId:this.payrollState.selectedPayPeriod.primaryId,clientAccountNumber:this.payrollState.client.displayId,currentFilter:null},this.loadVendorChecksService.loadChecksForAllVendors(a).catch(r.Types.RemoteOperation,o.m3Service.createDefaultHandler("paychex.app.payroll.checkDetailDrawer.m3."+o.selectedTab)).catch(r.Types.Validation,o.m3Service.createDefaultHandler("paychex.app.payroll.checkDetailDrawer.m3."+o.selectedTab)).then(function(e){return e.vendorChecks&&o.checksRefreshedCallback&&o.checksRefreshedCallback(e.vendorChecks,s),l.resolve()});a={payPeriod:o.payrollState.selectedPayPeriod,templateId:s.templateId,displayId:o.payrollState.clientPayrollData.checkShellDisplayId,workerIds:[s.getWorker().workerID.entityKey],checkPathsForWorkers:[],selectPath:this.returnCheckPath(),workerSummarySelectPaths:[]};var c=s.partyItem;return this.getChecksForWorkersService.getChecksForWorkers(a).catch(r.Types.RemoteOperation,o.m3Service.createDefaultHandler("paychex.app.payroll.checkDetailDrawer.m3."+o.selectedTab)).catch(r.Types.Validation,o.m3Service.createDefaultHandler("paychex.app.payroll.checkDetailDrawer.m3."+o.selectedTab)).then(function(a){return e.forEach(a.payPeriodChecks,function(e){e.partyItem=c,e.markClean()}),a.payPeriodChecks&&(o.checksRefreshedCallback&&o.checksRefreshedCallback(a.payPeriodChecks,s,t),n.info("Checks reloaded for worker: "+o.payrollState.selectedChecksItem.getEmploymentId())),l.resolve()})},a.prototype.getWithholdingsData=function(){var t,a,s=this,c=s.payrollState.selectedCheck,p={TIMEOUT_IN_MS:6e5};return c instanceof i?(n.error("vendor check no withholdings"),l.resolve()):(t={payPeriod:s.payrollState.selectedPayPeriod,templateId:c.templateId,displayId:s.payrollState.clientPayrollData.checkShellDisplayId,workerIds:[c.getWorker().workerID.entityKey],checkPathsForWorkers:[],selectPath:o.RETURN_ONLY_WITHHOLDINGS,workerSummarySelectPaths:[]},this.getChecksForWorkersService.getChecksForWorkers(t).timeout(p.TIMEOUT_IN_MS,r.get(r.Types.Timeout,"Get for workers checks Timed Out")).catch(r.Types.RemoteOperation,s.m3Service.createDefaultHandler("paychex.app.payroll.checkDetailDrawer.m3."+s.selectedTab)).catch(r.Types.Validation,s.m3Service.createDefaultHandler("paychex.app.payroll.checkDetailDrawer.m3."+s.selectedTab)).then(function(t){return t.payPeriodChecks&&(n.info("Withholdings loaded for worker: "+s.payrollState.selectedChecksItem.getEmploymentId()),c.id.entityKey!==s.payrollState.selectedCheck.id.entityKey&&n.info("Check selected to load taxes for does not match currently selected check."),e.map(s.payrollState.selectedChecksItem.payPeriodChecks,function(r){var i=e.find(t.payPeriodChecks,function(e){return r.id.entityKey===e.id.entityKey}).checkWithholdings;return i?(a=!r.isUIDirty(),r.checkWithholdings=i,a&&r.markClean(),s.updateWithholdingsAllocationOverriddenFlags(r),n.info("Updated withholdings info for check "+r.checkSequenceNumber)):n.info("No withholdings info found for check "+r.checkSequenceNumber),r})),t.payPeriodChecks}))},a.prototype.updateWithholdingsAllocationOverriddenFlags=function(t){var a=!1,r=!1;e.forEach(t.addsToPayEarnings,function(e){if(e.stateWithholdingsOverriddenIndicator&&(a=!0),e.localWithholdingsOverriddenIndicator&&(r=!0),a&&r)return!1}),t._isLocalWithholdingsAllocationOverridden=r,t._isStateWithholdingsAllocationOverridden=a},a.$inject=["M3Service","GetChecksForWorkersService","LoadVendorChecksService","TemplateEarningHelper","CheckPayComponentHelper","PayPeriodCheckHelper","FeatureSwitchService"],a.registeredName="CheckDetailStateManager",a}()}),e("paychex.app.payroll/state/ClientPayrollData",["lodash","paychex.framework.angular.ui2/pngOptionSelector/TreeNode"],function(e,t){return function(){function a(){this.clientLaborAssignments=[],this.clientJobs=[],this.clientShifts=[],this.clientPayComponents=[],this.defaultClientPayComponents=[],this.clientOrgTree=[],this.orgTreeNodes={},this.clientPayrollProducts=[],this.clientOrganizations=[],this.hasSLD=!1,this.clientDataLoaded=!1,this.checkShellDisplayId=null,this.clientPositions=[],this.clientLocations=[],this.workersCompClassCodes=[],this.clientDefinedPayFrequencyList=[],this.clientDefinedCategoryList=[],this.filterGroupArray=[]}return a.prototype.createClientOrgTree=function(){this.clientOrgTree=[],this.orgTreeNodes={};var a=this,r=[];e.forEach(this.clientOrganizations,function(e){var i,o=e.primaryId.entityKey,l=e.parent?e.parent.entityKey:null,n=a.orgTreeNodes[o]||new t(o,!1),s=l?a.orgTreeNodes[l]||new t(l,!1):null;o!==l&&(a.orgTreeNodes[o]=n,s?(a.orgTreeNodes[l]=s,s.addChild(n)):r.push(n),i=e.fullName,n.displayValue=i||"")}),this.clientOrgTree=t.buildFlatHierarchy(r)},a.prototype.clientHasProduct=function(t,a){var r=!1;return this.clientPayrollProducts&&e.forEach(this.clientPayrollProducts,function(e){if(e.id===t.id&&e.startDate&&e.endDate&&a.isBetween(e.startDate,e.endDate))return r=!0,!1}),r},a}()}),e("paychex.app.payroll/state/PayEntryStateManager",["lodash","com/paychex/payroll/dto/WorkerPayType","com/paychex/payroll/dto/WorkerChecksItem","paychex.core/Promise","paychex.core/Logger","paychex.core/Errors","paychex.core/Tracker","com/paychex/type/ProductType","com/paychex/payroll/dto/PayPeriodCheck","com/paychex/payroll/dto/VendorChecksItem","com/paychex/png/common/party/dto/PartyListItem","com/paychex/framework/custom/BigDecimal","paychex.app.payroll/constants/PayrollApplicationConstants","paychex.app.payroll/constants/PayrollApplicationEvents","paychex.app.payroll.shared/preferences/PayrollPreferencesConstants","lib.rx"],function(e,t,a,r,i,o,l,n,s,c,p,y,d,h,u,P){var g,S=i.get("paychex.app.payroll.shared.state.PayEntryStateManager");return function(){function i(e,a,i,o,l,n,s,c,p,d,h,u,S,C,f,m,D,k,E,T){g=this,this.payrollState=null,this.EVENTS={LIGHTWEIGHT_DATA_LOADED:new P.BehaviorSubject(!1)},this.workers={},this.updateGroupTotals={},this.allGridsLoaded=!1,this.$timeout=e,this.payPeriodHelper=o,this.payPeriodCheckHelper=l,this.payrollTranslations=n,this.getChecksForWorkersService=s,this.m3Service=c,this.checkDetailStateManager=p,this.templateEarningHelper=d,this.featureSwitchService=h,this.checkPayComponentHelper=u,this.payrollViewSelectionHelper=S,this.loadVendorChecksService=C,this.payrollWorkersService=k,this.earningLayouts=f,this.payrollAnalytics=m,this.payrollChecksService=E,this.payrollImportInfoService=T,this.isPayrollImplicitSaveToggleEnabled=h.isActive("PAYROLL_IMPLICIT_SAVE_TOGGLE"),this.isEarningLayoutsToggleEnabled=h.isActive("PAYROLL_EARNING_LAYOUTS_TOGGLE"),this.isJCLDFeatureSwitchEnabled=h.isActive("PAYROLL_JCLD_EDIT_TOGGLE"),this.isPayrollAdvancedFiltersEnabled=h.isActive("PAYROLL_ADVANCED_FILTERS_TOGGLE"),this.importDrawerToggle=this.featureSwitchService.isActive("PAYROLL_IMPORT_DRAWER"),this.isWorkerAvatarSwitchEnabled=h.isActive("PAYROLL_WORKER_AVATAR_TOGGLE"),this.isFakeEditEnabled=h.isActive("PAYROLL_GRID_FAKE_EDIT_TOGGLE"),this.checksLoadDeferred=r.defer(),this.checksLoaded=!1,this.startPayrollErrorHandler=!1,this.startPayrollDataCache={payEntryPreferences:null,isFirstTimeUser:!1},this.trackingState=null,this.includeWithholdings=!1,this.gridViewDirectiveDeferred=r.defer(),this.loadPayrollEntryDataService=a,this.currentPayrollDataService=i;var v={};v[t.HOURLY]={},v[t.SALARY]={},v[t.OTHER]={},v[t.VENDOR]={amountTotal:y.ZERO},this.payPeriodTotals={amount:y.ZERO,hours:y.ZERO,checkCount:0,isAmountSecured:!1,payComponentTotals:v},this.payrollClientService=D}return i.prototype.checkInitialization=function(e,t){return this.payrollState.checkInitialization(e,t)},i.prototype.reload=function(e){return this.payrollState.reloadInitialization(e).then(function(){g.payrollImportInfoService.getImportInfo()}).catch(function(){r.reject(o.get("ImportInfoAfterReloadError","pay entry grid reload did not complete successfully",{severity:"NONE"}))})},i.prototype.init=function(){},i.prototype.isEmptyState=function(){return!!this.workers&&!(this.workers[d.NEWLY_ADDED_PAYEE]&&this.workers[d.NEWLY_ADDED_PAYEE].length||this.workers[t.HOURLY]&&this.workers[t.HOURLY].length||this.workers[t.SALARY]&&this.workers[t.SALARY].length||this.workers[t.OTHER]&&this.workers[t.OTHER].length||this.workers[t.VENDOR]&&this.workers[t.VENDOR].length)},i.prototype.getTotalWorkerCount=function(){var e=0;return this.workers[d.NEWLY_ADDED_PAYEE]&&(e+=this.workers[d.NEWLY_ADDED_PAYEE].length),this.workers[t.HOURLY]&&(e+=this.workers[t.HOURLY].length),this.workers[t.SALARY]&&(e+=this.workers[t.SALARY].length),this.workers[t.OTHER]&&(e+=this.workers[t.OTHER].length),this.workers[t.VENDOR]&&(e+=this.workers[t.VENDOR].length),e},i.prototype.preLoadPayrollGridData=function(t,a){var r=t.trackingToken,i=this;this.trackingState=t,e.get(a,"skipClearCache",!1)||this.clearWorkerList(),this.payrollState.errorLoadingPayroll=!1;var o=i.payrollState.client.displayId;i.payrollViewSelectionHelper.getPayrollPreferences(o).then(function(e){i.workerSortOrder=e[u.SORT_ORDER],i.payrollWorkersService.fetchCurrentPayrollWorkerList(!1,i.payrollState.selectedPayPeriod,i.workerSortOrder).then(function(t){if(i.trackingState.isStillCurrent(r)){i.EVENTS.LIGHTWEIGHT_DATA_LOADED.onNext(t),i.workers=i.payrollWorkersService.bucketWorkerResponse(t),i.payrollState.payeeList=i.payrollWorkersService.updateTrackingIds(i.payrollWorkersService.flattenBucketedWorkers(i.workers));var l=i.payrollState.payeeList.length;i.payrollViewSelectionHelper.getGridLayout(o,l).then(function(l){l===d.GRID_LAYOUT_GROUPED?i.loadPayPeriodChecks(r,a):l===d.GRID_LAYOUT_LIST&&i.loadPayPeriodChecksForFirstPage(o,i.payrollState.selectedPayPeriod,t,e)})}}).catch(function(e){S.error("worker load stopped because:",e),i.payrollState.errorLoadingPayroll=!0,i.clearWorkerList()}).done(),i.fetchClientPayrollData(o,i.payrollState.selectedPayPeriod).done()})},i.prototype.setSelectedLayout=function(e){this.earningLayouts.setSelectedLayout(e),h.LAYOUT_CHANGED.onNext(),this.payrollState.clientPayrollData.defaultClientPayComponents=this.earningLayouts.getEarningsOfLayout()},i.prototype.fetchClientPayrollData=function(e,t){return r.all([g.payrollClientService.hasSLD(e,t).then(function(e){g.payrollState.clientPayrollData.hasSLD=e}),g.payrollClientService.fetchClientOrganizations(e,t).then(function(e){g.payrollState.clientPayrollData.clientOrganizations=e,g.payrollState.clientPayrollData.createClientOrgTree()}),g.payrollClientService.fetchClientPayComponents(e,t).then(function(e){g.payrollState.clientPayrollData.clientPayComponents=e,g.isEarningLayoutsToggleEnabled?(g.earningLayouts.generateLayouts(g.payrollState.clientPayrollData.clientPayComponents),g.payrollState.clientPayrollData.defaultClientPayComponents=g.earningLayouts.getEarningsOfLayout()):g.payrollState.clientPayrollData.defaultClientPayComponents=g.payPeriodCheckHelper.getDefaultClientPayComponents(g.payrollState.clientPayrollData.clientPayComponents)}),g.payrollClientService.fetchClientShifts(e,t).then(function(e){g.payrollState.clientPayrollData.clientShifts=e})])},i.prototype.fetchAdditionalClientData=function(t,a){return g.payrollAnalytics.asyncClientDataLoadStart(),g.hasJC=this.payrollState.clientHasProduct(n.JOB_COSTING),g.hasLD=this.payrollState.clientHasProduct(n.LABOR_DISTRIBUTION),r.all([g.payrollClientService.fetchClientFilterGroupArray(t,a).then(function(e){g.payrollState.clientPayrollData.filterGroupArray=e}),g.payrollClientService.fetchClientDefinedPayFrequencyList(t,a).then(function(e){g.payrollState.clientPayrollData.clientDefinedPayFrequencyList=e}),g.payrollClientService.fetchClientDefinedCategoryList(t,a).then(function(e){g.payrollState.clientPayrollData.clientDefinedCategoryList=e}),g.payrollClientService.fetchClientPositionList(t,a).then(function(e){g.payrollState.clientPayrollData.clientPositions=e}),g.payrollClientService.fetchClientLocationList(t,a).then(function(e){g.payrollState.clientPayrollData.clientLocations=e})]).catch(function(e){l.errors.log(o.get(o.Types.Data,"Caught error in PESM.fetchAdditionalclientData!",{severity:"NONE",error:e}))}).then(function(){var t={jobsCount:e.size(g.payrollState.clientPayrollData.clientJobs),laborAssignmentsCount:e.size(g.payrollState.clientPayrollData.clientLaborAssignments),locationsCount:e.size(g.payrollState.clientPayrollData.clientLocations),payFrequenciesCount:e.size(g.payrollState.clientPayrollData.clientDefinedPayFrequencyList),positionsCount:e.size(g.payrollState.clientPayrollData.clientPositions),workerCompClassCodesCount:e.size(g.payrollState.clientPayrollData.workersCompClassCodes)},a=e.sum([t.jobsCount,t.laborAssignmentsCount,t.locationsCount,t.payFrequenciesCount,t.positionsCount,t.workerCompClassCodesCount]),r=[a," Total, ",t.jobsCount," Jobs, ",t.laborAssignmentsCount," Labor Assignments, ",t.locationsCount," Locations, ",t.payFrequenciesCount," Pay Frequencies, ",t.positionsCount," Positions, ",t.workerCompClassCodesCount," Workers Comp Class Codes "].join("");g.payrollAnalytics.asyncClientDataLoadComplete(r)})},i.prototype.getGridLoadPromiseArray=function(e){return this.hasJC=this.payrollState.clientHasProduct(n.JOB_COSTING),this.hasLD=this.payrollState.clientHasProduct(n.LABOR_DISTRIBUTION),[this.fetchClientPayrollData(this.payrollState.client.displayId,this.payrollState.selectedPayPeriod),this.payrollChecksService.fetchChecks(this.payrollState.client.displayId,this.payrollState.selectedPayPeriod,e),this.earningLayouts.layoutsLoadedDeferred.promise,this.fetchJCLDWorkerComps()]},i.prototype.fetchJCLDWorkerComps=function(){this.jcldWorkerCompLoadStart()
;var e=r.resolve(),t=r.resolve(),a=r.resolve();return(this.payrollState.clientHasProduct(n.PAYCHEX_WORKERS__COMPENSATION_REPORT_SERVICE)||this.payrollState.clientHasProduct(n.PAYCHEX_WORKERS__COMPENSATION_PAYMENT_SERVICE))&&(a=this.payrollClientService.fetchClientWorkersCompClassCodes(this.payrollState.client.displayId,this.payrollState.selectedPayPeriod).then(function(e){g.payrollState.clientPayrollData.workersCompClassCodes=e})),this.hasJC&&(e=this.payrollClientService.fetchClientJobs(this.payrollState.client.displayId,this.payrollState.selectedPayPeriod).then(function(e){g.payrollState.clientPayrollData.clientJobs=e})),this.hasLD&&(t=this.payrollClientService.fetchClientLaborAssignments(this.payrollState.client.displayId,this.payrollState.selectedPayPeriod).then(function(e){g.payrollState.clientPayrollData.clientLaborAssignments=e})),r.all([a,e,t]).then(function(){g.jcldWorkerCompLoadComplete()})},i.prototype.jcldWorkerCompLoadStart=function(){l.marks.set(d.JCLD_WC_CLIENT_DATA_LOAD_START_MARK,{category:d.PAYROLL})},i.prototype.jcldWorkerCompLoadComplete=function(){var t={jcCount:e.size(this.payrollState.clientPayrollData.clientJobs),ldCount:e.size(this.payrollState.clientPayrollData.clientLaborAssignments),wcCount:e.size(this.payrollState.clientPayrollData.workersCompClassCodes)},a=[e.sum([t.jcCount,t.ldCount,t.wcCount])," Total, ",t.jcCount," Jobs, ",t.ldCount," Labor Assignments, ",t.wcCount," Workers Comp Class Codes "].join("");l.marks.set(d.JCLD_WC_CLIENT_DATA_LOAD_END_MARK,{category:d.PAYROLL}),l.marks.measure(d.PERFORMANCE_MEASURE_VARIABLE,d.JCLD_WC_CLIENT_DATA_LOAD_START_MARK,d.JCLD_WC_CLIENT_DATA_LOAD_END_MARK,{category:d.PAYROLL,variable:d.JCLD_WC_CLIENT_DATA_LOAD_MEASURE_LABEL,dimension31:d.QUICK_PAYROLL,dimension32:d.DIMENSION32_PAYROLLENTRY,dimension116:g.payrollAnalytics.checkDateFormatter(g.payrollState.selectedPayPeriod.checkDate),dimension127:a,ga:!1})},i.prototype.loadPayPeriodChecks=function(i,l){if(this.trackingState.isStillCurrent(i)){var n=this;e.get(l,"skipClearCache",!1)||this.clearChecks();var s=this.getLoadedWorkersVendors();if(0===s.workersPKs.length&&0===s.vendorsPKs.length)return this.payPeriodHelper.resetPayPeriodTotals(n.payPeriodTotals),n.checksLoadDeferred.resolve(),void(n.checksLoaded=!0);r.all(this.getGridLoadPromiseArray(s)).catch(o.Types.RemoteOperation,n.m3Service.createDefaultHandler(d.PAYROLL_HEADER_M3_HANDLER_ID)).catch(o.Types.Validation,n.m3Service.createDefaultHandler(d.PAYROLL_HEADER_M3_HANDLER_ID)).spread(function(r,o){var l=o.data||o;n.trackingState.isStillCurrent(i)&&(n.payrollState.selectedPayPeriod=n.payPeriodHelper.createPayPeriodFromCurrentPayPeriod(n.payrollState.selectedPayPeriod),n.payrollState.clientPayrollData.clientDataLoaded||(n.payrollState.clientPayrollData.checkShellDisplayId=l.checkShellDisplayId,n.payrollState.clientPayrollData.clientDataLoaded=!0),n.isWorkerAvatarSwitchEnabled&&n.populateWorkerImgGuids(n.workers,l),e.assign(n.workers,n.payrollChecksService.bucketChecksResponse(l)),n.payPeriodHelper.resetPayPeriodTotals(n.payPeriodTotals),n.updatePayeeList(),e.forEach(n.payrollState.payeeList,function(r){r instanceof c?(r.setUIDisplaySequence(r.vendorChecks[0].agencyInfo.name),e.forEach(r.vendorChecks,function(e){n.processCheck(e,t.VENDOR)})):r instanceof a&&(r.setUIDisplaySequence(r.getEmploymentId()),e.forEach(r.payPeriodChecks,function(t){n.payrollState.payrollSecurity.secureCheck(t,n.payrollState.clientPayrollData.clientShifts),n.processCheck(t,r.workerPayType),n.isFakeEditEnabled&&(n.templateEarningHelper.addTemplateEarnings(t,n.payrollState.payrollSecurity,n.payrollState.clientPayrollData),e.forEach(e.concat(t.addsToPayEarnings,t.otherItemEarnings),function(e){n.isEarningLayoutsToggleEnabled||n.payPeriodCheckHelper.setEarningIsTemplateReportCode(e,t,n.payrollState.clientPayrollData),e.calculationMethod&&!e.getCheckPayComponentPaymentMethod()&&e.setCheckPayComponentPaymentMethod(n.checkPayComponentHelper.getPaymentMethodOnCheckPayComponent(e,r,t))}))}))}),n.payrollState.isEmptyPayroll=n.isEmptyState())}).then(function(){n.checksLoadDeferred.resolve(),n.checksLoaded=!0}).catch(function(e){n.payrollState.errorLoadingPayroll=!0,o.throw("PayEntryStateManager","load pay period checks stopped",{severity:"NONE",error:e}),n.clearChecks()}).done()}},i.prototype.loadPayPeriodChecksForFirstPage=function(t,a,i,l){var n=i&&i.workers;if(n){var s=l[u.PAGE_SIZE],c={workersPKs:e.chain(n).slice(0,s).map("id").value()};r.all(this.getGridLoadPromiseArray(c)).catch(o.Types.RemoteOperation,g.m3Service.createDefaultHandler(d.PAYROLL_HEADER_M3_HANDLER_ID)).catch(o.Types.Validation,g.m3Service.createDefaultHandler(d.PAYROLL_HEADER_M3_HANDLER_ID)).catch(function(e){g.payrollState.errorLoadingPayroll=!0,o.throw("PayEntryStateManager","load pay period checks for first page stopped",{severity:"NONE",error:e}),g.clearChecks()}).done()}},i.prototype.loadPayPeriodChecksForPage=function(i){var l=i.page,s=i.requestId,p=e.reduce(l,function(e,a){var r=a.type===t.VENDOR?"vendorsPKs":"workersPKs";return(e[r]||(e[r]=[])).push(a.pk),e},{});return S.info("workerVendorPks",p),this.hasJC=this.payrollState.clientHasProduct(n.JOB_COSTING),this.hasLD=this.payrollState.clientHasProduct(n.LABOR_DISTRIBUTION),r.all([this.payrollChecksService.fetchChecks(this.payrollState.client.displayId,this.payrollState.selectedPayPeriod,p),this.earningLayouts.layoutsLoadedDeferred.promise]).catch(o.Types.RemoteOperation,g.m3Service.createDefaultHandler(d.PAYROLL_HEADER_M3_HANDLER_ID)).catch(o.Types.Validation,g.m3Service.createDefaultHandler(d.PAYROLL_HEADER_M3_HANDLER_ID)).spread(function(r){var i=r.data||r;g.payrollState.clientPayrollData.clientDataLoaded=!0,g.payrollState.selectedPayPeriod=g.payPeriodHelper.createPayPeriodFromCurrentPayPeriod(g.payrollState.selectedPayPeriod),S.debug("page",l,"quickPayrollChecksLoadResponse",i);var o=[];return o=e.compact(e.concat(o,i.hourlyChecks,i.salariedChecks,i.otherChecks,i.vendorChecks)),S.debug("payeeList",o),e.forEach(o,function(r){r instanceof c?(r.setUIDisplaySequence(r.vendorChecks[0].agencyInfo.name),e.forEach(r.vendorChecks,function(e){g.processCheck(e,t.VENDOR)})):r instanceof a&&(r.setUIDisplaySequence(r.getEmploymentId()),e.forEach(r.payPeriodChecks,function(t){g.payrollState.payrollSecurity.secureCheck(t,g.payrollState.clientPayrollData.clientShifts),g.processCheck(t,r.workerPayType),g.isFakeEditEnabled&&(g.templateEarningHelper.addTemplateEarnings(t,g.payrollState.payrollSecurity,g.payrollState.clientPayrollData),e.forEach(e.concat(t.addsToPayEarnings,t.otherItemEarnings),function(e){g.isEarningLayoutsToggleEnabled||g.payPeriodCheckHelper.setEarningIsTemplateReportCode(e,t,g.payrollState.clientPayrollData),e.calculationMethod&&!e.getCheckPayComponentPaymentMethod()&&e.setCheckPayComponentPaymentMethod(g.checkPayComponentHelper.getPaymentMethodOnCheckPayComponent(e,r,t))}))}))}),g.checksLoadDeferred.resolve(),g.checksLoaded=!0,{requestId:s,page:e.map(l,function(t){return e.assignIn(t,{data:e.find(o,{id:t.id})})})}}).catch(function(e){g.payrollState.errorLoadingPayroll=!0,o.throw("PayEntryStateManager","load pay period checks for page stopped",{severity:"NONE",error:e}),g.clearChecks()})},i.prototype.populateWorkerImgGuids=function(a,r){e.forEach(a,function(a,i){if(i!==t.VENDOR){var o;i===t.HOURLY?o=r.hourlyChecks:i===t.SALARY?o=r.salariedChecks:i===t.OTHER&&(o=r.otherChecks),e.forEach(a,function(t){if(t instanceof p&&t.worker.workerImgGuid){var a=e.find(o,function(e){return e.getWorker().workerID.entityKey===t.id});a.getWorker().personal.workerImgGuid=t.worker.workerImgGuid,a.getWorker().personal.markClean()}})}})},i.prototype.getWorkersForChecks=function(t){var a=[];return e.forEach(t,function(t){var r=g.getWorkerForCheck(g.payrollState.payeeList,t);r&&e.indexOf(a,r)<0&&a.push(r)}),a},i.prototype.getWorkerForCheck=function(t,r){var i;return e.forEach(t,function(t){var o=[];t instanceof a?o=t.payPeriodChecks:t instanceof c&&(o=t.vendorChecks),e.forEach(o,function(e){return r.getId()&&e.getId()===r.getId()?(i=t,!1):e.id===r.id?(i=t,!1):void 0})}),i},i.prototype.updatePayeeList=function(){this.payrollState.payeeList=[],this.workers[d.NEWLY_ADDED_PAYEE]&&(this.payrollState.payeeList=e.concat(this.payrollState.payeeList,this.workers[d.NEWLY_ADDED_PAYEE])),this.workers[t.HOURLY]&&(this.payrollState.payeeList=e.concat(this.payrollState.payeeList,this.workers[t.HOURLY])),this.workers[t.SALARY]&&(this.payrollState.payeeList=e.concat(this.payrollState.payeeList,this.workers[t.SALARY])),this.workers[t.OTHER]&&(this.payrollState.payeeList=e.concat(this.payrollState.payeeList,this.workers[t.OTHER])),this.workers[t.VENDOR]&&(this.payrollState.payeeList=e.concat(this.payrollState.payeeList,this.workers[t.VENDOR])),this.updatePayeeGridTrackingId()},i.prototype.updatePayeeGridTrackingId=function(){e.forEach(this.payrollState.payeeList,function(t){t._gridTrackingId||(t._gridTrackingId=e.uniqueId())})},i.prototype.clearWorkerList=function(t){var a=this;e.get(t,"skipInvalidateWorkersCache",!1)||a.payrollWorkersService.invalidateCurrentPayrollWorkerList(),e.forEach(this.workers,function(e,t){delete a.workers[t]}),this.payrollState.payeeList=[],h.WORKERS_CLEARED.onNext()},i.prototype.processCheck=function(e,t){this.payPeriodHelper.setPayPeriodTotals(this.payPeriodTotals,e,this.payrollState.clientPayrollData.clientShifts,t),this.payPeriodCheckHelper.initDefaults({check:e,clientOrganizations:this.payrollState.clientPayrollData.clientOrganizations,clientPayrollData:this.payrollState.clientPayrollData,payeeType:t})},i.prototype.updatePayPeriodTotals=function(){this.payPeriodHelper.updatePayPeriodTotals(this.payPeriodTotals,this.getAllChecks(),this.payrollState.clientPayrollData.clientShifts)},i.prototype.getAllChecks=function(){return e.concat(this.workers[d.NEWLY_ADDED_PAYEE],this.workers[t.HOURLY],this.workers[t.SALARY],this.workers[t.OTHER],this.workers[t.VENDOR])},i.prototype.clearChecks=function(){this.checksLoadDeferred.promise.isResolved()&&(this.checksLoadDeferred=r.defer()),this.payrollChecksService.invalidateChecks(),this.allGridsLoaded=!1,this.checksLoaded=!1,this.payrollState.clearDirtyChecks()},i.prototype.getLoadedWorkersVendors=function(){var a=[],r=[],i=[].concat(this.workers[d.NEWLY_ADDED_PAYEE]).concat(this.workers[t.HOURLY]).concat(this.workers[t.SALARY]).concat(this.workers[t.OTHER]);return e.forEach(i,function(e){e&&e.worker&&e.worker.workerID&&a.push(e.worker.workerID.entityKey)}),e.forEach(this.workers[t.VENDOR],function(e){e.agencyId&&r.push(e.agencyId.entityKey)}),{workersPKs:a,vendorsPKs:r}},i.prototype.clearAllLoads=function(e){e&&this.checksLoadDeferred&&!this.checksLoadDeferred.promise.isResolved()&&this.checksLoadDeferred.reject(e),this.clearWorkerList(),this.clearChecks(),this.earningLayouts.clearAllLayouts(),this.earningLayouts.invalidateCachedLayouts(),this.payPeriodHelper.resetPayPeriodTotals(this.payPeriodTotals),this.payrollState.errorLoadingPayroll=!1,this.payrollClientService.invalidatePayrollEntryData(),this.payrollClientService.invalidateClientData(),this.payrollClientService.invalidateJCLDWCData()},i.prototype.reloadPayeesChecks=function(i,l){var n,s,p=this,y={},d=[],h=[],u={},P=[],g=r.defer(),C=r.defer();return e.forEach(i,function(r){r instanceof c?h.push(r):p.payrollViewSelectionHelper.isEPLVSelected()?r instanceof a&&(s=r.payPeriodChecks[0].templateId,y[r.getWorker().workerID.entityKey]={payee:r,workerCheck:r,workerPayType:r.workerPayType},d.push(r.getWorker().workerID.entityKey)):e.forEach(p.workers,function(a,i){if(i!==t.VENDOR){var o=e.findIndex(a,function(e){return e.getWorker().workerID.entityKey===r.getWorker().workerID.entityKey});if(-1!==o){var l=a[o];s=a[o].payPeriodChecks[0].templateId,y[l.getWorker().workerID.entityKey]={payee:r,workerCheck:l,workerCheckIndex:o,workerPayType:i},d.push(l.getWorker().workerID.entityKey)}}})}),h.length&&(n={payPeriodId:p.payrollState.selectedPayPeriod.primaryId,clientAccountNumber:p.payrollState.client.displayId,currentFilter:null},P.push(C.promise),p.loadVendorChecksService.loadChecksForAllVendors(n).catch(o.Types.RemoteOperation,p.m3Service.createDefaultHandler(l||"paychex.app.payroll.checkDetailDrawer.m3."+p.selectedTab)).catch(o.Types.Validation,p.m3Service.createDefaultHandler(l||"paychex.app.payroll.checkDetailDrawer.m3."+p.selectedTab)).then(function(e){e.vendorChecks&&(p.refreshVendorChecksAfterReload(h,e.vendorChecks),C.resolve())}).done()),d.length>0&&(n={payPeriod:p.payrollState.selectedPayPeriod,templateId:s,displayId:p.payrollState.clientPayrollData.checkShellDisplayId,workerIds:d,checkPathsForWorkers:[],selectPath:null,workerSummarySelectPaths:[]},P.push(g.promise),p.getChecksForWorkersService.getChecksForWorkers(n).catch(o.Types.RemoteOperation,p.m3Service.createDefaultHandler(l||"paychex.app.payroll.checkDetailDrawer.m3."+p.selectedTab)).catch(o.Types.Validation,p.m3Service.createDefaultHandler(l||"paychex.app.payroll.checkDetailDrawer.m3."+p.selectedTab)).then(function(t){t.payPeriodChecks&&t.payPeriodChecks.length>0&&(S.info("Checks reloaded for worker"),e.forEach(t.payPeriodChecks,function(a){var r=y[e.result(a,"getWorker.workerID.entityKey")],i=e.toString(e.result(r,"workerCheck.getWorker.workerID.entityKey"));if(r&&!u[i]){var o,l=p.payPeriodCheckHelper.determineWorkerPayType(a);l!==r.workerPayType&&(o=r.workerPayType);var n=e.filter(t.payPeriodChecks,function(t){return e.result(t,"getWorker.workerID.entityKey")===e.result(r,"workerCheck.getWorker.workerID.entityKey")}),s=p.refreshWorkerChecks(r.workerCheck,r.workerCheckIndex,l,n,o,!0);s&&(u[i]=s)}}),g.resolve())}).done()),P.length?r.all(P).then(function(){p.updateMultipleWorkers(e.concat(h,e.values(u)))}):r.resolve()},i.prototype.refreshVendorChecksAfterReload=function(t,a){e.forEach(t,function(t){e.forEach(a,function(a){if(t.id&&t.id===e.get(a,"agencyInfo.agencyId.entityKey")){var r=e.find(t.vendorChecks,function(e){return e.isSameCheck(a)});r?(r.amount=a.amount,r.markClean(),r.markUIClean()):S.warn("VendorCheck Reload: failed to match service vendorCheck[id:"+a.getId()+"] to any check in the UI")}})})},i.prototype.reloadPayeeChecks=function(i){var l,n,s,c,p=this;if(p.payrollViewSelectionHelper.isEPLVSelected()){var y=e.findIndex(p.payrollState.payeeList,function(e){return e instanceof a&&e.getWorker().workerID.entityKey===i.workerInfo.workerID.entityKey});-1!==y&&(n=p.payrollState.payeeList[y],c=n.workerPayType)}else e.forEach(this.workers,function(a,r){if(r!==t.VENDOR){var o=e.findIndex(a,function(e){return e.getWorker().workerID.entityKey===i.workerInfo.workerID.entityKey});return-1!==o?(n=p.workers[r][o],s=o,c=r,!1):void 0}});return n?(l={payPeriod:p.payrollState.selectedPayPeriod,templateId:n.payPeriodChecks[0].templateId,displayId:p.payrollState.clientPayrollData.checkShellDisplayId,workerIds:[n.payPeriodChecks[0].getWorker().workerID.entityKey],checkPathsForWorkers:[],selectPath:null,workerSummarySelectPaths:[]},this.getChecksForWorkersService.getChecksForWorkers(l).catch(o.Types.RemoteOperation,p.m3Service.createDefaultHandler("paychex.app.payroll.checkDetailDrawer.m3."+p.selectedTab)).catch(o.Types.Validation,p.m3Service.createDefaultHandler("paychex.app.payroll.checkDetailDrawer.m3."+p.selectedTab)).then(function(e){if(e.payPeriodChecks&&e.payPeriodChecks.length>0){S.info("Checks reloaded for worker");var t;return p.payPeriodCheckHelper.determineWorkerPayType(e.payPeriodChecks[0])!==c&&(t=c),p.refreshWorkerChecks(n,s,p.payPeriodCheckHelper.determineWorkerPayType(e.payPeriodChecks[0]),e.payPeriodChecks,t),e}})):r.resolve()},i.prototype.refreshWorkerChecks=function(t,r,i,o,l,n){if(0===o.length)S.error("No checks returned");else{if(t){var s=this,c=new a;return c.id=t.id,c.workerPayType=i,c.payPeriodChecks=[],e.forEach(o,function(e){s.payrollState.payrollSecurity.secureCheck(e,s.payrollState.clientPayrollData.clientShifts),s.processCheck(e,c.workerPayType),l&&!e.getOriginalWorkerPayType()&&e.setOriginalWorkerPayType(l),c.payPeriodChecks.push(e)}),s.payrollViewSelectionHelper.isEPLVSelected()?h.WORKER_RELOADED.onNext(c):(l&&(i=l),this.workers[i][r]=c,s.updatePayeeList(),n||this.updateWorker(c)),c}S.error("Check not found")}},i.prototype.updateWorker=function(e){this.updateMultipleWorkers([e])},i.prototype.updateMultipleWorkers=function(t){S.isDebugEnabled()&&S.debug("updateMultipleWorkers() -> payees count : ",e.size(t));var a=this;a.$timeout(function(){var r={},i=!1;e.forEach(t,function(t){t._isNewlyAdded||i||(a._workersPageRefreshTrigger||(a._workersPageRefreshTrigger=[]),e.isEmpty(e.remove(a._workersPageRefreshTrigger))&&a._workersPageRefreshTrigger.push({_pageRefreshTrigger:!0}),i=!0);var o=t._isNewlyAdded?d.NEWLY_ADDED_PAYEE:a.checkPayComponentHelper.getWorkerPayType(t);t._gridTrackingId=e.uniqueId(),r[o]||(r[o]=1,a._workersGridRefreshTrigger?a._workersGridRefreshTrigger[o]||(a._workersGridRefreshTrigger[o]=[]):(a._workersGridRefreshTrigger={},a._workersGridRefreshTrigger[o]=[]),e.isEmpty(e.remove(a._workersGridRefreshTrigger[o]))&&a._workersGridRefreshTrigger[o].push({_gridRefreshTrigger:!0}),a.updatePayPeriodTotals(),e.isFunction(a.updateGroupTotals[o])&&a.updateGroupTotals[o]())})})},i.prototype.updateMultipleChecks=function(t){var a=this,r=[],i=[];a.updatePayPeriodTotals(),e.forEach(t,function(t){var o=a.getWorkersForChecks([t])[0];if(t._gridTrackingId=e.uniqueId(),!r[o.id]){r[o.id]=1,a._checksGridRefreshTrigger?a._checksGridRefreshTrigger[o.id]||(a._checksGridRefreshTrigger[o.id]=[]):(a._checksGridRefreshTrigger={},a._checksGridRefreshTrigger[o.id]=[]),e.isEmpty(e.remove(a._checksGridRefreshTrigger[o.id]))&&a._checksGridRefreshTrigger[o.id].push({_gridRefreshTrigger:!0});var l=o._isNewlyAdded?d.NEWLY_ADDED_PAYEE:a.checkPayComponentHelper.getWorkerPayType(o);i[l]||(i[l]=l,e.isFunction(a.updateGroupTotals[l])&&a.updateGroupTotals[l]())}})},i.prototype.selectCheck=function(t,r){if(this.payrollState.selectedCheck=t,!this.isFakeEditEnabled&&r instanceof a){this.templateEarningHelper.addTemplateEarnings(t,this.payrollState.payrollSecurity,this.payrollState.clientPayrollData);var i=this;e.forEach(e.concat(t.addsToPayEarnings,t.otherItemEarnings),function(e){i.isEarningLayoutsToggleEnabled||i.payPeriodCheckHelper.setEarningIsTemplateReportCode(e,t,i.payrollState.clientPayrollData),e.calculationMethod&&!e.getCheckPayComponentPaymentMethod()&&e.setCheckPayComponentPaymentMethod(i.checkPayComponentHelper.getPaymentMethodOnCheckPayComponent(e,r,t))})}},i.prototype.clearLightweightDataLoadedEvent=function(){this.EVENTS.LIGHTWEIGHT_DATA_LOADED.onNext(!1)},i.$inject=["$timeout","LoadPayrollEntryDataService","CurrentPayrollDataService","PayPeriodHelper","PayPeriodCheckHelper","PayrollTranslations","GetChecksForWorkersService","M3Service","CheckDetailStateManager","TemplateEarningHelper","FeatureSwitchService","CheckPayComponentHelper","PayrollViewSelectionHelper","LoadVendorChecksService","EarningLayouts","PayrollAnalytics","PayrollClientService","PayrollWorkersService","PayrollChecksService","PayrollImportInfoService"],i.registeredName="PayEntryStateManager",i}()}),e("paychex.app.payroll/state/PayPeriodStateManager",[],function(){return function(){function e(){this.currentPayPeriod=null,this.isCurrentPayPeriodQueued=!1,this.lastPayPeriod=null,this.payrollState=null,this.userHasTilesOnly=!1}return e.prototype.checkInitialization=function(e,t){return this.payrollState.checkInitialization(e,t)},e.prototype.init=function(){},e.$inject=[],e.registeredName="PayPeriodStateManager",e}()}),e("paychex.app.payroll/state/PayrollState",["lodash","com/paychex/type/PayPeriodStatusType","paychex.core/Promise","paychex.core/Errors","paychex.app.payroll/constants/PayrollApplicationConstants","paychex.app.payroll/state/ClientPayrollData","lib.rx"],function(e,t,a,r,i,o,l){return function(){function a(){this.initialized=!1,this.lastProposedClient=null,this.client=null,this.selectedPayPeriod=null,this.clientHelper=null,this.viewManager=null,this.initializeManager=null,this.clientPayrollData=new o,this.$filter=null,this.selectedCheck=null,this.selectedChecksItem=null,this.payeeList=[],this.EVENTS={SELECTED_CHECKS_ITEM_UPDATED:new l.Subject,SELECTED_CHECKS_ITEM_UPDATED_FOR_MULTIPLE:new l.Subject,CHECK_SAVED:new l.Subject,CHECK_UPDATED:new l.Subject,NEW_PAYEES_ADDED:new l.Subject,CHECK_DRAWER_NAVIGATION:new l.Subject,WORKER_CHECKS_SAVED:new l.Subject},this.errorLoadingPayroll=!1,this.isEmptyPayroll=!1,this.payrollSecurity=null,this.forceSelectedPayPeriod=!1,this.checkTemplates=null,this.dirtyChecks=[],this.payrollPreferences={}}return a.prototype.fromPayrollState=function(e){this.initialized=e.initialized,this.lastProposedClient=e.lastProposedClient,this.client=e.client,this.selectedPayPeriod=e.selectedPayPeriod,this.clientHelper=e.clientHelper,this.viewManager=e.viewManager,this.initializeManager=e.initializeManager,this.clientPayrollData=e.clientPayrollData,this.$filter=e.$filter,this.selectedCheck=e.selectedCheck,this.selectedChecksItem=e.selectedChecksItem,this.payeeList=e.payeeList,this.checkDrawerPayeeList=e.checkDrawerPayeeList,this.errorLoadingPayroll=e.errorLoadingPayroll,this.isEmptyPayroll=e.isEmptyPayroll,this.payrollSecurity=e.payrollSecurity},a.prototype.checkInitialization=function(e,t,a){return this.lastProposedClient=e,this.initializeManager.checkInitialization(e,t,a)},a.prototype.reloadInitialization=function(e){return this.forceSelectedPayPeriod?this.initializeManager.initWithSelectedPayPeriod(this.selectedPayPeriod,!0):this.checkInitialization(this.lastProposedClient,!0,e)},a.prototype.clearState=function(){this.initialized=!1,this.client=null,this.clientPayrollData=new o,this.errorLoadingPayroll=!1,this.isEmptyPayroll=!1,this.payrollSecurity=null,this.checkTemplates=null},a.prototype.isInternalUser=function(){return this.clientHelper.userInfoHelper.isInternalUser()},a.prototype.isSelectedPayPeriodReleased=function(){return this.isPayPeriodReleasedStatus(this.selectedPayPeriod)},a.prototype.isPayPeriodReleasedStatus=function(e){return t.RELEASED.id===e.payPeriodStatusType.id},a.prototype.isPayPeriodInitialStatus=function(e){return t.INITIAL.id===e.payPeriodStatusType.id},a.prototype.isPayPeriodEntryStatus=function(e){return t.ENTRY.id===e.payPeriodStatusType.id},a.prototype.isPayPeriodQueuedStatus=function(e){return this.isPayPeriodReleasedStatus(e)&&e.timeDelayHold},a.prototype.isOnStartPayrollView=function(){return this.viewManager.currentView===i.START_PAYROLL_VIEW},a.prototype.isOnPayrollEntryView=function(){return this.viewManager.currentView===i.PAYROLL_ENTRY_VIEW},a.prototype.isOnReviewPayrollView=function(){return this.viewManager.currentView===i.REVIEW_PAYROLL_VIEW},a.prototype.isOnPayrollListView=function(){return this.viewManager.currentView===i.PAYROLL_LIST_VIEW},a.prototype.getPayPeriodStartDateFiltered=function(){if(!this.selectedPayPeriod)return"";var e=this.selectedPayPeriod.startDate.year,t=this.selectedPayPeriod.endDate.year,a=this.selectedPayPeriod.startDate.getDate(),r="MMM d, yyyy";return e===t&&(r="MMM d"),this.$filter("date")(a,r)},a.prototype.clientHasProduct=function(e){return this.clientPayrollData.clientHasProduct(e,this.selectedPayPeriod?this.selectedPayPeriod.checkDate:void 0)},a.prototype.addDirtyCheck=function(t){t&&t.isUIDirty()&&e.indexOf(this.dirtyChecks,t)<0&&this.dirtyChecks.push(t)},a.prototype.clearDirtyChecks=function(){e.forEach(this.dirtyChecks,function(e){e._hasError=!1}),this.dirtyChecks=[]},a.prototype.checksAreDirty=function(){return e.size(this.dirtyChecks)>0},a.prototype.removeDirtyCheck=function(t){e.remove(this.dirtyChecks,function(e){var a=e.getId()===t.getId();return a&&(e._hasError=!1),a})},a.prototype.removeMultipleDirtyChecks=function(t){var a=this;e.forEach(t,function(e){a.removeDirtyCheck(e)})},a.registeredName="PayrollState",a}()}),e("paychex.app.payroll/state/ReviewPayrollStateManager",["lodash","paychex.core/Errors","com/paychex/type/PayPeriodStatusType","com/paychex/type/ProductType","paychex.core/Promise","com/paychex/framework/custom/BigDecimal","paychex.app.common/constants/ApplicationConstants","com/paychex/payroll/dto/WorkerChecksItem","com/paychex/payroll/dto/WorkerPayType","com/paychex/png/common/party/dto/PartyItem","com/paychex/png/common/payroll/dto/SubmitResumeOptions"],function(e,t,a,r,i,o,l,n,s,c,p){return function(){function r(e,t,a,r,i,o,l){this.payrollState=null,this.M3Service=e,this.submitPayrollDataService=r,this.clientHelper=t,this.preprocessingReportsHelper=a,this.toastFactory=l,this.payrollTranslations=i,this.templateEarningHelper=o,this.M3_HANDLER_ID="paychex.app.payroll.reviewPayroll.m3",this.submitPayrollResponse=null}return r.prototype.checkInitialization=function(e,t){return this.payrollState.checkInitialization(e,t)},r.prototype.init=function(){var e=this;this.payrollState.EVENTS.CHECK_SAVED.subscribe(function(){e.saveHappened()})},r.prototype.clearReviewAndSubmit=function(){this.submitPayrollResponse&&delete this.submitPayrollResponse,this.reviewPayrollTotalsResponse=void 0,this.preprocessingReportsHelper.resetPreprocessingReports()},r.prototype.submitPayroll=function(a){var r=this,i=this.payrollState.client,l=i.displayId,n=this.payrollState.selectedPayPeriod.primaryId,s=o.ZERO,c=new p,y=a?{request:a}:{clientAcctNum:l,payPeriodId:n,estimatedAmount:s,submitResumeOptions:c,skipTloAndClientSiteCheckVerification:!1},d=function(t){var a=e.get(r,"M3Service.clearHandlers");return a[r.M3_HANDLER_ID]&&a[r.M3_HANDLER_ID](),r.M3Service.createDefaultHandler(r.M3_HANDLER_ID)(t)};return this.submitPayrollDataService.submitPayroll(y).catch(t.Types.RemoteOperation,d).catch(t.Types.Validation,d).then(function(e){if((!e.messages||e.messages.length<1)&&r.M3Service.clearHandlers[r.M3_HANDLER_ID]&&r.M3Service.clearHandlers[r.M3_HANDLER_ID](),r.submitPayrollResponse=e,r.submitPayrollResponse.hasPayrollExceededWireThreshold=!1,r.isSubmitSuccessful()){var t=r.payrollState.selectedPayPeriod.payrollClientInfo;e.data?r.payrollState.selectedPayPeriod=e.data.payPeriod:r.payrollState.selectedPayPeriod=e.payPeriod,r.payrollState.selectedPayPeriod.payrollClientInfo||(r.payrollState.selectedPayPeriod.payrollClientInfo=t)}else r.submitPayrollResponse.submitPayrollResponse.wireTransferType&&(r.submitPayrollResponse.hasPayrollExceededWireThreshold=!0);return e})},r.prototype.isSelectedPayPeriodSubmitted=function(){return this.submitPayrollResponse||this.payrollState.selectedPayPeriod&&this.payrollState.selectedPayPeriod.payPeriodStatusType&&a.RELEASED.id===this.payrollState.selectedPayPeriod.payPeriodStatusType.id&&(this.payrollState.selectedPayPeriod.timeDelayHold||this.payrollState.selectedPayPeriod.holdMessageDisplayCategory)},r.prototype.isOnReviewPayrollSubmittedView=function(){return this.payrollState.isOnReviewPayrollView()&&this.isSelectedPayPeriodSubmitted()},r.prototype.clearAllLoads=function(){this.clearReviewAndSubmit()},r.prototype.saveHappened=function(){this.preprocessingReportsHelper.resetPreprocessingReports(),delete this.submitPayrollResponse},r.prototype.needWireTransfer=function(){return!!this.submitPayrollResponse&&this.submitPayrollResponse.hasPayrollExceededWireThreshold},r.prototype.isSubmitSuccessful=function(){return!!this.submitPayrollResponse&&(this.submitPayrollResponse.submitPayrollResponse||this.submitPayrollResponse.data.submitPayrollResponse).successful},r.prototype.getCheckCount=function(){return this.reviewPayrollTotalsResponse?e.toString(this.reviewPayrollTotalsResponse.totalCheckCount):"NA"},r.$inject=["M3Service","ClientHelper","PreprocessingReportsHelper","SubmitPayrollDataService","PayrollTranslations","ToastFactory"],r.registeredName="ReviewPayrollStateManager",r}()}),e("paychex.app.payroll/state/ClientHelper",["lodash","paychex.app.common/data/userInfo/helper/UserInfoHelper","paychex.topics.common","paychex.core/Logger","paychex.core/Errors","paychex.core/Promise","paychex.core/Workflows","paychex.app.payroll/constants/PayrollApplicationConstants","com/paychex/type/PayrollProductType"],function(e,t,a,r,i,o,l,n,s){return function(){function l(e,t,a,r){this.internalClient=null,this.selectedClients=[],this.currentClientIds=[],this.globalStateService=e,this.userInfoService=t,this.eventingService=a,this.initialPromise=null,this.loadCAClientProductsDataService=r,this.loadCAClientProductsDeferred=o.defer(),this.loadCAClientProductsInProgress=!1}var c=r.get("paychex.app.payroll.shared.application.ClientHelper");return l.prototype.getClientsAndIds=function(e){var t,a=[];t=e&&e.selectedClients||[];for(var r=0;r<t.length;r++)!t[r].displayId&&t[r].getDisplayId&&(t[r].displayId=t[r].getDisplayId());return t.forEach(function(e){a.push(e.applicationId)}),{selectedClients:t,clientIds:a}},l.prototype.isPayrollBetaElibgible=function(){return this.userInfoHelper&&this.userInfoHelper.userInfo&&this.userInfoHelper.userInfo.userBetaEligible===n.PAYROLL.toUpperCase()},l.prototype.isAllClientsNewToPayroll=function(){return this.userInfoHelper&&this.userInfoHelper.userInfo&&this.userInfoHelper.userInfo.userNewToPayroll===n.PAYROLL_CENTER_NEW_CLIENT},l.prototype.isPEO=function(){return this.selectedClientHasProduct(s.PBS.name)||this.selectedClientHasProduct(n.PBS_PRODUCT_ID)},l.prototype.selectedClientHasProduct=function(t){var a=!1;return this.userInfoHelper&&(a=!!e.find(this.getClientProductSubscriptionsForClient(),function(e){return e[0].productCode===t})),a},l.prototype.getClientProductSubscriptionsForClient=function(){return this.userInfoHelper.getClientProductSubscriptionsForClient(this.internalClient?this.internalClient.displayId:this.selectedClients[0].displayId)},l.prototype.currentClientHasApplication=function(e){var t;return t=this.userInfoHelper.isInternalUser()?this.userInfoHelper.getApplicationsForClient(this.internalClient):this.userInfoHelper.getApplicationsForClient(this.selectedClients[0]),t.hasOwnProperty(e)},l.prototype.init=function(){return null!==this.initialPromise?this.initialPromise:(this.initialPromise=this.initUserInfo(),this.initialPromise)},l.prototype.initUserInfo=function(){var e=this;return e.userInfoService.getUserInfo().then(function(r){e.userInfoHelper=new t(r);var i=e.globalStateService.getState();if(i.clients)if(e.userInfoHelper.isInternalUser()){if(e.internalClient=e.userInfoHelper.makeClientSelectedDataForPNGSSO(i.clients).selectedClients[0],e.eventingService.subscribe(a.PAYCHEX_INTERNAL_CLIENT_SEARCH_COMPLETED,function(t){if(c.info("PAYCHEX_INTERNAL_CLIENT_SEARCH_COMPLETED event received."),t.payload&&t.payload.selectedClient){var a=e.userInfoHelper.makeClientSelectedDataFromSearchResult(t.payload.selectedClient,e.userInfoHelper.getAllClients()[0].getPNGSSOClientPlatform().caid),r=e.getClientsAndIds(a);e.selectedClients=r.selectedClients,e.currentClientIds=r.clientIds}}),i.selectedInternalClient){var o=e.getClientsAndIds(i.selectedInternalClient);e.selectedClients=o.selectedClients,e.currentClientIds=o.clientIds}}else e.clientsChanged(i.clients)},function(e){i.throw(i.Types.Data,"Failed to get user info",{severity:"NONE",error:e})})},l.prototype.getSelectedClientIds=function(){return this.currentClientIds},l.prototype.translateClients=function(e){if(this.userInfoHelper.isInternalUser())return this.selectedClients;for(var t=0;t<e.length;t++)!e[t].displayId&&e[t].getDisplayId&&(e[t].displayId=e[t].getDisplayId());return e},l.prototype.getSelectedClients=function(){return this.selectedClients},l.prototype.getApplicationClientsFor=function(e){var t=this.userInfoHelper.makeClientSelectedDataForPNGSSO(e);return this.getClientsAndIds(t)},l.prototype.clientsChanged=function(e){if(e&&!this.userInfoHelper.isInternalUser()){var t=this.getApplicationClientsFor(e);this.selectedClients=t.selectedClients,this.currentClientIds=t.clientIds}},l.prototype.findClient=function(e){var t=this.userInfoHelper.getClientByDisplayId(e.getDisplayId());return this.userInfoHelper.makeClientSelectedDataForPNGSSO([t]).selectedClients[0]},l.prototype.updatePayrollProductData=function(t){var a=this
;return this.userInfoHelper.isInternalUser()?this.loadCAClientProductsDeferred.resolve():this.loadCAClientProductsDeferred.promise.isSettled()||this.loadCAClientProductsInProgress||(this.loadCAClientProductsInProgress=!0,this.loadCAClientProductsDataService.loadCAClientProducts(this.currentClientIds[0],[n.SHORTFALL_PRODUCT_CONFIG_ID]).then(function(r){a.loadCAClientProductsInProgress=!1,a.loadCAClientProductsDeferred.promise.isSettled()?c.warn("Fetched CA payroll product data was discarded: load deferred already resolved."):r&&r.payrollProducts&&(e.forEach(r.payrollProducts,function(a){if(a.configurationOptions){var r=e.find(t,{id:a.id});r&&(r.configurationOptions=e.union(r.configurationOptions,a.configurationOptions))}}),a.loadCAClientProductsDeferred.resolve())}).catch(function(e){i.throw(i.Types.Data,"Error in loadCAClientProduct",{severity:"NONE",error:e}),a.loadCAClientProductsInProgress=!1,a.loadCAClientProductsDeferred.reject(e)}).done()),this.loadCAClientProductsDeferred.promise},l.prototype.clearLoadCAClientProducts=function(){this.loadCAClientProductsDeferred=o.defer()},l.$inject=["GlobalStateService","UserInfoService","EventingService","LoadCAClientProductsDataService"],l.registeredName="ClientHelper",l}()}),e("paychex.app.payroll/state/TrackingState",[],function(){return function(){function e(){this.trackingToken=null}return e.prototype.clearTracking=function(){this.trackingToken=null},e.prototype.markNewTracking=function(){this.trackingToken=Date.now()},e.prototype.isStillCurrent=function(e){return this.trackingToken===e},e}()}),e("paychex.app.payroll/state/SinglePayrollInitializeManager",["lodash","htmlregistry","paychex.core/Logger","paychex.app.common/constants/ApplicationConstants","paychex.app.payroll/constants/PayrollApplicationConstants","paychex.app.payroll/state/ClientPayrollData","paychex.app.payroll/state/TrackingState","paychex.core/Promise","paychex.core/Errors"],function(e,t,a,r,i,o,l,n,s){var c=a.get("paychex.app.payroll.shared.preload.SinglePayrollInitializeManager");return function(){function a(e,t,a,r,i,o,n,s,c,p,y,d,h,u,P,g,S){this.userInfoService=e,this.globalStateService=t,this.payPeriodService=a,this.tileRegistryService=r,this.createSessionPromises=i,this.clientHelper=o,this.userHasPayroll=!1,this.needsInitialization=!0,this.tileAdminData=null,this.firstTimeInitialized=!1,this.localeService=n,this.translationHelper=s,this.payrollSecurityHelper=c,this.checkProcessingQueue=P,this.payrollState=g,this.payrollState.$filter=u,this.payrollState.initializeManager=this,this.payrollState.clientHelper=this.clientHelper,this.payrollPreferencesService=S,this.trackingState=new l,this.payPeriodStateManager=p,this.payEntryStateManager=y,this.checkDetailStateManager=d,this.reviewPayrollStateManager=h,this.payPeriodStateManager.payrollState=this.payrollState,this.payEntryStateManager.payrollState=this.payrollState,this.checkDetailStateManager.payrollState=this.payrollState,this.reviewPayrollStateManager.payrollState=this.payrollState,this.payPeriodStateManager.init(),this.payEntryStateManager.init(),this.checkDetailStateManager.init(),this.reviewPayrollStateManager.init(),this.lastProposedClient=null,this.initDeferred=null,this.checkInitializationDeferred=null,this.payrollCenterInitDeferred=null}return a.prototype.clientStateChange=function(e){e.isChangedApp&&!this.needsInitialization&&(e.app.id===r.HTML_PAYROLL_APP_CODE?c.debug("no action required"):(this.needsInitialization=!0,this.clearAllLoads()))},a.prototype.checkInitializationNeeded=function(t){var a=this;if(this.userHasPayroll){var r=!1,o=this.clientHelper.userInfoHelper.getApplicationsForClient(t);if(!this.tileAdminData||o&&o.hasOwnProperty(i.PNG_PAYROLL_APP_CODE))this.payPeriodStateManager.userHasTilesOnly=!1,r=!0;else{var l=this.tileAdminData[t.displayId];e.forEach(l,function(e){if(e===i.CURRENT_PAYROLL_TILE_IDENTIFIER_STRING||e===i.LAST_PAYROLL_TILE_IDENTIFIER_STRING)return a.payPeriodStateManager.userHasTilesOnly=!0,r=!0,!1})}if(c.debug("clientHasPayroll",r),!r)return!1;this.needsInitialization||null===this.payrollState.client||this.payrollState.client.displayId===t.displayId||(this.needsInitialization=!0);var n=e.invoke(this.payrollState,"isInternalUser");return c.debug("internal mode",n),!this.needsInitialization&&n&&null===this.payrollState.client&&(this.needsInitialization=!0),this.needsInitialization}return c.debug("user does not have payroll"),!1},a.prototype.initWithSelectedPayPeriod=function(e,t){this.rejectCurrentClientInitializedDeferred(),this.payrollCenterInitDeferred=n.defer();var a=this;return this.init().then(function(){a.clearAllLoads(),a.trackingState.markNewTracking();var r=a.trackingState.trackingToken;a.payrollState.client=a.clientHelper.getSelectedClients()[0];var i=!a.payrollState.isPayPeriodInitialStatus(e)||t;return a.payPeriodService.getCurrentPayPeriod(!1,a.payrollState.client,e,!1,a.sortOrder).then(function(e){a.isClientInitializationStillCurrentWithPayperiod(r)&&(a.payrollSecurityHelper.currentClientCaid=a.payrollState.client.caid,a.payrollState.forceSelectedPayPeriod=!0,a.payrollState.payrollSecurity=a.payrollSecurityHelper.getCurrentClientSecurity(),a.payPeriodStateManager.currentPayPeriod=e.payPeriod,a.payrollState.selectedPayPeriod=e.payPeriod,a.payrollState.clientPayrollData.clientPayrollProducts=e.clientPayrollProducts,e.payPeriod||c.error("loadPayPeriodWorkersResponse.payPeriod not defined"),a.needsInitialization=!1,a.payrollState.initialized=!0,a.firstTimeInitialized=!0,a.payrollCenterInitDeferred.resolve(),a.payEntryStateManager.startPayrollDataCache.payEntryPreferences=null,i&&a.payEntryStateManager.preLoadPayrollGridData(a.trackingState))})}).catch(i.CACHE_CLEAR_ERROR,function(){c.info("Swallowed client cache clear for Payroll Center Navigation")}).catch(function(e){c.error("QP from Payroll Cannot navigation stopped because:",e),a.clearAllLoads(e),a.payrollCenterInitDeferred.reject(s.get("SinglePayrollInitializeManager","QP from Payroll Cannot navigation stopped because: "+e.toString(),{severity:"FATAL"}))}).done(),this.payrollCenterInitDeferred.promise},a.prototype.checkInitialization=function(t,a,r){var o=t;if(this.firstTimeInitialized&&(o=this.clientHelper.translateClients([t])[0]),!a&&this.lastProposedClient===o)return this.checkInitializationDeferred.promise;this.rejectCurrentClientInitializedDeferred(),this.checkInitializationDeferred=n.defer(),this.lastProposedClient=o;var l=this;return this.init().then(function(){if(a||l.checkInitializationNeeded(t)){l.clearAllLoads(),l.lastProposedClient=o,l.trackingState.markNewTracking();var p=l.trackingState.trackingToken;l.clientHelper.clientsChanged([t]);var y=l.clientHelper.getSelectedClients()[0];l.payrollState.client=y,l.payrollState.forceSelectedPayPeriod=!1;var d=e.invoke(l.payrollState,"isInternalUser")||l.payrollSecurityHelper.isSecurityRequire(l.payrollState.client.caid),h=l.payPeriodService.fetchCurrentPayPeriodByClient(!1,y,l.payrollState.selectedPayPeriod,d).then(function(e){l.isClientInitializationStillCurrent(p)&&(e||c.error("payrollSetupDataResponse.currentPayPeriod not defined"),l.payPeriodStateManager.currentPayPeriod=e,l.payrollState.selectedPayPeriod=e,l.payPeriodStateManager.isCurrentPayPeriodQueued=e.isCurrentPayPeriodQueued)}),u=l.payPeriodService.fetchLastPayPeriod(!1,y,l.payrollState.selectedPayPeriod,d).then(function(e){l.isClientInitializationStillCurrent(p)&&(l.payPeriodStateManager.lastPayPeriod=e)}),P=l.payPeriodService.fetchPayrollProducts(!1,y,l.payrollState.selectedPayPeriod,d).then(function(e){l.isClientInitializationStillCurrent(p)&&(l.payrollState.clientPayrollData.clientPayrollProducts=e)}),g=l.payPeriodService.fetchEntitlements(!1,y,l.payrollState.selectedPayPeriod,d).then(function(e){if(l.isClientInitializationStillCurrent(p))return l.payrollSecurityHelper.setPermissions(e,[l.payrollState.client.caid]).then(function(){l.payrollState.payrollSecurity=l.payrollSecurityHelper.getCurrentClientSecurity()}).catch(function(e){c.error("preload stopped because: Preloading failure"),l.clearAllLoads(),l.checkInitializationDeferred.reject(e)})});return n.all([h,u,P,g]).then(function(){l.isClientInitializationStillCurrent(p)&&(l.needsInitialization=!1,l.payrollState.initialized=!0,l.firstTimeInitialized=!0,l.checkInitializationDeferred.resolve(),l.payEntryStateManager.startPayrollDataCache.payEntryPreferences=null,(l.payPeriodStateManager.payrollState.clientHelper.isPayrollBetaElibgible()||r)&&l.payEntryStateManager.preLoadPayrollGridData(l.trackingState))}).catch(i.CACHE_CLEAR_ERROR,function(){c.info("Swallowed client cache clear")}).catch(function(e){c.error("preload stopped because:",e),l.clearAllLoads(e),l.checkInitializationDeferred.reject(s.get("SinglePayrollInitializeManager","preload stopped because: "+e.toString(),{severity:"FATAL"}))})}}).done(),this.checkInitializationDeferred.promise},a.prototype.disablePreloading=function(){c.info("Preloading of Payroll disabled."),this.gssUnsubscribeHandle()},a.prototype.createSessionAndSubscribe=function(){var e=this;this.createSessionPromises.payroll.then(function(){e.gssUnsubscribeHandle=e.globalStateService.subscribe(function(t){e.clientStateChange(t)})})},a.prototype.lookupPayrollAccess=function(){var t=this;return n.all([t.tileRegistryService.getTileRegistry({mode:i.ADMIN}),t.clientHelper.init()]).spread(function(a){t.tileAdminData=a.admin;var r=t.clientHelper.userInfoHelper.getAllApplications();e.forEach(r,function(e){e.name.toUpperCase()===i.PNG_PAYROLL_APP_CODE&&(t.userHasPayroll=!0)}),!t.tileAdminData||t.userHasPayroll?t.createSessionAndSubscribe():e.forEach(t.tileAdminData,function(a){if(e.forEach(a,function(e){if(e===i.CURRENT_PAYROLL_TILE_IDENTIFIER_STRING||e===i.LAST_PAYROLL_TILE_IDENTIFIER_STRING)return t.userHasPayroll=!0,!1}),t.userHasPayroll)return t.createSessionAndSubscribe(),!1})})},a.prototype.isClientInitializationStillCurrentWithPayperiod=function(e){return!(this.payrollCenterInitDeferred.promise.isRejected()||!this.trackingState.isStillCurrent(e))||(this.payrollState.initialized=!1,c.info("Stopping preload as promise is rejected"),!1)},a.prototype.isClientInitializationStillCurrent=function(e){return!(this.checkInitializationDeferred.promise.isRejected()||!this.trackingState.isStillCurrent(e))||(this.payrollState.initialized=!1,c.info("Stopping preload as promise is rejected"),!1)},a.prototype.rejectCurrentClientInitializedDeferred=function(){var e=this.createCacheClearError();this.checkInitializationDeferred&&!this.checkInitializationDeferred.promise.isResolved()&&this.checkInitializationDeferred.reject(e),this.payrollCenterInitDeferred&&!this.payrollCenterInitDeferred.promise.isResolved()&&this.payrollCenterInitDeferred.reject(e)},a.prototype.createCacheClearError=function(){return s.get(i.CACHE_CLEAR_ERROR,"User changed clients",{severity:"NONE"})},a.prototype.clearAllLoads=function(e){e&&(this.checkInitializationDeferred&&!this.checkInitializationDeferred.promise.isResolved()&&this.checkInitializationDeferred.reject(e),this.payrollCenterInitDeferred&&!this.payrollCenterInitDeferred.promise.isResolved()&&this.payrollCenterInitDeferred.reject(e)),this.payPeriodService.invalidateCurrentPayPeriod(),this.lastProposedClient=null,this.clearClientHelper(e),this.payrollState.clearState(e),this.trackingState.clearTracking(),this.clearStateManagers(e),this.checkProcessingQueue.clear()},a.prototype.clearClientHelper=function(){this.clientHelper.clearLoadCAClientProducts()},a.prototype.clearStateManagers=function(e){this.payEntryStateManager.clearAllLoads(e),this.checkDetailStateManager.clearAllLoads(e),this.reviewPayrollStateManager.clearAllLoads(e)},a.prototype.init=function(){var e=this;return e.initDeferred?(c.debug("this.initDeferred already defined"),e.initDeferred):(e.initDeferred=e.lookupPayrollAccess().then(function(){e.payrollPreferencesService.getSortOrder(e.globalStateService.getState().clients[0]._clientPlatformGroup.displayId).first().toPromise().then(function(a){return e.sortOrder=a,e.userHasPayroll?(e.localeService.addTranslationPath(t.generateStaticPath("paychex.app.payroll","/shared/config/translations/payroll-en.js")),e.translationHelper.initTranslations()):(c.info("User does not have payroll, so no payroll code will run."),n.resolve())})}),e.initDeferred)},a.prototype.setPayrollState=function(e){this.payrollState.fromPayrollState(e),this.payEntryStateManager.preLoadPayrollGridData(this.trackingState)},a.$inject=["UserInfoService","GlobalStateService","PayPeriodService","TileRegistryService","CreateSessionPromises","ClientHelper","LocaleService","TranslationHelper","PayrollSecurityHelper","PayPeriodStateManager","PayEntryStateManager","CheckDetailStateManager","ReviewPayrollStateManager","$filter","CheckProcessingQueue","PayrollState","PayrollPreferencesService"],a.registeredName="SinglePayrollInitializeManager",a}()}),e("paychex.app.payroll/state/PayrollCenterModel",["lodash"],function(e){return function(){function t(){this.payPeriods=[],this.payPeriodsOnHold=[],this.submitGATagPayPeriods={},this.sumOfBuckets=0,this.totalSelected=0,this.showLoadingState=!0,this.nFailedClients=0,this.lastRemoteCallParams={},this.showPartialResultsConsecutiveCount=0,this.showFailedConsecutiveCount=0,this.statusSelected="",this.bulkBegin=!1,this.bulkSubmit=!1,this.bulkReview=!1,this.selectedClients="",this.prevFilter={status:[],payFrequency:[],checkDate:[]},this.filtering={status:[],payFrequency:[],checkDate:[]},this.flyoutFilters={status:[],payFrequency:[],checkDate:[]},this.dialogFilters={status:[],payFrequency:[],checkDate:[]},this.defaultFilters={status:[{id:"NOT STARTED",name:"Not Started",value:"Not Started",selected:!0,class:"NOTSTARTED"},{id:"IN PROGRESS",name:"In Progress",value:"In Progress",selected:!0,class:"INPROGRESS"},{id:"SUBMITTED",name:"Submitted",value:"Submitted",selected:!1,class:"SUBMITTED"}],payFrequency:[{id:"",name:"Non-Scheduled payroll",value:"NONSCHEDULED",type:"Non-Scheduled Payroll",selected:!0},{id:"1009913",name:"Weekly payroll",value:"WEEKLY",type:"Weekly Payroll (1)",selected:!0},{id:"1010035",name:"Bi-weekly payroll",value:"BI_WEEKLY",type:"Bi-weekly Payroll (1)",selected:!0},{id:"1009603",name:"Semi-monthly payroll",value:"SEMI_MONTHLY",type:"Semi-monthly Payroll (1)",selected:!0},{id:"1010022",name:"Monthly payroll",value:"MONTHLY",type:"Monthly Payroll (1)",selected:!0},{id:"1009583",name:"Quarterly payroll",value:"QUARTERLY",type:"Quarterly Payroll (1)",selected:!0},{id:"1009561",name:"Semi-annual payroll",value:"SEMI_ANNUAL",type:"Semi-annual Payroll (1)",selected:!0},{id:"1009644",name:"Annual payroll",value:"ANNUAL",type:"Annual Payroll (1)",selected:!0}],checkDate:[{name:"First Available",value:"firstAvailable",selected:!0},{name:"Custom",value:"custom",selected:!1,startDate:new Date,endDate:new Date}]},this.sortColumn="",this.secondarySort="",this.tertiarySort="",this.fourthLevelSort="",this.reverseSort=!1,this.resetSort=function(){this.reverseSort=!1,this.sortColumn="checkDate.formatted",this.secondarySort="frequencyType.sortOrder",this.tertiarySort="statusType.convertedSort",this.fourthLevelSort="companyName"},this.resetModel=function(){this.showFailedConsecutiveCount=0,this.showPartialResultsConsecutiveCount=0,this.totalSelected=0,this.statusSelected="",this.selectedClients="",this.bulkBegin=!1,this.bulkSubmit=!1,this.bulkReview=!1,this.resetSort()},this.markPartialLoad=function(e){this.lastRemoteCallParams.includeNeedsAttention=!0,this.nFailedClients=e,this.showPartialResultsConsecutiveCount++,this.showFailedConsecutiveCount=0,this.showLoadingState=!1},this.markLoadFailure=function(){this.lastRemoteCallParams.includeNeedsAttention=!0,e.isEmpty(this.payPeriodsOnHold)||(this.lastRemoteCallParams.payPeriodsOnHold=e.clone(this.payPeriodsOnHold)),this.payPeriods=[],this.payPeriodsOnHold=[],this.showFailedConsecutiveCount++,this.showPartialResultsConsecutiveCount=0,this.showLoadingState=!1},this.markSuccessfulLoad=function(){this.showPartialResultsConsecutiveCount=0,this.showFailedConsecutiveCount=0,this.lastRemoteCallParams={}},this.storeLastRemoteCallParams=function(e,t,a,r,i,o){this.lastRemoteCallParams={selectedClients:e,filters:t,applyFilters:a,payPeriodsOnHold:r,includeEntitlement:i,includeNeedsAttention:o}},this.resetModel()}return t.$inject=[],t.registeredName="payrollCenterModel",t}()}),e("paychex.app.payroll/state/module",["angular","paychex.app.payroll/services/payPeriod/module","./CheckDetailStateManager","./ClientPayrollData","./PayEntryStateManager","./PayPeriodStateManager","./PayrollState","./ReviewPayrollStateManager","./ClientHelper","./SinglePayrollInitializeManager","./PayrollCenterModel"],function(e,t,a,r,i,o,l,n,s,c,p){var y=e.module("paychex.app.payroll.state",[t.name]);return y.service(n.registeredName,n),y.service(o.registeredName,o),y.service(i.registeredName,i),y.service(a.registeredName,a),y.service(l.registeredName,l),y.service(s.registeredName,s),y.service(p.registeredName,p),y.service(c.registeredName,c).run([c.registeredName,function(){}]),y}),function(){e("paychex.app.payroll/components/newExperienceTour/NewExperienceTourSlides",[],function(){return{NewExperienceTourSlides:[{desktopTitle:"png.payroll.newExperienceTour.carousel.title1",desktopContent:"png.payroll.newExperienceTour.carousel.content1"},{desktopTitle:"png.payroll.newExperienceTour.carousel.title2",desktopContent:"png.payroll.newExperienceTour.carousel.content2"},{desktopTitle:"png.payroll.newExperienceTour.carousel.title3",desktopContent:"png.payroll.newExperienceTour.carousel.content3"},{desktopTitle:"png.payroll.newExperienceTour.carousel.title4",desktopContent:"png.payroll.newExperienceTour.carousel.content4"}]}})}(),function(){e("paychex.app.payroll/components/newExperienceTour/NewExperienceTourController",["angular","lodash","./NewExperienceTourSlides","paychex.app.payroll/constants/PayrollApplicationConstants"],function(e,t,a,r){var i=["TranslationService","$scope","PayrollAnalytics","UserPreferencesService","ToastFactory"],o=function(e,i,o,l,n){var s=this,c={};s.model={},this.payrollAnalytics=o,this.toastFactory=n,c.currentSlideIndex=1,c.totalSlides=a.NewExperienceTourSlides.length,s.model.currentSlide={title:"",content:""},s.model.allSlides=a.NewExperienceTourSlides,s.model.getCurrentSlide=function(){return c.currentSlideIndex},c.updateSlide=function(){var r=s.model.getCurrentSlide(),i=a.NewExperienceTourSlides[r-1].desktopTitle,o=a.NewExperienceTourSlides[r-1].desktopContent,l=[i,o];e.translate(l).then(function(e){t.forEach(e,function(e,t){0===t?s.model.currentSlide.title=e:1===t&&(s.model.currentSlide.content=e)})}).done()},s.model.setCurrentSlide=function(e){e<=c.totalSlides&&e>0&&(c.currentSlideIndex=e),c.updateSlide()},s.model.nextSlide=function(){c.currentSlideIndex<c.totalSlides?(o.tourNextSlide(),c.currentSlideIndex++):(l.set(r.HTML_PAYROLL_DEFAULT,!0),o.makeDefaultTour(),i.closeThisDialog(),s.toastFactory.showSimpleToast("png.payroll.newExperienceTour.carousel.defaultSuccessful")),c.updateSlide()},s.model.getNavText=function(){return c.currentSlideIndex===s.model.allSlides.length?s.model.locale["png.payroll.newExperienceTour.carousel.navigation.ready"]:1===c.currentSlideIndex?s.model.locale["png.payroll.newExperienceTour.carousel.navigation.getStarted"]:s.model.locale["png.payroll.newExperienceTour.carousel.navigation.next"]},s.model.getCloseText=function(){return s.model.locale["png.payroll.newExperienceTour.carousel.navigation.skipTour"]},c.initStrings=function(){s.model.locale={};var a=["png.payroll.newExperienceTour.carousel.navigation.next","png.payroll.newExperienceTour.carousel.navigation.getStarted","png.payroll.newExperienceTour.carousel.navigation.ready","png.payroll.newExperienceTour.carousel.navigation.skipTour","png.payroll.newExperienceTour.carousel.navigation.skip"];e.translate(a).then(function(e){t.forEach(e,function(e,t){s.model.locale[a[t]]=e})}).done()},s.model.trackEvent=function(e){e.toLowerCase()===r.SKIP_TOUR.toLowerCase()&&o.skipTour()},c.init=function(){c.initStrings(),s.model.setCurrentSlide(1),i.model=s.model},c.init()};return o.$inject=i,o})}(),e("paychex.app.payroll/components/newExperienceTour/module",["angular","paychex.app.payroll/components/newExperienceTour/NewExperienceTourController"],function(e,t){var a=e.module("paychex.app.payroll.components.newExperienceTour",[]);return a.controller("NewExperienceTourController",t),a}),e("paychex.app.payroll/components/payrollFeatureDefault/PayrollFeatureDefaultController",["angular","paychex.app.payroll/components/payrollFeatureDefault/PayrollFeatureStatus","paychex.app.payroll/constants/PayrollApplicationConstants","paychex.app.payroll/constants/PayrollApplicationEvents","lodash","paychex.core/Logger"],function(e,t,a,r,i,o){var l=o.get("paychex.app.payroll.application.PayrollFeatureDefaultController"),n=["$scope","UserPreferencesService","PayrollPreferencesService","PayrollState","PayEntryStateManager","$timeout","PayrollAnalytics"],s=function(e,o,n,s,c,p,y){var d=this;d.model={},d.model.countDays=t.getCountDays(),d.model.showPopup=!1,d.payrollState=s,d.payrollPreferencesService=n,d.payEntryStateManager=c,d.$timeout=p,d.payrollAnalytics=y,d.messageText="",d.clickAction="",d.disableTaketheTourButton=!0,t.getPayrollStatus()===a.PAYROLL_STATUS_BEGIN?(d.model.payrollStatusButton="png.payroll.tile.currentPayroll.dialogue.defaultHtmlBeginButtonOk",d.model.headerText="png.payroll.tile.currentPayroll.dialogue.defaultHtmlHeaderText",d.model.bodyText=d.model.countDays>1?"png.payroll.tile.currentPayroll.dialogue.defaultHtmlBeginBodyText":"png.payroll.tile.currentPayroll.dialogue.defaultHtmlBeginBodyTextSingular",d.messageText=a.MESSAGE3_IN_NOTIFICATION_POP_UP+d.model.countDays+a.MESSAGE4_IN_NOTIFICATION_POP_UP):t.getPayrollStatus()===a.PAYROLL_STATUS_RESUME&&(d.model.payrollStatusButton="png.payroll.tile.currentPayroll.dialogue.defaultHtmlResumeButtonTour",d.model.headerText="png.payroll.tile.currentPayroll.dialogue.defaultHtmlHeaderText",d.model.bodyText=d.model.countDays>1?"png.payroll.tile.currentPayroll.dialogue.defaultHtmlResumeBodyText":"png.payroll.tile.currentPayroll.dialogue.defaultHtmlResumeBodyTextSingular",d.messageText=a.MESSAGE5_IN_NOTIFICATION_POP_UP+d.model.countDays+a.MESSAGE6_IN_NOTIFICATION_POP_UP),d.payrollPreferencesService.getPayrollPreferences(d.payrollState.client.displayId).subscribe(function(e){d.preferences=e}),d.model.onSubmit=function(){if(d.model.closeThisPopup(a.OK_CLOSE),t.getPayrollStatus()===a.PAYROLL_STATUS_BEGIN)t.setShowPayrollTour(!0);else if(t.getPayrollStatus()===a.PAYROLL_STATUS_RESUME){var e={gridType:d.preferences.grid_layout,slideNumber:a.RESUME_BUTTON_SLIDE_NUMBER};r.NEW_PAYROLL_TOUR_TRIGGERED.onNext(e)}},d.payEntryStateManager.checksLoadDeferred.promise.then(function(){d.disableTaketheTourButton=!1}).done(),d.analyticsParams=function(){try{var e=i.get(d,"payEntryStateManager.payrollState.selectedPayPeriod.payPeriodStatusType.id");return{clickAction:d.clickAction,showPopup:d.model.showPopup,messageText:d.messageText,workerCount:d.payEntryStateManager.getTotalWorkerCount(),clientId:i.get(d,"payEntryStateManager.payrollState.client.displayId"),checkDate:i.get(d,"payEntryStateManager.payrollState.selectedPayPeriod.checkDate",[]),checkCount:d.payEntryStateManager.payPeriodTotals?d.payEntryStateManager.payPeriodTotals.checkCount:"",payPeriodStatus:d.payrollAnalytics.convertPayPeriodStatusById(e),unscheduled:d.payEntryStateManager.payrollState.selectedPayPeriod.frequencyType===a.FREQUENCY_UNDEFINED}}catch(e){return l.error("Error occurred getting analytics params",e),{}}},d.model.closeThisPopup=function(e){d.clickAction=e||a.X_CLOSE,o.set(a.HTML_PAYROLL_DEFAULT,d.model.showPopup),d.payrollAnalytics.selectDoNotShow(d.analyticsParams()),d.closeThisDialog()}};return s.$inject=n,s.registeredName="payrollFeatureDefaultController",s}),e("paychex.app.payroll/components/payrollFeatureDefault/module",["angular","paychex.app.payroll/components/payrollFeatureDefault/PayrollFeatureDefaultController"],function(e,t){var a=e.module("paychex.app.payroll.components.payrollFeatureDefault",[]);return a.controller("PayrollFeatureDefaultController",t),a}),e("paychex.app.payroll/services/payrollDialogService/PayrollDialogService",["htmlregistry"],function(e){return function(){function t(e){this.dialogService=e}return t.prototype.openNewExperienceTour=function(){this.dialogService.open({templateUrl:e.generateStaticPath("paychex.app.payroll","/components/newExperienceTour/newExperienceTour.tpl.html"),theme:"ngDialog-getting-started",plain:!1})},t.prototype.openFeatureDefault=function(){this.dialogService.open({templateUrl:e.generateStaticPath("paychex.app.payroll","/components/payrollFeatureDefault/payrollFeatureDefault.tpl.html"),theme:"ngDialog-getting-started",controller:"PayrollFeatureDefaultController",controllerAs:"pfdc",bindToController:!0,plain:!1})},t.$inject=["IPaychexDialogService"],t.registeredName="PayrollDialogService",t}()}),e("paychex.app.payroll/services/payrollDialogService/module",["angular","paychex.framework.angular.ui2/module","paychex.app.payroll/helpers/module","paychex.app.payroll/components/newExperienceTour/module","paychex.app.payroll/components/payrollFeatureDefault/module","./PayrollDialogService"],function(e,t,a,r,i,o){var l=e.module("paychex.app.payroll.services.payrollDialogService",[t.name,a.name,r.name,i.name]);return l.service(o.registeredName,o),l}),e("paychex.app.payroll/tile/directives/currentPayrollStatus/CurrentPayrollStatusController",["lodash","paychex.core/Logger","com/paychex/type/PayPeriodStatusType","com/paychex/vCard/dto/PayrollActivityType","paychex.app.common/DeviceProfile","paychex.app.common/bridge/FlexApplicationSetupData","com/paychex/payroll/dto/CurrentPayPeriodStatus","paychex.core/Tracker","paychex.app.payroll/constants/PayrollApplicationConstants","com/paychex/type/ProductType","paychex.app.common/constants/ApplicationConstants","paychex.app.payroll/components/payrollFeatureDefault/PayrollFeatureStatus"],function(e,t,a,r,i,o,l,n,s,c,p,y){var d=t.get("paychex.app.payroll.tile.directives.CurrentPayrollStatusController");return function(){function t(e,t,r,i,o,l,n){this.initial=a.INITIAL,this.entry=a.ENTRY,this.released=a.RELEASED,this.globalStateService=i,this.payrollDialogService=l,this.payrollAnalytics=o,this.linkContent="",this.labelContent="",this.buttonContent="",this.submitContent="",this.submitDate="",this.submittedDate="",this.checkDate="",this.submittedByNameObject={},this.showLink=!1,this.showLabel=!1,this.showButton=!1,this.flexActivity=null,this.translationHelper=e,this.payPeriodStateManager=r,this.payrollAppLauncherHelper=t,this.payEntryStateManager=n}return t.prototype.isBegin=function(){return this.payPeriod&&this.payPeriod.payPeriodStatusType&&this.initial.id===this.payPeriod.payPeriodStatusType.id},t.prototype.isResume=function(){return this.payPeriod&&this.payPeriod.payPeriodStatusType&&this.entry.id===this.payPeriod.payPeriodStatusType.id},t.prototype.isQueued=function(){return this.payPeriod&&this.payPeriod.payPeriodStatusType&&this.released.id===this.payPeriod.payPeriodStatusType.id&&this.payPeriod.timeDelayHold},t.prototype.isOnHold=function(){return this.payPeriod&&this.payPeriod.payPeriodStatusType&&this.released.id===this.payPeriod.payPeriodStatusType.id&&this.payPeriod.userActionRequiredHold},t.prototype.isOnNonPNGHold=function(){return this.payPeriod&&this.payPeriod.payPeriodStatusType&&this.released.id===this.payPeriod.payPeriodStatusType.id&&!this.payPeriod.userActionRequiredHold&&!this.payPeriod.timeDelayHold},t.prototype.internalUpdate=function(){this.checkDate=this.payPeriod.checkDate.getDate(),this.isForLastPayroll?(this.submittedByNameObject={submittedByFirstName:this.payPeriod.submittedByFirstName,submittedByMiddleInitial:this.payPeriod.submittedByMiddleInitial,submittedByLastName:this.payPeriod.submittedByLastName},this.submittedDate=this.payPeriod.submittedDate.getDate()):this.submitDate=this.payPeriod.submitDate.getDate(),this.isBegin()||this.isResume()?this.submitContent=this.translationHelper.submitBy:(this.isQueued()||this.isOnHold()||this.isOnNonPNGHold())&&(this.submitContent=this.translationHelper.submitted),this.isForLastPayroll?(this.showLink=!1,this.showLabel=!1,this.showButton=!1,this.submitContent=this.translationHelper.submitted):this.isBegin()?(this.showLink=!1,this.showLabel=!1,this.showButton=!0,this.flexActivity=r.SUMMARY,this.buttonContent=this.translationHelper.begin,this.buttonIndicatorClass="begin-status-indicator"):this.isResume()?(this.showLink=!1,this.showLabel=!1,this.showButton=!0,this.buttonContent=this.translationHelper.resume,this.flexActivity=r.PAYROLL_ENTRY,this.buttonIndicatorClass="resume-status-indicator"):this.isQueued()?(this.showLink=!0,this.showLabel=!0,this.showButton=!1,this.linkContent=this.translationHelper.editPayroll,this.labelContent=this.translationHelper.queued,this.flexActivity=r.PAYROLL_ENTRY,this.labelIndicatorClass="queued-status-indicator"):this.isOnHold()||this.isOnNonPNGHold()?(this.showLink=!0,this.showLabel=!0,this.showButton=!1,this.labelContent=this.translationHelper.onHold,this.linkContent=this.translationHelper.editPayroll,this.flexActivity=r.PAYROLL_ENTRY,this.labelIndicatorClass="on-hold-status-indicator"):d.error("Unknown state for current payroll status directive")},t.prototype.analyticsParams=function(){try{var t=e.get(this,"payEntryStateManager.payrollState.selectedPayPeriod.payPeriodStatusType.id");return{payrollStatus:y.getPayrollStatus(),workerCount:this.payEntryStateManager.getTotalWorkerCount(),clientId:e.get(this,"payEntryStateManager.payrollState.client.displayId"),countdownDays:this.countDays,checkDate:e.get(this,"payEntryStateManager.payrollState.selectedPayPeriod.checkDate",[]),checkCount:this.payEntryStateManager.payPeriodTotals?this.payEntryStateManager.payPeriodTotals.checkCount:"",payPeriodStatus:this.payrollAnalytics.convertPayPeriodStatusById(t),unscheduled:this.payEntryStateManager.payrollState.selectedPayPeriod.frequencyType===s.FREQUENCY_UNDEFINED}}catch(e){return d.error("Error occurred getting analytics params",e),{}}},t.prototype.goToPayrollCenter=function(){var t="",a=new o;a.activity=this.flexActivity;var r="";if(a.primaryNavigationData=this.payPeriod.primaryId.entityKey,this.isBegin()?(a.activityNavigationData=l.BEGIN,t="Current Payroll: Begin",r=s.PAYROLL_STATUS_BEGIN):this.isResume()?(a.activityNavigationData=l.RESUME,t="Current Payroll: Resume",r=s.PAYROLL_STATUS_RESUME):this.isOnHold()||this.isOnNonPNGHold()?(a.activityNavigationData=l.ON_HOLD,t="Current Payroll: On Hold"):this.isQueued()?(a.activityNavigationData=l.QUEUED,t="Current Payroll: Queued"):(a.activityNavigationData=s.UNKNOWN_STATE,d.error("Unknown status in launch flex"),t="Current Payroll: Unknown State Payroll"),!i.isDesktop()||this.isHtmlPayrollDefault||this.isOnlinePayrollStartAfterJulyRel||this.countDays<=s.CUT_OFF_DAYS||this.payPeriodStateManager.payrollState.clientHelper.isPayrollBetaElibgible()&&this.payPeriodStateManager.payrollState.clientHelper.isAllClientsNewToPayroll()){var c,h;i.isDesktop()&&!this.isHtmlPayrollDefault&&!this.isOnlinePayrollStartAfterJulyRel&&this.countDays<=s.CUT_OFF_DAYS&&this.countDays>s.DEFAULT_CUT_OFF_DAYS&&(r===s.PAYROLL_STATUS_BEGIN||r===s.PAYROLL_STATUS_RESUME)&&(y.setCountDays(this.countDays),y.setPayrollStatus(r),this.payrollAnalytics.showDefaultDialog(this.analyticsParams()),this.payrollDialogService.openFeatureDefault()),this.isBegin()?(c="Begin Payroll",h=s.HTML5_BEGIN):(c="Resume Payroll",h=s.DIMENSION92_PAY_ENTRY_GRID),n.marks.set(s.TILE_CLICK_START_MARK,{category:s.PAYROLL}),n.events.fire(s.GA_ACTION_TILE_NAVIGATION,{category:s.PAYROLL,label:c,dimension31:s.QUICK_PAYROLL,dimension32:s.DASHBOARD,dimension81:s.DIMENSION81_HTML5,dimension92:h});var u=e.find(this.globalStateService.getAvailable("app"),function(e){return e.id===p.HTML_PAYROLL_APP_CODE});u||d.error("appInfo undefined"),this.globalStateService.setState({app:u},{appContext:{destination:s.QUICK_PAYROLL}}).done()
}else n.marks.set("CurrentPayrollTile.goToPayrollCenter",{category:s.PAYROLL,tags:["tile",t]}),n.events.fire(s.GA_ACTION_TILE_NAVIGATION,{category:s.PAYROLL,dimension31:s.PAYROLL,dimension32:s.DASHBOARD,label:t}),this.payrollAppLauncherHelper.launchPayroll(a)},t.prototype.update=function(){this.internalUpdate()},t.$inject=["TranslationHelper","PayrollAppLauncherHelper","PayPeriodStateManager","GlobalStateService","PayrollAnalytics","PayrollDialogService","PayEntryStateManager"],t.registeredName="CurrentPayrollStatusController",t}()}),e("paychex.app.payroll/tile/directives/currentPayrollStatus/CurrentPayrollStatusDirective",["htmlregistry","paychex.app.payroll/tile/directives/currentPayrollStatus/CurrentPayrollStatusController"],function(e,t){return function(){function a(){this.link=function(e,t,a,r){r.isForLastPayroll="true"===r.isForLastPayrollFlag,!0===r.isForLastPayroll?r.nameOfTile="last":r.nameOfTile="current",e.$watch(function(){return r.payPeriod},function(e){e&&r.update()})},this.restrict="A",this.scope={payPeriod:"=",userHasTilesOnly:"=",isForLastPayrollFlag:"@",isHtmlPayrollDefault:"<",isOnlinePayrollStartAfterJulyRel:"<",countDays:"<"},this.templateUrl=e.generateStaticPath("paychex.app.payroll","/tile/directives/currentPayrollStatus/currentPayrollStatus.tpl.html"),this.replace=!0,this.controller=t,this.controllerAs="currentPayrollStatusController",this.bindToController=!0}return a.factory=function(){var e=function(){return new a};return e.$inject=[],e},a.registeredName="currentPayrollStatus",a}()}),e("paychex.app.payroll/tile/directives/currentPayrollMessagePanel/CurrentPayrollMessagePanelController",["paychex.core/Logger","com/paychex/type/PayPeriodStatusType","com/paychex/payroll/dto/HoldMessageDisplayCategory","paychex.core/Errors","paychex.core/Tracker"],function(e,t,a,r,i){var o=e.get("paychex.app.payroll.tile.directives.CurrentPayrollMessagePanelController");return function(){function e(e){this.initial=t.INITIAL,this.entry=t.ENTRY,this.released=t.RELEASED,this.translationHelper=e}return e.prototype.isBegin=function(){return this.payPeriod&&this.payPeriod.payPeriodStatusType&&this.initial.id===this.payPeriod.payPeriodStatusType.id},e.prototype.isResume=function(){return this.payPeriod&&this.payPeriod.payPeriodStatusType&&this.entry.id===this.payPeriod.payPeriodStatusType.id},e.prototype.isQueued=function(){return this.payPeriod&&this.payPeriod.payPeriodStatusType&&this.released.id===this.payPeriod.payPeriodStatusType.id&&this.payPeriod.timeDelayHold},e.prototype.update=function(){return this.internalUpdate()},e.prototype.isBeginOrResumeHelper=function(){var e=this;return e.isBegin()||e.isResume()},e.prototype.internalUpdate=function(){if(!this.translationHelper.holdClientShouldContact)try{r.throw(r.Types.Data,"PAYROLL TILE - translation string not loaded in time",{severity:"NONE"})}catch(e){i.errors.log(e)}this.payPeriod.holdMessageDisplayCategory!==a.HOLD_CATEGORY_ONE||this.isBeginOrResumeHelper()?this.payPeriod.holdMessageDisplayCategory!==a.HOLD_CATEGORY_TWO||this.isBeginOrResumeHelper()?this.payPeriod.holdMessageDisplayCategory!==a.HOLD_CATEGORY_THREE||this.isBeginOrResumeHelper()?this.payPeriod.holdMessageDisplayCategory!==a.COMBINED_PAYROLLS_HOLD||this.isBeginOrResumeHelper()?this.isQueued()?(this.messagePanelClass="fifteen-minutes-to-make-changes",this.messagePanelMessage=this.translationHelper.fifteenMinutesToMakeChanges):this.released.id!==this.payPeriod.payPeriodStatusType.id||this.payPeriod.timeDelayHold||this.payPeriod.userActionRequiredHold?2===this.payPeriod.daysRemainingToCheckDate||this.payPeriod.daysRemainingToCheckDate>=2&&this.payPeriod.daysRemainingToSubmitDate<=0?(this.messagePanelClass="current-payroll-warning-message",this.messagePanelMessage=this.translationHelper.submitPayrollToday):0===this.payPeriod.daysRemainingToCheckDate?(this.messagePanelClass="current-payroll-warning-message",this.messagePanelMessage=this.translationHelper.checkDateToday):1===this.payPeriod.daysRemainingToCheckDate?(this.messagePanelClass="current-payroll-warning-message",this.messagePanelMessage=this.translationHelper.checkDateTomorrow):this.payPeriod.daysRemainingToCheckDate<0?(this.messagePanelClass="payroll-backdated",this.messagePanelMessage=this.translationHelper.payrollBackdated):this.payPeriod.daysRemainingToSubmitDate>=1?(this.messagePanelClass="days-to-submit-payroll",1===this.payPeriod.daysRemainingToSubmitDate?this.messagePanelMessage=this.translationHelper.daysToSubmitPayrollSingular:this.messagePanelMessage=this.translationHelper.daysToSubmitPayrollPlural,this.messagePanelMessage&&(this.messagePanelMessage=this.messagePanelMessage.replace("{0}",this.payPeriod.daysRemainingToSubmitDate))):(this.messagePanelClass="error-unknown-state",o.error("Unknown state for current payroll message panel directive")):(this.messagePanelClass="hold-non-png-supported",this.messagePanelMessage=this.translationHelper.contactIfYouHaveQuestions):(this.messagePanelClass="hold-combined-pay-periods",this.messagePanelMessage=this.translationHelper.processWithScheduled):(this.messagePanelClass="hold-branch-will-review",this.messagePanelMessage=this.translationHelper.holdBranchWillReview):(this.messagePanelClass="hold-branch-needs-time",this.messagePanelMessage=this.translationHelper.holdBranchNeedsTime):(this.messagePanelClass="hold-client-should-contact",this.messagePanelMessage=this.translationHelper.holdClientShouldContact),this.updateMessage()(this.messagePanelMessage)},e.$inject=["TranslationHelper"],e.registeredName="CurrentPayrollMessagePanelController",e}()}),e("paychex.app.payroll/tile/directives/currentPayrollMessagePanel/CurrentPayrollMessagePanelDirective",["htmlregistry","paychex.app.payroll/tile/directives/currentPayrollMessagePanel/CurrentPayrollMessagePanelController"],function(e,t){return function(){function a(){this.link=function(e,t,a,r){e.$watch(function(){return r.payPeriod},function(e){e&&r.update()})},this.restrict="A",this.scope={payPeriod:"=",updateMessage:"&"},this.templateUrl=e.generateStaticPath("paychex.app.payroll","/tile/directives/currentPayrollMessagePanel/currentPayrollMessagePanel.tpl.html"),this.replace=!0,this.controller=t,this.controllerAs="currentPayrollMessagePanelController",this.bindToController=!0}return a.factory=function(){var e=function(){return new a};return e.$inject=[],e},a.registeredName="currentPayrollMessagePanel",a}()}),e("paychex.app.payroll/tile/currentPayroll/CurrentPayrollTileController",["lodash","paychex.core/Logger","paychex.core/Tracker","paychex.core/Promise","paychex.app.common/constants/ApplicationConstants","paychex.app.payroll/constants/PayrollApplicationConstants","paychex.app.common/data/userInfo/helper/UserInfoHelper","com/paychex/type/ProductType","paychex.app.common/DeviceProfile"],function(e,t,a,r,i,o,l,n,s){var c=t.get("paychex.app.payroll.tile.currentPayroll.CurrentPayrollTileController");return function(){function t(e,t,a,r,i,l,n,p,y,d,h,u){if(this.payrollDialogService=n,this.payPeriodStateManager=p,this.payrollAppLauncherHelper=e,this.payrollAnalytics=l,this.translationHelper=a,this.translationService=r,this.clientHelper=i,this.GlobalStateService=y,this.userNotificationMessage="",this.userPreferencesService=d,this.getMigrationDateService=h,this.payEntryStateManager=u,this.isOnlinePayrollStartAfterJulyRel=!1,this.isHtmlPayrollDefault=!0,this.migrationDateInfo={},this.countdownDays=0,this.julyReleaseTime=0,this.lifecyle={id:"paychex.app.payroll.tile.currentPayroll",init:this.init,load:this.load,canDisplay:this.canDisplay,initializeLocales:this.initializeLocales},this.bannerDetails={},t.attachTileController(this,this.lifecyle),c.debug(this.lifecycle.id+" added to TileManager"),s.isDesktop()){var P=this;P.subscription=P.userPreferencesService.get(o.HTML_PAYROLL_DEFAULT,!1).subscribe(function(e){P.isHtmlPayrollDefault=e})}}return t.prototype.init=function(){this.currentPayrollData={}},t.prototype.showQuickPayrollBetaBanner=function(){var t=this;return s.isDesktop()&&!t.isHtmlPayrollDefault&&!t.isOnlinePayrollStartAfterJulyRel&&t.payPeriodStateManager.payrollState.clientHelper.isPayrollBetaElibgible()&&!t.payPeriodStateManager.payrollState.clientHelper.isAllClientsNewToPayroll()&&(e.isUndefined(t.countdownDays)||t.countdownDays>0)},t.prototype.canDisplay=function(e){var t=r.defer(),a=this,l=!1;return this.payPeriodStateManager.checkInitialization(e.clients[0]).then(function(){l=a.payPeriodStateManager.payrollState.clientHelper.userInfoHelper.isInternalUser()?a.clientHelper.selectedClientHasProduct(o.ONLINE_PAYROLL):a.clientHelper.selectedClientHasProduct(i.BASIC_PAYROLL)||a.clientHelper.selectedClientHasProduct(i.PREMIER_PAYROLL)||a.clientHelper.selectedClientHasProduct(i.PBS_PRODUCT_CODE)||a.clientHelper.selectedClientHasProduct(i.PBSPR_PRODUCT_CODE),t.resolve(l)}).catch(function(e){t.reject(e)}).done(),t.promise},t.prototype.initializeLocales=function(){var t=this;t.locale={};var i=["png.payroll.tile.currentPayroll.title"],o=t.translationService.translate(i).then(function(a){return e.forEach(a,function(e,a){t.locale[i[a]]=e}),a}).catch(function(e){return a.errors.log(e,"Error during cpt translation"),e});return r.all([this.translationHelper.initTranslations(),o])},t.prototype.$onDestroy=function(){e.invoke(this.subscription,"dispose")},t.prototype.load=function(t){var a=this;return a.selectedClient=t.clients[0],a.getUserNotificationMessage=function(t){a.userNotificationMessage=t,e.isUndefined(t)||""===t||a.payrollAnalytics.userNotificationDisplayed(1,t)},this.payPeriodStateManager.checkInitialization(a.selectedClient).then(function(){a.payPeriodStateManager.currentPayPeriod||c.error("payPeriodStateManager.currentPayPeriod not set");var t=e.find(a.payPeriodStateManager.payrollState.clientPayrollData.clientPayrollProducts,{id:o.ONLINE_PAYROLL});e.isUndefined(t)||(a.isOnlinePayrollStartAfterJulyRel=!a.getMigrationDateService.isClientIdOverride(a.payPeriodStateManager.payrollState.client.displayId)&&t.startDate.getDate().getTime()>=a.julyReleaseTime),a.currentPayrollData.tilePayPeriod=a.payPeriodStateManager.currentPayPeriod,a.showCurrentPayPeriodDescription=e.get(a.currentPayrollData,"tilePayPeriod.hasMultipleSchedules")||e.isUndefined(a.currentPayrollData.tilePayPeriod.clientProductScheduleEntityId),a.endDate=a.currentPayrollData.tilePayPeriod.endDate.getDate(),a.checkDate=a.currentPayrollData.tilePayPeriod.checkDate.getDate()}).catch(o.CACHE_CLEAR_ERROR,function(e){c.info("CurrentPayrollTileController swallowed client cache clear ",e)}).then(function(){return a.getMigrationDateService.getMigrationDate().catch(function(e){return c.error(e),null})}).then(function(t){if(a.migrationDateInfo=t,t&&t.release_date){a.julyReleaseTime=new Date(t.release_date).getTime();var r=e.get(a.clientHelper.getClientProductSubscriptionsForClient(),o.ONLINE_PAYROLL);r&&(a.isOnlinePayrollStartAfterJulyRel=!a.getMigrationDateService.isClientIdOverride(a.payPeriodStateManager.payrollState.client.displayId)&&r[0].startTime>a.julyReleaseTime);var i=a.getMigrationDateService.getCalculations(a.migrationDateInfo,a.payPeriodStateManager.payrollState.client.displayId,e.get(a.payPeriodStateManager.payrollState.client,"branchId"),a.clientHelper.userInfoHelper.getUserInfo());a.countdownDays=i.countdownDays,a.getBannerStyle(a.countdownDays,i.eligibilityException)}}).finally(function(){e.isEqual(a.bannerDetails,{})&&(a.countdownDays=0,a.getBannerStyle(a.countdownDays,!1)),a.showQuickPayrollBetaBanner()&&a.payrollAnalytics.showQuickPayrollBetaBanner()})},t.prototype.analyticsParams=function(){try{var t=e.get(this,"payEntryStateManager.payrollState.selectedPayPeriod.payPeriodStatusType.id");return{workerCount:this.payEntryStateManager.getTotalWorkerCount(),clientId:e.get(this,"payEntryStateManager.payrollState.client.displayId"),countdownDays:this.countdownDays,checkDate:e.get(this,"payEntryStateManager.payrollState.selectedPayPeriod.checkDate",[]),checkCount:this.payEntryStateManager.payPeriodTotals?this.payEntryStateManager.payPeriodTotals.checkCount:"",payPeriodStatus:this.payrollAnalytics.convertPayPeriodStatusById(t),unscheduled:this.payEntryStateManager.payrollState.selectedPayPeriod.frequencyType===o.FREQUENCY_UNDEFINED}}catch(e){return c.error("Error occurred getting analytics params",e),{}}},t.prototype.goToQuickPayroll=function(){var t,a=e.get(this.currentPayrollData.tilePayPeriod.payPeriodStatusType,name,"");"ENTRY"===a?t=o.DIMENSION92_PAY_ENTRY_GRID:"INITIAL"===a?t=o.HTML5_BEGIN:"RELEASED"===a&&(t=o.HTML5_REVIEW_SUBMIT),this.payrollAnalytics.clickQuickPayrollBetaBanner(t);var r=e.find(this.GlobalStateService.getAvailable("app"),function(e){return e.id===i.HTML_PAYROLL_APP_CODE});r||c.error("appInfo undefined"),this.payrollAnalytics.tryItToday(this.analyticsParams()),this.GlobalStateService.setState({app:r},{appContext:{destination:o.QUICK_PAYROLL}}).done()},t.prototype.goToPayrollCenter=function(){var t,r=e.get(this.currentPayrollData.tilePayPeriod.payPeriodStatusType,name,"");"ENTRY"===r?t=o.CLASSIC_PAY_ENTRY:"INITIAL"===r?t=o.CLASSIC_START_PAYROLL:"RELEASED"===r&&(t=o.CLASSIC_REVIEW_SUBMIT),a.events.fire(o.GA_ACTION_TILE_NAVIGATION,{category:o.PAYROLL,dimension31:o.PAYROLL,dimension32:o.DASHBOARD,dimension92:t,label:"Current Payroll: Go to Payroll Center"}),this.payrollAppLauncherHelper.launchPayroll(null)},t.prototype.getBannerStyle=function(e,t){this.bannerDetails.className="beta-eligible-general-banner",this.bannerDetails.icon="payroll:quickPayroll",this.bannerDetails.displayText="png.payroll.tile.betaEligibility.MainTitle",t||e>30&&e<=60&&(this.bannerDetails.className="beta-eligible-firstChange-banner",this.bannerDetails.icon="bullhorn",this.bannerDetails.displayText="png.payroll.tile.betaEligibility.ChangeMainTitle1",this.isHtmlPayrollDefault||this.payrollAnalytics.countdownBanner(this.analyticsParams())),e<=30&&(this.bannerDetails.className="beta-eligible-secondChange-banner",this.bannerDetails.icon="hourglass_tilt",this.bannerDetails.displayText=e>1?"png.payroll.tile.betaEligibility.ChangeMainTitle2":"png.payroll.tile.betaEligibility.ChangeMainTitle2Singular",this.isHtmlPayrollDefault||this.payrollAnalytics.countdownBanner(this.analyticsParams()))},t.prototype.goToPayrollCenterV2=function(t){this.payrollAnalytics.payrollCenterTileClick();var a=e.isUndefined(this.userNotificationMessage)||""===this.userNotificationMessage?0:1;this.payrollAnalytics.viewPayrollCenterLinkClicked(a,this.userNotificationMessage,this.currentPayrollData.tilePayPeriod.checkDate,this.selectedClient.getDisplayId(),this.selectedClient.clientType,t),t&&this.payrollAnalytics.tourTheNewExperience(this.analyticsParams());var r=e.find(this.GlobalStateService.getAvailable("app"),function(e){return e.id===i.HTML_PAYROLL_APP_CODE}),o={appContext:{showPayrollTour:!0}};this.GlobalStateService.setState({app:r},t?o:void 0).done()},t.$inject=["PayrollAppLauncherHelper","TileManager","TranslationHelper","TranslationService","ClientHelper","PayrollAnalytics","PayrollDialogService","PayPeriodStateManager","GlobalStateService","UserPreferencesService","GetMigrationDateService","PayEntryStateManager"],t.registeredName="CurrentPayrollTileController",t}()}),e("paychex.app.payroll.tile.currentPayroll/module",["angular","paychex.app.payroll/state/module","paychex.app.payroll.shared","paychex.app.payroll/services/payrollDialogService/module","paychex.app.payroll/tile/directives/currentPayrollStatus/CurrentPayrollStatusController","paychex.app.payroll/tile/directives/currentPayrollStatus/CurrentPayrollStatusDirective","paychex.app.payroll/tile/directives/currentPayrollMessagePanel/CurrentPayrollMessagePanelController","paychex.app.payroll/tile/directives/currentPayrollMessagePanel/CurrentPayrollMessagePanelDirective","paychex.app.payroll/tile/data/currentPayrollData/CurrentPayrollDataService","paychex.app.payroll/tile/currentPayroll/CurrentPayrollTileController"],function(e,t,a,r,i,o,l,n,s,c){var p=e.module("paychex.app.payroll.tile.currentPayroll",[t.name,a.name,r.name]);return p.controller(i.registeredName,i),p.directive(o.registeredName,o.factory()),p.controller(l.registeredName,l),p.directive(n.registeredName,n.factory()),p.controller(c.registeredName,c),p.service(s.registeredName,s),p}),e("paychex.app.payroll.tile.currentPayroll/dynamicTile",["paychex.core/Promise","require"],function(e,t){return new e(function(e){t(["paychex.app.payroll.shared"],function(){t(["paychex.app.payroll.tile.currentPayroll/module"],function(t){e(t)})})})}),e("paychex.app.payroll.tile.currentPayroll/main",["paychex.app.payroll/amd-plugins/promise!./dynamicTile"],function(e){return e}),e("paychex.app.payroll.tile.currentPayroll",["paychex.app.payroll.tile.currentPayroll/main"],function(e){return e})}(define,require);
//# sourceMappingURL=main.js.map